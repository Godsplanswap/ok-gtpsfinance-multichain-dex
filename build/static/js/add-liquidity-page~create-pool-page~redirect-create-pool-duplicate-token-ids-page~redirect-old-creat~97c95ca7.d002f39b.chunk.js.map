{"version":3,"sources":["components/ConfirmAddModalBottom/index.tsx","components/Icons/SwitchIcon.tsx","components/CurrentPrice/index.tsx","components/PoolPriceBar/index.tsx","components/swap/FormattedPriceImpact.tsx","data/TotalSupply.ts","hooks/useZap.ts","pages/Pool/styleds.tsx","state/mint/hooks.ts"],"names":["Section","styled","div","theme","border","CurrentPriceWrapper","ConfirmAddModalBottom","pair","noLiquidity","price","currencies","parsedAmounts","poolTokenPercentage","onAdd","amplification","priceImpact","estimatedUsd","useTheme","amp","Fraction","JSBI","BigInt","divide","toSignificant","tokenA","useCurrencyConvertedToNative","Field","CURRENCY_A","tokenB","CURRENCY_B","style","gap","subHeader","fontSize","fontWeight","color","subText","symbol","currency","marginRight","alignItems","black","marginLeft","formattedNum","toString","undefined","greaterThan","lessThan","ONE_BIPS","toFixed","body","margin","padding","onClick","AddCircle","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CurrentPrice","useState","showInverted","setShowInverted","formattedPrice","invert","show","Boolean","baseCurrency","quoteCurrency","nativeQuote","nativeBase","label","display","Button","SwitchIcon","text","Card","OutlineCard3","ChevronUp2","ChevronUp","ChevronDown2","ChevronDown","PoolPriceBarWrapper","PoolPriceBarItem","isAdd","DefaultPriceRange","InvalidAMPPriceRange","PoolPriceBar","above768","useMedia","nativeA","nativeB","pt","textAlign","flex","ToggleComponent","children","title","question","showDetails","setShowDetails","paddingBottom","borderBottom","borderRadius","size","PoolPriceRangeBarToggle","PoolPriceRangeBar","wrappedA","wrapped","priceRangeCalcByPair","justify","text2","token0","existedPriceRange","priceRangeCalc","newPriceRange","FormattedPriceImpact","severity","warningSeverity","useTotalSupply","token","contract","useTokenContract","address","totalSupply","useSingleCallResult","result","TokenAmount","fromRawAmount","useZap","isStaticFeeContract","isOldStaticFeeContract","zapContract","useZapContract","useActiveWeb3React","isEVM","networkInfo","calculateZapInAmounts","useCallback","tokenIn","tokenOut","pool","userIn","classic","static","factory","console","error","calculateZapOutAmount","lpQty","useZapInAmounts","amounts","tokenInAmount","BigNumber","from","tokenOutAmount","setResult","useEffect","gt","handleCalculateZapInAmounts","useZapOutAmount","amount","eq","handleCalculateZapOutAmount","Wrapper","ClickableText","Text","primary","Dots","span","ZERO","useMintState","useSelector","state","mint","useDerivedMintInfo","currencyA","currencyB","pairAddress","isStaticFee","account","chainId","independentField","typedValue","otherTypedValue","dependentField","useMemo","usePairByAddress","pairState","isStaticFeePair","unAmplifiedPairAddresses","useUnAmplifiedPair","unAmplifiedPairAddress","liquidityToken","PairState","NOT_EXISTS","equal","quotient","WETH","balances","useCurrencyBalances","currencyBalances","independentAmount","tryParseAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOfReal","quote","isNative","CurrencyAmount","wrappedCurrencyA","priceOf","currencyAAmount","currencyBAmount","value","Price","denominator","numerator","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","e","Percent","add","INVALID","toExact","cA","cB","useMintActionHandlers","dispatch","useAppDispatch","onFieldAInput","typeInput","field","onFieldBInput","useDerivedZapInInfo","userInCurrencyAmount","zapInAmounts","insufficientLiquidity","selectedCurrency","NativeCurrencies","message","includes","useZapInActionHandlers","onFieldInput","onSwitchField","switchTokenField"],"mappings":"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","file":"static/js/add-liquidity-page~create-pool-page~redirect-create-pool-duplicate-token-ids-page~redirect-old-creat~97c95ca7.d002f39b.chunk.js","sourcesContent":["import { Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Currency, CurrencyAmount, Fraction, Percent, Price } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport CurrentPrice from 'components/CurrentPrice'\r\nimport { PoolPriceRangeBar } from 'components/PoolPriceBar'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport FormattedPriceImpact from 'components/swap/FormattedPriceImpact'\r\nimport { ONE_BIPS } from 'constants/index'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { Field } from 'state/mint/actions'\r\nimport { TYPE } from 'theme'\r\nimport { formattedNum } from 'utils'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  padding: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 4px;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst CurrentPriceWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nexport function ConfirmAddModalBottom({\r\n  pair,\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n  amplification,\r\n  priceImpact,\r\n  estimatedUsd,\r\n}: {\r\n  pair: Pair | null | undefined\r\n  noLiquidity?: boolean\r\n  price?: Price<Currency, Currency>\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n  amplification?: Fraction\r\n  priceImpact?: Percent\r\n  estimatedUsd?: [number, number]\r\n}) {\r\n  const theme = useTheme()\r\n  const amp = !!pair\r\n    ? new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)\r\n    : amplification?.divide(JSBI.BigInt(10000)).toSignificant(5)\r\n  const tokenA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A] as Currency)\r\n  const tokenB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B] as Currency)\r\n\r\n  return (\r\n    <>\r\n      <Section style={{ gap: '8px' }}>\r\n        <RowBetween>\r\n          <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n            <Trans>Pooled {tokenA?.symbol}</Trans>\r\n          </TYPE.subHeader>\r\n          <RowFixed>\r\n            <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n            <Flex alignItems=\"center\">\r\n              <TYPE.black fontSize={14} fontWeight={400}>\r\n                {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\r\n              </TYPE.black>\r\n              {estimatedUsd && !!estimatedUsd[0] && (\r\n                <Text color={theme.subText} marginLeft=\"4px\" fontSize={14}>\r\n                  ({formattedNum(estimatedUsd[0].toString(), true) || undefined})\r\n                </Text>\r\n              )}\r\n            </Flex>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n            <Trans>Pooled {tokenB?.symbol}</Trans>\r\n          </TYPE.subHeader>\r\n          <RowFixed>\r\n            <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n            <Flex alignItems=\"center\">\r\n              <TYPE.black fontSize={14} fontWeight={400}>\r\n                {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\r\n              </TYPE.black>\r\n\r\n              {estimatedUsd && !!estimatedUsd[1] && (\r\n                <Text color={theme.subText} marginLeft=\"4px\" fontSize={14}>\r\n                  ({formattedNum(estimatedUsd[1].toString(), true) || undefined})\r\n                </Text>\r\n              )}\r\n            </Flex>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <CurrentPriceWrapper>\r\n          <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n            <Trans>Current Price</Trans>\r\n          </TYPE.subHeader>\r\n          <TYPE.black fontWeight={400} fontSize={14}>\r\n            <CurrentPrice price={price} />\r\n          </TYPE.black>\r\n        </CurrentPriceWrapper>\r\n\r\n        <RowBetween>\r\n          <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n            <Trans>Your Share of Pool</Trans>\r\n          </TYPE.subHeader>\r\n          <TYPE.black fontSize={14} fontWeight={400}>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : poolTokenPercentage && poolTokenPercentage.greaterThan('0')\r\n              ? poolTokenPercentage?.lessThan(ONE_BIPS)\r\n                ? '<0.01'\r\n                : poolTokenPercentage?.toFixed(2)\r\n              : '0'}\r\n            %\r\n          </TYPE.black>\r\n        </RowBetween>\r\n\r\n        {priceImpact && (\r\n          <RowBetween>\r\n            <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n              <Trans>Price Impact</Trans>\r\n            </TYPE.subHeader>\r\n            <TYPE.black fontSize={14} fontWeight={400}>\r\n              <FormattedPriceImpact priceImpact={priceImpact} />\r\n            </TYPE.black>\r\n          </RowBetween>\r\n        )}\r\n      </Section>\r\n\r\n      {noLiquidity && (\r\n        <Section>\r\n          <TYPE.body>AMP{!!amp ? <>&nbsp;=&nbsp;{amp}</> : ''}</TYPE.body>\r\n          <PoolPriceRangeBar pair={pair} currencies={currencies} price={price} amplification={amplification} />\r\n        </Section>\r\n      )}\r\n\r\n      <ButtonPrimary style={{ margin: '4px 0 0 0', padding: '16px' }} onClick={onAdd}>\r\n        <Text fontWeight={500} fontSize={18}>\r\n          {noLiquidity ? 'Create Pool' : 'Confirm'}\r\n        </Text>\r\n      </ButtonPrimary>\r\n    </>\r\n  )\r\n}\r\n","const AddCircle = ({ width, height, color }: { width?: number; height?: number; color?: string }) => {\r\n  return (\r\n    <svg width={width || 24} height={height || 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M8 9H16\" stroke={color || 'white'} strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path\r\n        d=\"M10 13L8 15L10 17\"\r\n        stroke={color || 'white'}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path d=\"M16 15H8\" stroke={color || 'white'} strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path\r\n        d=\"M14 7L16 9L14 11\"\r\n        stroke={color || 'white'}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default AddCircle\r\n","import { Currency, Price } from '@kyberswap/ks-sdk-core'\r\nimport React, { useState } from 'react'\r\nimport { Text } from 'rebass'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport SwitchIcon from 'components/Icons/SwitchIcon'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\ninterface CurrentPriceProps {\r\n  price?: Price<Currency, Currency>\r\n}\r\n\r\nexport default function CurrentPrice({ price }: CurrentPriceProps) {\r\n  const theme = useTheme()\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  const formattedPrice = showInverted ? price?.toSignificant(8) : price?.invert()?.toSignificant(8)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const nativeQuote = useCurrencyConvertedToNative(price?.quoteCurrency as Currency)\r\n  const nativeBase = useCurrencyConvertedToNative(price?.baseCurrency as Currency)\r\n  const label = showInverted\r\n    ? `1 ${nativeBase?.symbol} = ${formattedPrice ?? '-'} ${nativeQuote?.symbol}`\r\n    : `1 ${nativeQuote?.symbol} = ${formattedPrice ?? '-'} ${nativeBase?.symbol}`\r\n\r\n  return (\r\n    <Text fontWeight={400} fontSize={14}>\r\n      {show ? (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ marginRight: '4px' }}>{label}</div>\r\n          <ButtonEmpty\r\n            padding=\"0\"\r\n            width=\"fit-content\"\r\n            onClick={() => setShowInverted && setShowInverted(!showInverted)}\r\n          >\r\n            <SwitchIcon color={theme.text} />\r\n          </ButtonEmpty>\r\n        </div>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import { Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Currency, Fraction, Percent, Price } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { ReactNode, useState } from 'react'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport { ONE_BIPS } from 'constants/index'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { Field } from 'state/mint/actions'\r\nimport { TYPE } from 'theme'\r\nimport { priceRangeCalc, priceRangeCalcByPair, useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nconst DEFAULT_MIN_PRICE = '0.00'\r\nconst DEFAULT_MAX_PRICE = '♾️'\r\n\r\nconst Section = styled(Card)`\r\n  padding: 16px;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst OutlineCard3 = styled(Section)`\r\n  text-align: left;\r\n`\r\n\r\nconst ChevronUp2 = styled(ChevronUp)`\r\n  color: ${({ theme }) => theme.text};\r\n`\r\nconst ChevronDown2 = styled(ChevronDown)`\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst PoolPriceBarWrapper = styled.div<{ isAdd?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst PoolPriceBarItem = styled.div<{ isAdd?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    justify-content: flex-end;\r\n    flex-direction: ${({ isAdd }) => (isAdd ? 'row' : 'column-reverse')};\r\n    flex: ${({ isAdd }) => (isAdd ? 1 : 'unset')};\r\n  }\r\n`\r\n\r\nconst DefaultPriceRange = () => {\r\n  return (\r\n    <>\r\n      <TYPE.black fontWeight={400}>Max: {DEFAULT_MAX_PRICE}</TYPE.black>\r\n      <TYPE.black fontWeight={400}>Min: {DEFAULT_MIN_PRICE}</TYPE.black>\r\n    </>\r\n  )\r\n}\r\n\r\nconst InvalidAMPPriceRange = () => {\r\n  return (\r\n    <>\r\n      <TYPE.black>-</TYPE.black>\r\n      <TYPE.black>-</TYPE.black>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price<Currency, Currency>\r\n  pair: Pair | null | undefined\r\n}) {\r\n  const theme = useTheme()\r\n  const above768 = useMedia('(min-width: 768px)')\r\n  const nativeA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A] as Currency)\r\n  const nativeB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B] as Currency)\r\n\r\n  return (\r\n    <PoolPriceBarWrapper isAdd={!noLiquidity}>\r\n      {noLiquidity && (\r\n        <>\r\n          <PoolPriceBarItem>\r\n            <Text fontWeight={400} fontSize={14} color={theme.subText} pt={1} textAlign=\"center\">\r\n              {nativeB?.symbol} <Trans>per</Trans> {nativeA?.symbol}\r\n            </Text>\r\n            <TYPE.black fontWeight={400} fontSize={14} color={theme.text}>\r\n              {price?.toSignificant(6) ?? '-'}\r\n            </TYPE.black>\r\n          </PoolPriceBarItem>\r\n\r\n          <PoolPriceBarItem>\r\n            <Text fontWeight={400} fontSize={14} color={theme.subText} pt={1} textAlign=\"center\">\r\n              {nativeA?.symbol} <Trans>per</Trans> {nativeB?.symbol}\r\n            </Text>\r\n            <TYPE.black fontWeight={400} fontSize={14} color={theme.text}>\r\n              {price?.invert()?.toSignificant(6) ?? '-'}\r\n            </TYPE.black>\r\n          </PoolPriceBarItem>\r\n        </>\r\n      )}\r\n\r\n      <PoolPriceBarItem isAdd={!noLiquidity}>\r\n        <Text fontWeight={400} fontSize={14} color={theme.subText} pt={noLiquidity ? 1 : 0} style={{ flex: 1 }}>\r\n          {noLiquidity ? <Trans>Share of Pool</Trans> : <Trans>Your Share of Pool</Trans>}\r\n        </Text>\r\n        <TYPE.black\r\n          fontWeight={400}\r\n          color={theme.text}\r\n          fontSize={14}\r\n          style={{ flex: noLiquidity ? 'none' : 1 }}\r\n          textAlign={above768 ? 'left' : 'right'}\r\n        >\r\n          {noLiquidity && price\r\n            ? '100'\r\n            : poolTokenPercentage && poolTokenPercentage.greaterThan('0')\r\n            ? poolTokenPercentage?.lessThan(ONE_BIPS)\r\n              ? '<0.01'\r\n              : poolTokenPercentage?.toFixed(2)\r\n            : '0'}\r\n          %\r\n        </TYPE.black>\r\n      </PoolPriceBarItem>\r\n    </PoolPriceBarWrapper>\r\n  )\r\n}\r\n\r\nexport function ToggleComponent({\r\n  children,\r\n  title = '',\r\n  question = '',\r\n}: {\r\n  children: ReactNode\r\n  title: string\r\n  question?: string\r\n}) {\r\n  const theme = useTheme()\r\n  const [showDetails, setShowDetails] = useState(true)\r\n  return (\r\n    <>\r\n      <RowBetween style={{ paddingBottom: '14px', borderBottom: `1px solid ${theme.border}` }}>\r\n        <AutoRow>\r\n          <Text fontWeight={500} fontSize={16} color={theme.text}>\r\n            {title}\r\n          </Text>\r\n          {question && <QuestionHelper text={question} />}\r\n        </AutoRow>\r\n        <RowFixed gap=\"8px\">\r\n          <ButtonEmpty\r\n            padding=\"6px 8px\"\r\n            borderRadius=\"12px\"\r\n            width=\"fit-content\"\r\n            onClick={() => setShowDetails(!showDetails)}\r\n          >\r\n            {showDetails ? (\r\n              <ChevronUp2 size=\"20\" style={{ marginLeft: '10px' }} />\r\n            ) : (\r\n              <ChevronDown2 size=\"20\" style={{ marginLeft: '10px' }} />\r\n            )}\r\n          </ButtonEmpty>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showDetails && <>{children}</>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport function PoolPriceRangeBarToggle({\r\n  currencies,\r\n  price,\r\n  pair,\r\n  amplification,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  price?: Price<Currency, Currency> | Fraction\r\n  pair: Pair | null | undefined\r\n  amplification?: Fraction\r\n}) {\r\n  return (\r\n    <OutlineCard3>\r\n      <ToggleComponent\r\n        title={t`Active Price Range`}\r\n        question={t`Tradable token pair price range for this pool based on AMP. If the price goes below or above this range, the pool may become inactive.`}\r\n      >\r\n        <PoolPriceRangeBar currencies={currencies} price={price} pair={pair} amplification={amplification} />\r\n      </ToggleComponent>\r\n    </OutlineCard3>\r\n  )\r\n}\r\n\r\nexport function PoolPriceRangeBar({\r\n  currencies,\r\n  price,\r\n  pair,\r\n  amplification,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  price?: Price<Currency, Currency> | Fraction\r\n  pair: Pair | null | undefined\r\n  amplification?: Fraction\r\n}) {\r\n  const theme = useTheme()\r\n  const nativeA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A] as Currency)\r\n  const nativeB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B] as Currency)\r\n\r\n  const wrappedA = nativeA?.wrapped\r\n\r\n  const existedPriceRange = () => {\r\n    const amp = amplification?.divide(JSBI.BigInt(10000))\r\n    const show = !!pair && !!priceRangeCalcByPair(pair)[0][0]\r\n    return (\r\n      <AutoColumn gap=\"md\">\r\n        <AutoRow justify=\"space-between\" gap=\"4px\">\r\n          <AutoColumn gap=\"4px\">\r\n            <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\r\n              {nativeB?.symbol} <Trans>Per</Trans> {nativeA?.symbol}\r\n            </Text>\r\n            {!amp || amp.lessThan('1') ? (\r\n              <InvalidAMPPriceRange />\r\n            ) : show && !!pair ? (\r\n              <>\r\n                <TYPE.black color={theme.text} fontWeight={400}>\r\n                  Max:{' '}\r\n                  {priceRangeCalcByPair(pair)[wrappedA?.symbol === pair.token0.symbol ? 0 : 1][1]?.toSignificant(6) ??\r\n                    '-'}\r\n                </TYPE.black>\r\n                <TYPE.black color={theme.text} fontWeight={400}>\r\n                  Min:{' '}\r\n                  {priceRangeCalcByPair(pair)[wrappedA?.symbol === pair.token0.symbol ? 0 : 1][0]?.toSignificant(6) ??\r\n                    '-'}\r\n                </TYPE.black>\r\n              </>\r\n            ) : (\r\n              <DefaultPriceRange />\r\n            )}\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"4px\" justify=\"end\">\r\n            <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\r\n              {nativeA?.symbol} <Trans>Per</Trans> {nativeB?.symbol}\r\n            </Text>\r\n            {!amp || amp.lessThan('1') ? (\r\n              <InvalidAMPPriceRange />\r\n            ) : show && !!pair ? (\r\n              <>\r\n                <TYPE.black color={theme.text} fontWeight={400}>\r\n                  Max:{' '}\r\n                  {priceRangeCalcByPair(pair)[wrappedA?.symbol === pair.token0.symbol ? 1 : 0][1]?.toSignificant(6) ??\r\n                    '-'}\r\n                </TYPE.black>\r\n                <TYPE.black color={theme.text} fontWeight={400}>\r\n                  Min:{' '}\r\n                  {priceRangeCalcByPair(pair)[wrappedA?.symbol === pair.token0.symbol ? 1 : 0][0]?.toSignificant(6) ??\r\n                    '-'}\r\n                </TYPE.black>\r\n              </>\r\n            ) : (\r\n              <DefaultPriceRange />\r\n            )}\r\n          </AutoColumn>\r\n        </AutoRow>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const newPriceRange = () => {\r\n    const amp = amplification?.divide(JSBI.BigInt(10000))\r\n    const show = !!priceRangeCalc(price, amp)[0]\r\n    return (\r\n      <AutoColumn gap=\"md\">\r\n        <AutoRow justify=\"space-between\" gap=\"4px\">\r\n          <AutoColumn gap=\"sm\">\r\n            <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\r\n              {nativeB?.symbol} <Trans>Per</Trans> {nativeA?.symbol}\r\n            </Text>\r\n            {!amp || amp.lessThan('1') ? (\r\n              <InvalidAMPPriceRange />\r\n            ) : show ? (\r\n              <>\r\n                <TYPE.black color={theme.text}>\r\n                  Max: {priceRangeCalc(price, amp)[0]?.toSignificant(6) ?? '-'}\r\n                </TYPE.black>\r\n                <TYPE.black color={theme.text}>\r\n                  Min: {priceRangeCalc(price, amp)[1]?.toSignificant(6) ?? '-'}\r\n                </TYPE.black>\r\n              </>\r\n            ) : (\r\n              <DefaultPriceRange />\r\n            )}\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"sm\" justify=\"end\">\r\n            <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\r\n              {nativeA?.symbol} <Trans>Per</Trans> {nativeB?.symbol}\r\n            </Text>\r\n            {!amp || amp.lessThan('1') ? (\r\n              <InvalidAMPPriceRange />\r\n            ) : show ? (\r\n              <>\r\n                <TYPE.black color={theme.text}>\r\n                  Max: {priceRangeCalc(price?.invert(), amp)[0]?.toSignificant(6) ?? '-'}\r\n                </TYPE.black>\r\n                <TYPE.black color={theme.text}>\r\n                  Min: {priceRangeCalc(price?.invert(), amp)[1]?.toSignificant(6) ?? '-'}\r\n                </TYPE.black>\r\n              </>\r\n            ) : (\r\n              <DefaultPriceRange />\r\n            )}\r\n          </AutoColumn>\r\n        </AutoRow>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  return <>{!!pair ? existedPriceRange() : newPriceRange()}</>\r\n}\r\n","import { Percent } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { ONE_BIPS } from 'constants/index'\r\nimport { warningSeverity } from 'utils/prices'\r\n\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  if (!priceImpact || priceImpact.lessThan('0')) {\r\n    return <div>--</div>\r\n  }\r\n\r\n  return (\r\n    <ErrorText fontWeight={500} fontSize={14} severity={warningSeverity(priceImpact)}>\r\n      {priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { useTokenContract } from 'hooks/useContract'\r\nimport { useSingleCallResult } from 'state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? TokenAmount.fromRawAmount(token, totalSupply.toString()) : undefined\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useZapContract } from 'hooks/useContract'\r\n\r\nconst useZap = (isStaticFeeContract: boolean, isOldStaticFeeContract: boolean) => {\r\n  const zapContract = useZapContract(isStaticFeeContract, isOldStaticFeeContract)\r\n  const { isEVM, networkInfo } = useActiveWeb3React()\r\n  const calculateZapInAmounts = useCallback(\r\n    async (tokenIn: string, tokenOut: string, pool: string, userIn: BigNumber) => {\r\n      if (!isEVM) return\r\n      try {\r\n        const result =\r\n          isStaticFeeContract && !isOldStaticFeeContract\r\n            ? await zapContract?.calculateZapInAmounts(\r\n                (networkInfo as EVMNetworkInfo).classic.static.factory,\r\n                tokenIn,\r\n                tokenOut,\r\n                pool,\r\n                userIn,\r\n              )\r\n            : await zapContract?.calculateZapInAmounts(tokenIn, tokenOut, pool, userIn)\r\n\r\n        return result\r\n      } catch (err) {\r\n        console.error(err)\r\n        throw err\r\n      }\r\n    },\r\n    [zapContract, isEVM, networkInfo, isStaticFeeContract, isOldStaticFeeContract],\r\n  )\r\n\r\n  const calculateZapOutAmount = useCallback(\r\n    async (tokenIn: string, tokenOut: string, pool: string, lpQty: BigNumber) => {\r\n      if (!isEVM) return\r\n      try {\r\n        const result =\r\n          isStaticFeeContract && !isOldStaticFeeContract\r\n            ? await zapContract?.calculateZapOutAmount(\r\n                (networkInfo as EVMNetworkInfo).classic.static.factory,\r\n                tokenIn,\r\n                tokenOut,\r\n                pool,\r\n                lpQty,\r\n              )\r\n            : await zapContract?.calculateZapOutAmount(tokenIn, tokenOut, pool, lpQty)\r\n\r\n        return result\r\n      } catch (err) {\r\n        console.error(err)\r\n        throw err\r\n      }\r\n    },\r\n    [zapContract, isEVM, networkInfo, isStaticFeeContract, isOldStaticFeeContract],\r\n  )\r\n\r\n  return {\r\n    zapContract,\r\n    calculateZapInAmounts,\r\n    calculateZapOutAmount,\r\n  }\r\n}\r\n\r\nexport const useZapInAmounts = (\r\n  isStaticFeeContract: boolean,\r\n  isOldStaticFeeContract: boolean,\r\n  tokenIn?: string,\r\n  tokenOut?: string,\r\n  pool?: string,\r\n  userIn?: BigNumber,\r\n) => {\r\n  const { calculateZapInAmounts } = useZap(isStaticFeeContract, isOldStaticFeeContract)\r\n  const [result, setResult] = useState<{\r\n    amounts: {\r\n      tokenInAmount: BigNumber\r\n      tokenOutAmount: BigNumber\r\n    }\r\n    error?: Error\r\n  }>({\r\n    amounts: {\r\n      tokenInAmount: BigNumber.from(0),\r\n      tokenOutAmount: BigNumber.from(0),\r\n    },\r\n    error: undefined,\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function handleCalculateZapInAmounts() {\r\n      if (!userIn) {\r\n        setResult({\r\n          amounts: {\r\n            tokenInAmount: BigNumber.from(0),\r\n            tokenOutAmount: BigNumber.from(0),\r\n          },\r\n          error: undefined,\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      try {\r\n        if (tokenIn && tokenOut && pool && userIn?.gt(0)) {\r\n          const amounts = await calculateZapInAmounts(tokenIn, tokenOut, pool, userIn)\r\n\r\n          setResult({\r\n            amounts,\r\n            error: undefined,\r\n          })\r\n        }\r\n      } catch (err) {\r\n        setResult({\r\n          amounts: {\r\n            tokenInAmount: BigNumber.from(0),\r\n            tokenOutAmount: BigNumber.from(0),\r\n          },\r\n          error: err as Error,\r\n        })\r\n      }\r\n    }\r\n\r\n    handleCalculateZapInAmounts()\r\n  }, [calculateZapInAmounts, pool, tokenIn, tokenOut, userIn])\r\n\r\n  return result\r\n}\r\n\r\nexport const useZapOutAmount = (\r\n  isStaticFeeContract: boolean,\r\n  isOldStaticFeeContract: boolean,\r\n  tokenIn?: string,\r\n  tokenOut?: string,\r\n  pool?: string,\r\n  lpQty?: BigNumber,\r\n) => {\r\n  const { calculateZapOutAmount } = useZap(isStaticFeeContract, isOldStaticFeeContract)\r\n  const [result, setResult] = useState<{ amount: BigNumber; error?: any }>({\r\n    amount: BigNumber.from(0),\r\n    error: undefined,\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function handleCalculateZapOutAmount() {\r\n      if (!lpQty || lpQty.eq(0)) {\r\n        setResult({\r\n          amount: BigNumber.from(0),\r\n          error: undefined,\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      try {\r\n        if (tokenIn && tokenOut && pool && lpQty?.gt(0)) {\r\n          const amount = await calculateZapOutAmount(tokenIn, tokenOut, pool, lpQty)\r\n          setResult({\r\n            amount,\r\n            error: undefined,\r\n          })\r\n        }\r\n      } catch (err) {\r\n        setResult({\r\n          amount: BigNumber.from(0),\r\n          error: err as Error,\r\n        })\r\n      }\r\n    }\r\n\r\n    handleCalculateZapOutAmount()\r\n  }, [calculateZapOutAmount, tokenIn, tokenOut, pool, lpQty])\r\n\r\n  return result\r\n}\r\n","import { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Currency, CurrencyAmount, Percent, Price, TokenAmount, WETH } from '@kyberswap/ks-sdk-core'\r\nimport { t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport { PairState, usePairByAddress, useUnAmplifiedPair } from 'data/Reserves'\r\nimport { useTotalSupply } from 'data/TotalSupply'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useZapInAmounts } from 'hooks/useZap'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { AppState } from 'state/index'\r\nimport { tryParseAmount } from 'state/swap/hooks'\r\nimport { useCurrencyBalances } from 'state/wallet/hooks'\r\n\r\nimport { Field, switchTokenField, typeInput } from './actions'\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>(state => state.mint)\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  pairAddress: string | undefined,\r\n  isStaticFee?: boolean,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\r\n  price?: Price<Currency, Currency>\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n  unAmplifiedPairAddress?: string\r\n  isStaticFeePair?: boolean\r\n  isOldStaticFeeContract?: boolean\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const tokenA = currencies[Field.CURRENCY_A]?.wrapped\r\n  const tokenB = currencies[Field.CURRENCY_B]?.wrapped\r\n  const [pairState, pair, isStaticFeePair, isOldStaticFeeContract] = usePairByAddress(tokenA, tokenB, pairAddress)\r\n  const unAmplifiedPairAddresses = useUnAmplifiedPair(tokenA, tokenB)\r\n  const unAmplifiedPairAddress = unAmplifiedPairAddresses\r\n    ? isStaticFee || isStaticFeePair\r\n      ? unAmplifiedPairAddresses[0]\r\n      : unAmplifiedPairAddresses[1]\r\n    : ''\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    (pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO))) &&\r\n    (tokenA?.symbol !== WETH[chainId].symbol || tokenB?.symbol !== WETH[chainId].symbol)\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances([currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\r\n    typedValue,\r\n    currencies[independentField],\r\n  )\r\n\r\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    } else if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = independentAmount?.wrapped\r\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\r\n\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOfReal(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOfReal(tokenB).quote(wrappedIndependentAmount)\r\n\r\n        return dependentCurrency?.isNative\r\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\r\n          : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\r\n    return {\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }\r\n  }, [independentAmount, dependentAmount, independentField])\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        const value = currencyBAmount.divide(currencyAAmount)\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\r\n      }\r\n      return undefined\r\n    } else {\r\n      const wrappedCurrencyA = currencyA?.wrapped\r\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n    }\r\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\r\n\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      try {\r\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n      } catch (e) {\r\n        console.error(e)\r\n        return undefined\r\n      }\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [parsedAmounts, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = t`Connect wallet`\r\n  }\r\n\r\n  if ((pairAddress && pairState === PairState.INVALID) || tokenA?.symbol === tokenB?.symbol) {\r\n    error = error ?? 'Invalid pair'\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (\r\n    (!currencyAAmount && typedValue) ||\r\n    (!currencyBAmount && otherTypedValue) ||\r\n    currencyBAmount?.toExact() === '0' ||\r\n    currencyAAmount?.toExact() === '0'\r\n  ) {\r\n    error = error ?? t`Invalid amount`\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? t`Enter an amount`\r\n  }\r\n\r\n  const cA = currencies[Field.CURRENCY_A]\r\n  const cB = currencies[Field.CURRENCY_B]\r\n  if (!!cA && currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    error = t`Insufficient ${cA.symbol} balance`\r\n  }\r\n\r\n  if (!!cB && currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    error = t`Insufficient ${cB.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n    unAmplifiedPairAddress,\r\n    isStaticFeePair,\r\n    isOldStaticFeeContract,\r\n  }\r\n}\r\n\r\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedZapInInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  pairAddress: string | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\r\n  parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined }\r\n  price?: Price<Currency, Currency>\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  insufficientLiquidity?: boolean\r\n  error?: string\r\n  unAmplifiedPairAddress?: string\r\n  isStaticFeePair?: boolean\r\n  isOldStaticFeeContract?: boolean\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue } = useMintState()\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const tokenA = currencies[Field.CURRENCY_A]?.wrapped\r\n  const tokenB = currencies[Field.CURRENCY_B]?.wrapped\r\n  const [pairState, pair, isStaticFeePair, isOldStaticFeeContract] = usePairByAddress(tokenA, tokenB, pairAddress)\r\n  const unAmplifiedPairAddresses = useUnAmplifiedPair(tokenA, tokenB)\r\n  const unAmplifiedPairAddress = unAmplifiedPairAddresses\r\n    ? isStaticFeePair\r\n      ? unAmplifiedPairAddresses[0]\r\n      : unAmplifiedPairAddresses[1]\r\n    : ''\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const noLiquidity: boolean =\r\n    (pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO))) &&\r\n    (tokenA?.symbol !== WETH[chainId].symbol || tokenB?.symbol !== WETH[chainId].symbol)\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(\r\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies]),\r\n  )\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  const userInCurrencyAmount = useMemo(() => {\r\n    return tryParseAmount(typedValue, currencies[independentField], true)\r\n  }, [currencies, independentField, typedValue])\r\n\r\n  const userIn = useMemo(() => {\r\n    return userInCurrencyAmount ? BigNumber.from(userInCurrencyAmount.quotient.toString()) : undefined\r\n  }, [userInCurrencyAmount])\r\n\r\n  const zapInAmounts = useZapInAmounts(\r\n    !!isStaticFeePair,\r\n    !!isOldStaticFeeContract,\r\n    dependentField === Field.CURRENCY_B ? tokenA?.address : tokenB?.address,\r\n    dependentField === Field.CURRENCY_B ? tokenB?.address : tokenA?.address,\r\n    pair?.address,\r\n    userIn,\r\n  )\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\r\n    zapInAmounts.amounts.tokenInAmount.toString(),\r\n    currencies[independentField]?.wrapped,\r\n    false,\r\n  )\r\n\r\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = independentAmount?.wrapped\r\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\r\n\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentTokenAmount = tryParseAmount(\r\n          zapInAmounts.amounts.tokenOutAmount.toString(),\r\n          currencies[dependentField]?.wrapped,\r\n          false,\r\n        )\r\n\r\n        return dependentTokenAmount\r\n      }\r\n\r\n      return undefined\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [independentAmount, currencyA, currencyB, pair, zapInAmounts.amounts.tokenOutAmount, currencies, dependentField])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\r\n    return {\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }\r\n  }, [independentAmount, dependentAmount, independentField])\r\n\r\n  const price = useMemo(() => {\r\n    const wrappedCurrencyA = currencyA?.wrapped\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [currencyA, pair])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\r\n\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      try {\r\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n      } catch (e) {\r\n        console.error(e)\r\n        return undefined\r\n      }\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [parsedAmounts, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let insufficientLiquidity = false\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = t`Connect wallet`\r\n  }\r\n\r\n  if ((pairAddress && pairState === PairState.INVALID) || (tokenA?.symbol === 'WETH' && tokenB?.symbol === 'WETH')) {\r\n    error = error ?? 'Invalid pair'\r\n  }\r\n\r\n  if (!typedValue && (!parsedAmounts[independentField] || !parsedAmounts[dependentField])) {\r\n    error = error ?? t`Enter an amount`\r\n  }\r\n\r\n  if (\r\n    (!parsedAmounts[independentField] && typedValue) ||\r\n    parsedAmounts[independentField]?.toExact() === '0' ||\r\n    parsedAmounts[dependentField]?.toExact() === '0'\r\n  ) {\r\n    error = error ?? t`Invalid amount`\r\n  }\r\n\r\n  const selectedCurrency = currencies[independentField]\r\n  if (\r\n    !!selectedCurrency &&\r\n    independentAmount &&\r\n    userInCurrencyAmount &&\r\n    (currencyBalances?.[independentField]?.lessThan(independentAmount) ||\r\n      currencyBalances?.[independentField]?.lessThan(userInCurrencyAmount))\r\n  ) {\r\n    error = t`Insufficient ${\r\n      selectedCurrency.isNative ? NativeCurrencies[chainId].symbol : selectedCurrency.symbol\r\n    } balance`\r\n  }\r\n\r\n  if (zapInAmounts.error && zapInAmounts.error.message.includes('INSUFFICIENT_LIQUIDITY')) {\r\n    insufficientLiquidity = true\r\n  }\r\n\r\n  if (zapInAmounts.error && !zapInAmounts.error.message.includes('INSUFFICIENT_LIQUIDITY')) {\r\n    error = t`Something went wrong`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    insufficientLiquidity,\r\n    error,\r\n    unAmplifiedPairAddress,\r\n    isStaticFeePair,\r\n    isOldStaticFeeContract,\r\n  }\r\n}\r\n\r\nexport function useZapInActionHandlers(): {\r\n  onFieldInput: (typedValue: string) => void\r\n  onSwitchField: () => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n  const { independentField } = useMintState()\r\n\r\n  const onFieldInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: independentField, typedValue, noLiquidity: false }))\r\n    },\r\n    [dispatch, independentField],\r\n  )\r\n\r\n  const onSwitchField = useCallback(() => {\r\n    dispatch(switchTokenField({ field: independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A }))\r\n  }, [dispatch, independentField])\r\n\r\n  return {\r\n    onFieldInput,\r\n    onSwitchField,\r\n  }\r\n}\r\n"],"sourceRoot":""}