{"version":3,"sources":["components/Icons/SwitchIcon.tsx","components/CurrentPrice/index.tsx","components/LiquidityProviderMode/index.tsx","components/PoolList/styled.tsx","components/Slider/index.tsx","components/ZapError/index.tsx","components/swap/FormattedPriceImpact.tsx","data/TotalSupply.ts","hooks/useZap.ts","pages/Pool/styleds.tsx","state/burn/hooks.ts","hooks/useIsArgentWallet.ts","pages/RemoveLiquidity/TokenPair.tsx","pages/RemoveLiquidity/ZapOut.tsx","pages/RemoveLiquidity/index.tsx","pages/RemoveLiquidity/styled.tsx","utils/useDebouncedChangeHandler.tsx"],"names":["AddCircle","width","height","color","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CurrentPrice","price","theme","useTheme","useState","showInverted","setShowInverted","formattedPrice","toSignificant","invert","show","Boolean","baseCurrency","quoteCurrency","nativeQuote","useCurrencyConvertedToNative","nativeBase","label","symbol","fontWeight","fontSize","style","display","alignItems","marginRight","Button","padding","onClick","SwitchIcon","text","Tab","styled","TabItem","LiquidityProviderMode","activeTab","setActiveTab","singleTokenInfo","active","role","size","isActive","subText","ListItemGroupContainer","div","border","isDisableShowTwoPools","isShowExpandedPools","rgba","tableHeader","background","ItemCardGroupContainer","TableRow","isShowBorderBottom","DataText","Flex","text7","ButtonWrapper","PoolAddressContainer","AddressAndAMPContainer","AddressWrapper","TextAMP","TokenPairContainer","TextTokenPair","TextAMPLiquidity","AMPLiquidityAndTVLContainer","TextTVL","TextShowMorePools","primary","disabled","mediaWidth","upToMedium","DashedDivider","bg14","ChevronContainer","StyledItemCard","HeaderContainer","HeaderTitle","HeaderAMPAndAddress","TokenRatioContainer","tabBackgound","TokenRatioGrid","Progress","value","tabActive","TokenRatioName","TokenRatioPercent","TabContainer","InformationContainer","ButtonGroupContainer","FooterContainer","StyledRangeInput","input","Slider","onChange","min","step","max","className","changeCallback","useCallback","e","parseInt","target","type","marginLeft","ZapErrorWrapper","warning","red","ZapError","message","FormattedPriceImpact","priceImpact","lessThan","severity","warningSeverity","ONE_BIPS","toFixed","useTotalSupply","token","contract","useTokenContract","address","totalSupply","useSingleCallResult","result","TokenAmount","fromRawAmount","toString","undefined","useZap","isStaticFeeContract","isOldStaticFeeContract","zapContract","useZapContract","useActiveWeb3React","isEVM","networkInfo","calculateZapInAmounts","tokenIn","tokenOut","pool","userIn","classic","static","factory","console","error","calculateZapOutAmount","lpQty","useZapInAmounts","amounts","tokenInAmount","BigNumber","from","tokenOutAmount","setResult","useEffect","gt","handleCalculateZapInAmounts","useZapOutAmount","amount","eq","handleCalculateZapOutAmount","Wrapper","ClickableText","Text","Dots","span","useBurnState","useSelector","state","burn","useDerivedBurnInfo","currencyA","currencyB","pairAddress","account","independentField","typedValue","dependentField","Field","CURRENCY_A","CURRENCY_B","currencies","useMemo","tokenA","wrapped","tokenB","usePairByAddress","pair","isStaticFeePair","useUserSlippageTolerance","allowedSlippage","userLiquidity","useTokenBalance","liquidityToken","tokens","LIQUIDITY","liquidityValueA","JSBI","greaterThanOrEqual","quotient","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","Percent","LIQUIDITY_PERCENT","independentAmount","tryParseAmount","greaterThan","liquidityValue","parsedAmounts","currency","multiply","amountsMin","calculateSlippageAmount","wrappedCurrencyA","priceOf","useIsArgentWallet","argentWalletDetector","useArgentWalletDetectorContract","call","NEVER_RELOAD","TokenPair","currencyIdA","currencyIdB","useCurrency","chainId","library","useWeb3React","nativeA","nativeB","currencyAIsETHER","isNative","currencyAIsWETH","equals","WETH","currencyBIsETHER","currencyBIsWETH","toggleWalletModal","useWalletModalToggle","contractAddress","oldStatic","router","dynamic","amp","BigInt","dispatch","useAppDispatch","onUserInput","field","typeInput","useBurnActionHandlers","_onUserInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","useTransactionDeadline","removeLiquidityError","setRemoveLiquidityError","formattedAmounts","equalTo","pairContract","usePairContract","signatureData","setSignatureData","useApproveCallback","approval","approveCallback","toExact","isArgentWallet","Error","liquidityAmount","nonces","nonce","EIP712Domain","name","domain","version","verifyingContract","Permit","owner","TransactionErrorContent","spender","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","then","splitSignature","signature","v","r","s","catch","code","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransactionWithType","useTransactionAdder","onRemove","currencyAmountA","currencyAmountB","routerContract","getOldStaticFeeRouterContract","getStaticFeeRouterContract","getDynamicFeeRouterContract","currencyBIsETH","oneCurrencyIsETH","ApprovalState","APPROVED","methodNames","args","Promise","all","map","methodName","estimateGas","calculateGasMargin","safeGasEstimates","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","hash","TRANSACTION_TYPE","REMOVE_LIQUIDITY","summary","NativeCurrencies","arbitrary","poolAddress","token_1","token_2","remove_liquidity_method","Fraction","divide","err","cause","captureException","extra","includes","usdPrices","useTokensPrice","estimatedUsdCurrencyA","parseFloat","estimatedUsdCurrencyB","pendingText","liquidityPercentChangeCallback","handleDismissConfirmation","useDebouncedChangeHandler","Number","innerLiquidityPercentage","setInnerLiquidityPercentage","modalHeader","gap","marginTop","CurrencyLogo","formattedNum","italic","textAlign","modalBottom","paddingBottom","subHeader","black","Row","currency0","currency1","margin","formatJSBIValue","decimals","TransactionConfirmationModal","isOpen","onDismiss","content","title","topContent","bottomContent","borderRadius","Loader","CurrencyInputPanel","hideBalance","hideLogo","onMax","onHalf","disableCurrencySelect","Token","id","marginBottom","onCurrencySelect","estimatedUsd","justifyContent","replace","to","currencyId","justify","borderBottom","paddingTop","position","confirmed","NOT_APPROVED","PENDING","ZapOut","useExpertModeManager","expertMode","independentTokenField","dependentTokenField","insufficientLiquidity","liquidityToRemove","numerator","denominator","zapOutAmount","independentTokenAmount","dependentTokenAmount","noZapAmounts","useDerivedZapOutInfo","onSwitchField","switchTokenField","useZapOutActionHandlers","selectedCurrencyIsETHER","selectedCurrencyIsWETH","independentToken","zapOutError","setZapOutError","zap","onCurrencyInput","getZapContract","unshift","handleSwitchCurrency","priceToSwap","amountOut","subtract","independentTokenPrice","computePriceImpact","priceImpactWithoutFee","computePriceImpactWithoutFee","priceImpactSeverity","disabledInput","onSwitchCurrency","showCommonBases","positionMax","isSwitchMode","RemoveLiquidity","match","params","oneCurrencyIsWETH","mixpanelHandler","useMixpanel","MIXPANEL_TYPE","REMOVE_LIQUIDITY_INITIATED","action","LiquidityAction","REMOVE","showUnwrapped","PageWrapper","Container","GridColumn","TopBar","LiquidityProviderModeWrapper","PoolName","FirstColumn","AutoColumn","SecondColumn","MaxButton","button","upToSmall","DetailWrapper","DetailBox","TokenWrapper","ModalDetailWrapper","CurrentPriceWrapper","debouncedMs","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout"],"mappings":"2bAuBeA,EAvBG,IAAoF,IAAjFC,EAAgF,EAAhFA,MAAOC,EAAyE,EAAzEA,OAAQC,EAAiE,EAAjEA,MAClC,OACE,sBAAKF,MAAOA,GAAS,GAAIC,OAAQA,GAAU,GAAIE,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAArF,UACE,sBAAMC,EAAE,UAAUC,OAAQL,GAAS,QAASM,YAAY,MAAMC,cAAc,QAAQC,eAAe,UACnG,sBACEJ,EAAE,oBACFC,OAAQL,GAAS,QACjBM,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBAAMJ,EAAE,WAAWC,OAAQL,GAAS,QAASM,YAAY,MAAMC,cAAc,QAAQC,eAAe,UACpG,sBACEJ,EAAE,mBACFC,OAAQL,GAAS,QACjBM,YAAY,MACZC,cAAc,QACdC,eAAe,YAhBrB,E,yDCYa,SAASC,EAAT,GAAqD,IAAD,EAA5BC,EAA4B,EAA5BA,MAC/BC,EAAQC,cACd,EAAwCC,oBAAkB,GAA1D,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAiBF,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAOO,cAAc,GAAxB,OAA6BP,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOQ,gBAApC,aAA6B,EAAiBD,cAAc,GAEzFE,EAAOC,SAAa,OAALV,QAAK,IAALA,OAAA,EAAAA,EAAOW,gBAAP,OAAuBX,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOY,gBAC7CC,EAAcC,YAA4B,OAACd,QAAD,IAACA,OAAD,EAACA,EAAOY,eAClDG,EAAaD,YAA4B,OAACd,QAAD,IAACA,OAAD,EAACA,EAAOW,cACjDK,EAAQZ,EAAY,mBACjBW,QADiB,IACjBA,OADiB,EACjBA,EAAYE,OADK,qBACOX,QADP,IACOA,IAAkB,IADzB,mBACgCO,QADhC,IACgCA,OADhC,EACgCA,EAAaI,QAD7C,mBAEjBJ,QAFiB,IAEjBA,OAFiB,EAEjBA,EAAaI,OAFI,qBAEQX,QAFR,IAEQA,IAAkB,IAF1B,mBAEiCS,QAFjC,IAEiCA,OAFjC,EAEiCA,EAAYE,QAEvE,OACE,cAAC,IAAD,CAAMC,WAAY,IAAKC,SAAU,GAAjC,SACGV,EACC,sBAAKW,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,UACE,qBAAKF,MAAO,CAAEG,YAAa,OAA3B,SAAqCP,IACrC,cAACQ,EAAA,EAAD,CACEC,QAAQ,IACRrC,MAAM,cACNsC,QAAS,IAAMrB,GAAmBA,GAAiBD,GAHrD,SAKE,cAACuB,EAAD,CAAYrC,MAAOW,EAAM2B,YAI7B,KAIP,C,wXCrCKC,EAAMC,kBAAOC,KAAV,gFAAGD,CAAH,kBAgCME,IA5Be,IAQvB,IAPLC,EAOI,EAPJA,UACAC,EAMI,EANJA,aACAC,EAKI,EALJA,gBAMMlC,EAAQC,cACd,OACE,eAAC,IAAD,CAAckB,MAAO,CAAEK,QAAS,OAAhC,UACE,cAACI,EAAD,CAAKO,OAAsB,IAAdH,EAAiBP,QAAS,IAAMQ,EAAa,GAAIG,KAAK,SAAnE,SACE,uCAEF,eAACR,EAAD,CAAKO,OAAsB,IAAdH,EAAiBP,QAAS,IAAMQ,EAAa,GAAIG,KAAK,SAAnE,UACE,uCACA,cAAC,IAAD,CACET,KAAMO,EACNG,KAAM,GACNC,SAAwB,IAAdN,EACV3C,MAAqB,IAAd2C,EAAkBhC,EAAM2B,KAAO3B,EAAMuC,eAXpD,C,u2CCjBWC,EAAyBX,UAAOY,IAAV,oFAAGZ,CAAH,qEAChB,QAAG7B,EAAH,EAAGA,MAAH,0BAA4BA,EAAM0C,OAAlC,IACP,KAAGC,sBAAqD,UAAY,YAC1D,QAAG3C,EAAH,EAAGA,MAAH,SAAU4C,oBACNC,YAAK7C,EAAM8C,YAAa,IAAO9C,EAAM+C,UADzC,IAIhB,QAAG/C,EAAH,EAAGA,MAAO2C,EAAV,EAAUA,sBAAuBC,EAAjC,EAAiCA,oBAAjC,OACCD,IAA0BC,GAA3B,4BAAuE5C,EAAM8C,YAD7E,IAKOE,EAAyBnB,UAAOY,IAAV,oFAAGZ,CAAH,qEAOtBoB,EAAWpB,UAAOY,IAAV,sEAAGZ,CAAH,iRAgBA,QAAG7B,EAAH,EAAGA,MAAH,SAAUkD,mBACP,oBAAgBL,YAAK7C,EAAM0C,OAAQ,KAAS,MAD/C,IAKRS,EAAWtB,kBAAOuB,KAAV,sEAAGvB,CAAH,sCACV,KAAG7B,MAAkBqD,QAInBC,EAAgBzB,kBAAOuB,KAAV,2EAAGvB,CAAH,0DAMb0B,EAAuB1B,kBAAOuB,KAAV,kFAAGvB,CAAH,yBAIpB2B,EAAyB3B,UAAOY,IAAV,oFAAGZ,CAAH,iDAMtB4B,EAAiB5B,UAAOY,IAAV,4EAAGZ,CAAH,wCAKd6B,EAAU7B,UAAOY,IAAV,qEAAGZ,CAAH,+BAET,KAAG7B,MAAkBuC,UAGnBoB,EAAqB9B,UAAOY,IAAV,gFAAGZ,CAAH,iDAMlB+B,EAAgB/B,UAAOY,IAAV,4EAAGZ,CAAH,MAEbgC,EAAmBhC,UAAOY,IAAV,+EAAGZ,CAAH,MAEhBiC,EAA8BjC,UAAOY,IAAV,0FAAGZ,CAAH,sEAO3BkC,EAAUlC,UAAOY,IAAV,sEAAGZ,CAAH,+BAET,KAAG7B,MAAkBuC,UAGnByB,EAAoBnC,UAAOY,IAAV,gFAAGZ,CAAH,wJAGnB,KAAG7B,MAAkBiE,UAO5B,KAAGC,SAAwB,qBAEzB,KAAGA,SAAgB,qBAGrB,KAAGlE,MAAkBmE,WAAWC,WAA/B,IAAD,6CAKSC,EAAgBxC,UAAOY,IAAV,4EAAGZ,CAAH,SACtB,QAAG7B,EAAH,EAAGA,MAAH,gDAC4BA,EAAMsE,KADlC,YAKSC,EAAmB1C,UAAOY,IAAV,+EAAGZ,CAAH,sBAIhB2C,EAAiB3C,UAAOY,IAAV,6EAAGZ,CAAH,sJAOX,KAAG7B,MAAkB+C,aAIjC,KAAG/C,MAAkBmE,WAAWC,WAA/B,IAAD,wEAMSK,EAAkB5C,UAAOY,IAAV,8EAAGZ,CAAH,uFAOf6C,EAAc7C,UAAOY,IAAV,0EAAGZ,CAAH,iGAGb,KAAG7B,MAAkB2B,OAMnBgD,EAAsB9C,UAAOY,IAAV,kFAAGZ,CAAH,sHAKrB,KAAG7B,MAAkBuC,UAMnBqC,EAAsB/C,UAAOY,IAAV,kFAAGZ,CAAH,uFAChB,KAAG7B,MAAkB6E,eAOxBC,EAAiBjD,UAAOY,IAAV,6EAAGZ,CAAH,wHASdkD,EAAWlD,UAAOY,IAAV,uEAAGZ,CAAH,0IAKV,KAAGmD,MAAoB,MAClB,KAAGhF,MAAkBiF,YAKxBC,EAAiBrD,UAAOY,IAAV,6EAAGZ,CAAH,qCAKdsD,EAAoBtD,UAAOY,IAAV,gFAAGZ,CAAH,+CAGnB,KAAG7B,MAAkBuC,UAGnB6C,EAAevD,UAAOY,IAAV,2EAAGZ,CAAH,2FAET,KAAG7B,MAAkB6E,eAOxB/C,EAAUD,UAAOY,IAAV,sEAAGZ,CAAH,oMAGT,QAAG7B,EAAH,EAAGA,MAAH,SAAUmC,OAAuBnC,EAAM2B,KAAO3B,EAAMuC,OAApD,IACK,QAAGvC,EAAH,EAAGA,MAAH,SAAUmC,OAAuBnC,EAAMiF,UAAY,aAAnD,IAWHI,EAAuBxD,UAAOY,IAAV,mFAAGZ,CAAH,iDAMpByD,EAAuBzD,UAAOY,IAAV,mFAAGZ,CAAH,wCASpB0D,EAAkB1D,UAAOY,IAAV,8EAAGZ,CAAH,gD,mECzP5B,oMAGM2D,EAAmB3D,UAAO4D,MAAV,+EAAG5D,CAAH,uuCAgBR,KAAGQ,OACJ,KAAGA,OACQ,KAAGrC,MAAkBuC,UAIhC,KAAGvC,MAAkBuC,UAUpB,KAAGF,OACJ,KAAGA,OACQ,KAAGrC,MAAkBuC,UAGhC,KAAGvC,MAAkBuC,UAUpB,KAAGF,OACJ,KAAGA,OACQ,KAAGrC,MAAkBuC,UAEhC,KAAGvC,MAAkBuC,UAUO,KAAGvC,MAAkBuC,UAAY,KAAGvC,MAAkBuC,UAKtD,KAAGvC,MAAkBuC,UAAY,KAAGvC,MAAkBuC,UAS7E,KAAGvC,MAAkBuC,UAIrB,KAAGvC,MAAkBuC,UAGrB,KAAGvC,MAAkBuC,UAexB,SAASmD,EAAT,GASO,IARpBV,EAQmB,EARnBA,MACAW,EAOmB,EAPnBA,SAOmB,IANnBC,WAMmB,MANb,EAMa,MALnBC,YAKmB,MALZ,EAKY,MAJnBC,WAImB,MAJb,IAIa,MAHnBzD,YAGmB,MAHZ,GAGY,EAFnBlB,EAEmB,EAFnBA,MACA4E,EACmB,EADnBA,UAEMC,EAAiBC,uBACpBC,IACCP,EAASQ,SAASD,EAAEE,OAAOpB,OAA3B,GAEF,CAACW,IAGH,OACE,cAACH,EAAD,CACEnD,KAAMA,EACNgE,KAAK,QACLrB,MAAOA,EACP7D,MAAOA,GAAgB,CAAEhC,MAAO,MAAOmH,WAAY,GAAIhF,YAAa,GAAIE,QAAS,UACjFmE,SAAUK,EACV,kBAAgB,eAChBH,KAAMA,EACND,IAAKA,EACLE,IAAKA,EACLC,UAAWA,GAGhB,C,qECnID,iRAMaQ,EAAkB1E,UAAOY,IAAV,+EAAGZ,CAAH,0JAIZ,QAAG7B,EAAH,EAAGA,MAAOwG,EAAV,EAAUA,QAAV,OAAwB3D,YAAK2D,EAAUxG,EAAMwG,QAAUxG,EAAMyG,IAAK,IAAlE,IAIL,KAAGzG,MAAkB2B,OAgBjB+E,IAXE,IAAoE,IAAjEC,EAAgE,EAAhEA,QAASH,EAAuD,EAAvDA,QACrBxG,EAAQC,cAEd,OACE,eAACsG,EAAD,CAAiBC,QAASA,EAA1B,UACE,cAAC,IAAD,CAAenH,MAAOmH,EAAUxG,EAAMwG,QAAUxG,EAAMyG,IAAKtF,MAAO,CAAExB,YAAa,KAAO0C,KAAM,KAC7FsE,IAHL,C,gFCpBF,uLAQe,SAASC,EAAT,GAA2E,IAA3CC,EAA0C,EAA1CA,YAC7C,OAAKA,GAAeA,EAAYC,SAAS,KAChC,qCAIP,cAAC,IAAD,CAAW7F,WAAY,IAAKC,SAAU,GAAI6F,SAAUC,YAAgBH,GAApE,SACGA,EAAYC,SAASG,KAAY,SAAjC,UAA+CJ,EAAYK,QAAQ,GAAnE,MAGN,C,2DCnBD,yKAOO,SAASC,EAAeC,GAAyC,IAAD,IAC/DC,EAAWC,YAAgB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAOG,SAAS,GAE5CC,EAAsB,UAAGC,YAAoBJ,EAAU,sBAAjC,iBAAG,EAA8CK,cAAjD,aAAG,EAAuD,GAEtF,OAAON,GAASI,EAAcG,cAAYC,cAAcR,EAAOI,EAAYK,iBAAcC,CAC1F,C,ofCPKC,EAAS,CAACC,EAA8BC,KAC5C,IAAMC,EAAcC,YAAeH,EAAqBC,GACxD,EAA+BG,cAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YACTC,EAAwBtC,sBAAW,iDACvC,WAAOuC,EAAiBC,EAAkBC,EAAcC,GAAxD,oFACON,EADP,8DAIML,GAAwBC,EAJ9B,uCAKgBC,QALhB,IAKgBA,OALhB,EAKgBA,EAAaK,sBAChBD,EAA+BM,QAAQC,OAAOC,QAC/CN,EACAC,EACAC,EACAC,GAVZ,kEAYgBT,QAZhB,IAYgBA,OAZhB,EAYgBA,EAAaK,sBAAsBC,EAASC,EAAUC,EAAMC,GAZ5E,mCAGUjB,EAHV,uBAcWA,GAdX,wCAgBIqB,QAAQC,MAAR,MAhBJ,+DADuC,4DAqBvC,CAACd,EAAaG,EAAOC,EAAaN,EAAqBC,IAGnDgB,EAAwBhD,sBAAW,iDACvC,WAAOuC,EAAiBC,EAAkBC,EAAcQ,GAAxD,oFACOb,EADP,8DAIML,GAAwBC,EAJ9B,uCAKgBC,QALhB,IAKgBA,OALhB,EAKgBA,EAAae,sBAChBX,EAA+BM,QAAQC,OAAOC,QAC/CN,EACAC,EACAC,EACAQ,GAVZ,kEAYgBhB,QAZhB,IAYgBA,OAZhB,EAYgBA,EAAae,sBAAsBT,EAASC,EAAUC,EAAMQ,GAZ5E,mCAGUxB,EAHV,uBAcWA,GAdX,wCAgBIqB,QAAQC,MAAR,MAhBJ,+DADuC,4DAqBvC,CAACd,EAAaG,EAAOC,EAAaN,EAAqBC,IAGzD,MAAO,CACLC,cACAK,wBACAU,wBAHF,EAOWE,EAAkB,CAC7BnB,EACAC,EACAO,EACAC,EACAC,EACAC,KAEA,IAAQJ,EAA0BR,EAAOC,EAAqBC,GAAtDM,sBACR,EAA4BrI,mBAMzB,CACDkJ,QAAS,CACPC,cAAeC,IAAUC,KAAK,GAC9BC,eAAgBF,IAAUC,KAAK,IAEjCP,WAAOlB,IAXT,mBAAOJ,EAAP,KAAe+B,EAAf,KAmDA,OArCAC,qBAAU,KAAM,sDACd,iGACOf,EADP,uBAEIc,EAAU,CACRL,QAAS,CACPC,cAAeC,IAAUC,KAAK,GAC9BC,eAAgBF,IAAUC,KAAK,IAEjCP,WAAOlB,IAPb,wCAcQU,GAAWC,GAAYC,GAAvB,OAA+BC,QAA/B,IAA+BA,KAAQgB,GAAG,IAdlD,gCAe4BpB,EAAsBC,EAASC,EAAUC,EAAMC,GAf3E,OAeYS,EAfZ,OAiBMK,EAAU,CACRL,UACAJ,WAAOlB,IAnBf,yDAuBI2B,EAAU,CACRL,QAAS,CACPC,cAAeC,IAAUC,KAAK,GAC9BC,eAAgBF,IAAUC,KAAK,IAEjCP,MAAM,EAAD,KA5BX,2DADc,uBAAC,WAAD,wBAkCdY,EAA6B,GAC5B,CAACrB,EAAuBG,EAAMF,EAASC,EAAUE,IAE7CjB,CAAP,EAGWmC,EAAkB,CAC7B7B,EACAC,EACAO,EACAC,EACAC,EACAQ,KAEA,IAAQD,EAA0BlB,EAAOC,EAAqBC,GAAtDgB,sBACR,EAA4B/I,mBAA6C,CACvE4J,OAAQR,IAAUC,KAAK,GACvBP,WAAOlB,IAFT,mBAAOJ,EAAP,KAAe+B,EAAf,KAmCA,OA9BAC,qBAAU,KAAM,sDACd,iGACOR,IAASA,EAAMa,GAAG,GADzB,uBAEIN,EAAU,CACRK,OAAQR,IAAUC,KAAK,GACvBP,WAAOlB,IAJb,wCAWQU,GAAWC,GAAYC,GAAvB,OAA+BQ,QAA/B,IAA+BA,KAAOS,GAAG,IAXjD,gCAY2BV,EAAsBT,EAASC,EAAUC,EAAMQ,GAZ1E,OAYYY,EAZZ,OAaML,EAAU,CACRK,SACAd,WAAOlB,IAff,yDAmBI2B,EAAU,CACRK,OAAQR,IAAUC,KAAK,GACvBP,MAAM,EAAD,KArBX,2DADc,uBAAC,WAAD,wBA2BdgB,EAA6B,GAC5B,CAACf,EAAuBT,EAASC,EAAUC,EAAMQ,IAE7CxB,CAAP,C,8DC5KF,uOAGauC,EAAUpI,UAAOY,IAAV,sEAAGZ,CAAH,wBAIPqI,EAAgBrI,kBAAOsI,KAAV,4EAAGtI,CAAH,uCAIf,KAAG7B,MAAkBiE,UAGnBmG,EAAOvI,UAAOwI,KAAV,mEAAGxI,CAAH,sL,4mCCOV,SAASyI,IACd,OAAOC,aAAwCC,GAASA,EAAMC,MAC/D,CAEM,SAASC,EACdC,EACAC,EACAC,GAoBC,IAAD,EAiBI7B,EAhBI8B,EAAY1C,cAAZ0C,QAER,EAAyCR,IAAjCS,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,WACpBC,EAAiBF,IAAqBG,IAAMC,WAAaD,IAAME,WAAaF,IAAMC,WAGlFE,EAA8CC,mBAClD,MACE,CAACJ,IAAMC,YAAP,OAAoBR,QAApB,IAAoBA,SAAa7C,EACjC,CAACoD,IAAME,YAAP,OAAoBR,QAApB,IAAoBA,SAAa9C,KAEnC,CAAC6C,EAAWC,IAGPW,EAAP,OAA0BZ,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWa,QAAtBC,EAAf,OAA8Cb,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAWY,QAKzD,EAA0DE,YAAiBH,EAAQE,EAAQZ,GAA3F,mBAASc,EAAT,KAAeC,EAAf,KAAgC3D,EAAhC,KAEA,EAA0B4D,cAAnBC,EAAP,oBAGMC,EAAgBC,YAAe,OAACL,QAAD,IAACA,OAAD,EAACA,EAAMM,gBAEtCC,EAAS,CACb,CAAChB,IAAMC,YAAaI,EACpB,CAACL,IAAME,YAAaK,EACpB,CAACP,IAAMiB,WAAP,OAAmBR,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMM,gBAIrBzE,EAAcL,YAAc,OAACwE,QAAD,IAACA,OAAD,EAACA,EAAMM,gBACnCG,EACJT,GACAnE,GACAuE,GACAR,GAEAc,IAAKC,mBAAmB9E,EAAY+E,SAAUR,EAAcQ,UACxD5E,cAAYC,cAAc2D,EAAQI,EAAKa,kBAAkBjB,EAAQ/D,EAAauE,GAAeQ,eAC7FzE,EACA2E,EACJd,GACAnE,GACAuE,GACAN,GAEAY,IAAKC,mBAAmB9E,EAAY+E,SAAUR,EAAcQ,UACxD5E,cAAYC,cAAc6D,EAAQE,EAAKa,kBAAkBf,EAAQjE,EAAauE,GAAeQ,eAC7FzE,EACA4E,EAA0F,CAC9F,CAACxB,IAAMC,YAAaiB,EACpB,CAAClB,IAAME,YAAaqB,GAGlBE,EAA2B,IAAIC,UAAQ,IAAK,OAEhD,GAAI7B,IAAqBG,IAAM2B,kBAC7BF,EAAkB,IAAIC,UAAQ5B,EAAY,YAGvC,GAAID,IAAqBG,IAAMiB,WAClC,UAAIR,QAAJ,IAAIA,KAAMM,eAAgB,CACxB,IACwF,EADlFa,EAAoBC,YAAe/B,EAAYW,EAAKM,gBAC1D,GAAIa,GAAqBf,GAAiBe,EAAkBE,YAAYjB,GACtE/C,EAAK,UAAGA,SAAH,QAAY,8BAGf8D,GAAqBf,IAAkBe,EAAkBE,YAAYjB,KACvEY,EAAkB,IAAIC,UAAQE,EAAkBP,SAAUR,EAAcQ,UAE3E,OAID,GAAIL,EAAOnB,GAAmB,CAC5B,IAAM+B,EAAoBC,YAAe/B,EAAYkB,EAAOnB,IACtDkC,EAAiBP,EAAgB3B,GACnC+B,GAAqBG,IAAmBH,EAAkBE,YAAYC,KACxEN,EAAkB,IAAIC,UAAQE,EAAkBP,SAAUU,EAAeV,UAE5E,CAGH,IAyC6G,EAI5B,EA7C3EW,EAKF,CACF,CAAChC,IAAM2B,mBAAoBF,EAC3B,CAACzB,IAAMiB,WACLJ,GAAiBY,GAAmBA,EAAgBK,YAAY,KAC5DrF,cAAYC,cAAcmE,EAAcoB,SAAUR,EAAgBS,SAASrB,EAAcQ,UAAUA,eACnGzE,EACN,CAACoD,IAAMC,YACLI,GAAUoB,GAAmBA,EAAgBK,YAAY,MAAQZ,EAC7DzE,cAAYC,cAAc2D,EAAQoB,EAAgBS,SAAShB,EAAgBG,UAAUA,eACrFzE,EACN,CAACoD,IAAME,YACLK,GAAUkB,GAAmBA,EAAgBK,YAAY,MAAQP,EAC7D9E,cAAYC,cAAc6D,EAAQkB,EAAgBS,SAASX,EAAgBF,UAAUA,eACrFzE,GAGFuF,EAAa,CACjB,CAACnC,IAAMC,YACL+B,GAAiBA,EAAchC,IAAMC,YACjCmC,YAAwBJ,EAAchC,IAAMC,YAAyCW,GAAiB,QACtGhE,EACN,CAACoD,IAAME,YACL8B,GAAiBA,EAAchC,IAAME,YACjCkC,YAAwBJ,EAAchC,IAAME,YAAyCU,GAAiB,QACtGhE,GAGF/H,EAAQuL,mBAAQ,KACpB,IAAMiC,EAAgB,OAAG5C,QAAH,IAAGA,OAAH,EAAGA,EAAWa,QACpC,OAAOG,GAAQ4B,EAAmB5B,EAAK6B,QAAQD,QAAoBzF,CAAnE,GACC,CAAC6C,EAAWgB,KAEVb,IACH9B,EAAQ,yBAGLkE,EAAchC,IAAMiB,YAAee,EAAchC,IAAMC,aAAgB+B,EAAchC,IAAME,eAC9FpC,EAAK,UAAGA,SAAH,QAAY,0BAGf+C,GAAa,UAAImB,EAAchC,IAAMiB,kBAAxB,OAAI,EAAgCa,YAAYjB,KAC/D/C,EAAK,UAAGA,SAAH,QAAY,+BAGnB,MAAO,CACLiC,iBACAI,aACAM,OACAI,gBACAmB,gBACAG,aACAtN,QACAiJ,QACA4C,kBACA3D,yBAEH,C,k/BC/Lc,SAASwF,IAA8B,IAAD,IAC3C3C,EAAY1C,cAAZ0C,QACF4C,EAAuBC,cACvBC,EAAOnG,YAAoBiG,EAAsB,iBAAkB,QAAC5C,QAAD,IAACA,SAAWhD,GAAY+F,KACjG,wBAAOD,QAAP,IAAOA,GAAP,UAAOA,EAAMlG,cAAb,aAAO,EAAe,UAAtB,QACD,C,wgBCuDc,SAASoG,GAAT,GAQX,IAAD,8BAPDC,EAOC,EAPDA,YACAC,GAMC,EANDA,YACAnD,GAKC,EALDA,YAMOF,GAAP,UAAgCsD,YAAYF,UAA5C,aAA4DjG,EAA1C8C,GAAlB,UAAuEqD,YAAYD,WAAnF,aAAmGlG,EACnG,GAAiDM,cAAzC0C,GAAR,GAAQA,QAASoD,GAAjB,GAAiBA,QAAS7F,GAA1B,GAA0BA,MAAOC,GAAjC,GAAiCA,YACzB6F,GAAYC,cAAZD,QAEFE,GAAU1D,GACV2D,GAAU1D,GAChB,GAAyBU,mBAAQ,IAAM,QAACX,SAAD,IAACA,QAAD,EAACA,GAAWa,QAAZ,OAAqBZ,SAArB,IAAqBA,QAArB,EAAqBA,GAAWY,UAAU,CAACb,GAAWC,KAA7F,qBAAOW,GAAP,MAAeE,GAAf,MAEM8C,KAAoB,OAAC5D,SAAD,IAACA,QAAW6D,UAChCC,KAAmB,OAAC9D,SAAD,IAACA,QAAW+D,OAAOC,OAAKT,MAC3CU,KAAoB,OAAChE,SAAD,IAACA,QAAW4D,UAChCK,KAAmB,OAACjE,SAAD,IAACA,QAAW8D,OAAOC,OAAKT,MAE3ClO,GAAQC,cAGR6O,GAAoBC,eAG1B,GAAyCzE,IAAjCS,GAAR,GAAQA,iBAAkBC,GAA1B,GAA0BA,WAC1B,GACEN,EAAkB,OAACC,SAAD,IAACA,WAAa7C,EAAd,OAAyB8C,SAAzB,IAAyBA,WAAa9C,EAAW+C,IAD7Dc,GAAR,GAAQA,KAAMI,GAAd,GAAcA,cAAemB,GAA7B,GAA6BA,cAAeG,GAA5C,GAA4CA,WAAYtN,GAAxD,GAAwDA,MAAOiJ,GAA/D,GAA+DA,MAAO4C,GAAtE,GAAsEA,gBAAiB3D,GAAvF,GAAuFA,uBAEjF+G,GAAkB3G,GACpBuD,GACE3D,GAAsB,UACnBK,GAA+BM,QAAQqG,iBADpB,aACpB,EAAmDC,OAClD5G,GAA+BM,QAAQC,OAAOqG,OAHpC,UAIZ5G,GAA+BM,QAAQuG,eAJ3B,aAIb,EAAiDD,YACnDpH,EACEsH,IAAU,OAAJzD,SAAI,IAAJA,QAAA,EAAAA,GAAMyD,MAAO/C,IAAKgD,OAAO,GACrC,GF8FK,WAGL,IAAMC,EAAWC,cASjB,MAAO,CACLC,YARkBvJ,uBAClB,CAACwJ,EAAczE,KACbsE,EAASI,YAAU,CAAED,QAAOzE,eAA5B,GAEF,CAACsE,IAMJ,CE7GuCK,GAAjBC,GAArB,GAAQJ,YACFK,IAAW7G,GAGjB,GAAsC9I,oBAAkB,GAAxD,qBAAO4P,GAAP,MAAoBC,GAApB,MACA,GAA0C7P,oBAAS,GAAnD,qBAAO8P,GAAP,MAAsBC,GAAtB,MAGA,GAA4B/P,mBAAiB,IAA7C,qBAAOgQ,GAAP,MAAeC,GAAf,MACMC,GAAWC,eACjB,GAA0BxE,cAAnBC,GAAP,qBACA,GAAwD5L,mBAAiB,IAAzE,qBAAOoQ,GAAP,MAA6BC,GAA7B,MAEMC,GAAmB,CACvB,CAACtF,IAAM2B,mBAAoBK,GAAchC,IAAM2B,mBAAmB4D,QAAQ,KACtE,IACAvD,GAAchC,IAAM2B,mBAAmB/F,SAAS,IAAI8F,UAAQ,IAAK,QACjE,KACAM,GAAchC,IAAM2B,mBAAmB3F,QAAQ,GACnD,CAACgE,IAAMiB,WACLpB,KAAqBG,IAAMiB,UAAYnB,GAAvC,oBAAoDkC,GAAchC,IAAMiB,kBAAxE,aAAoD,EAAgC7L,cAAc,UAAlG,QAAwG,GAC1G,CAAC4K,IAAMC,YACLJ,KAAqBG,IAAMC,WAAaH,GAAxC,oBAAqDkC,GAAchC,IAAMC,mBAAzE,aAAqD,EAAiC7K,cAAc,UAApG,QAA0G,GAC5G,CAAC4K,IAAME,YACLL,KAAqBG,IAAME,WAAaJ,GAAxC,oBAAqDkC,GAAchC,IAAME,mBAAzE,aAAqD,EAAiC9K,cAAc,UAApG,QAA0G,IAIxGoQ,GAAgCC,YAAe,OAAChF,SAAD,IAACA,IAAD,UAACA,GAAMM,sBAAP,aAAC,EAAsB1E,SAG5E,GAA0CrH,mBAAuE,MAAjH,qBAAO0Q,GAAP,MAAsBC,GAAtB,MACA,GAAoCC,YAAmB5D,GAAchC,IAAMiB,WAAY6C,IAAvF,qBAAO+B,GAAP,MAAiBC,GAAjB,MAGAtH,qBAAU,KACRmH,GAAiB,KAAjB,GAEC,QAAC9E,SAAD,IAACA,QAAD,EAACA,GAAekF,YAEnB,IAAMC,GAAiBzD,IAvEtB,wDAyED,6GACOS,GADP,sBACsB,IAAIiD,MAAM,iBADhC,UAEOT,IAAiB/E,IAASwC,IAAYiC,GAF7C,sBAE6D,IAAIe,MAAM,wBAFvE,UAGQC,EAAkBlE,GAAchC,IAAMiB,WAH9C,sBAI8B,IAAIgF,MAAM,4BAJxC,WAMMD,GANN,yCAOWF,MAPX,wBAWsBN,GAAaW,OAAOvG,IAX1C,QAWQwG,EAXR,OAaQC,EAAe,CACnB,CAAEC,KAAM,OAAQnL,KAAM,UACtB,CAAEmL,KAAM,UAAWnL,KAAM,UACzB,CAAEmL,KAAM,UAAWnL,KAAM,WACzB,CAAEmL,KAAM,oBAAqBnL,KAAM,YAE/BoL,EAAS,CACbD,KAAM5F,GAAkB,eAAiB,cACzC8F,QAAS,IACTxD,QAASA,GACTyD,kBAAmBhG,GAAKM,eAAe1E,SAEnCqK,EAAS,CACb,CAAEJ,KAAM,QAASnL,KAAM,WACvB,CAAEmL,KAAM,UAAWnL,KAAM,WACzB,CAAEmL,KAAM,QAASnL,KAAM,WACvB,CAAEmL,KAAM,QAASnL,KAAM,WACvB,CAAEmL,KAAM,WAAYnL,KAAM,YAEtBM,EAAU,CACdkL,MAAO/G,GACPgH,4BACAC,QAAS/C,GACThK,MAAOoM,EAAgB7E,SAAS1E,WAChCyJ,MAAOA,EAAMU,cACb5B,SAAUA,GAAS6B,YAEfC,EAAOC,KAAKC,UAAU,CAC1BC,MAAO,CACLd,eACAK,UAEFH,SACAa,YAAa,SACb3L,YAGFwH,GACGoE,KAAK,uBAAwB,CAACzH,GAASoH,IACvCM,KAAKC,kBACLD,MAAKE,IACJ7B,GAAiB,CACf8B,EAAGD,EAAUC,EACbC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbzC,SAAUA,GAAS6B,YAJrB,IAODa,OAAO9J,IAEc,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO+J,OACT/B,IACD,IAjEP,4CAzEC,yBA+ID,IAAMxB,GAAcvJ,uBAClB,CAACwJ,EAAczE,KACb6F,GAAiB,MACVjB,GAAaH,EAAOzE,KAE7B,CAAC4E,KAGGoD,GAAmB/M,uBACtB+E,GAA6BwE,GAAYtE,IAAMiB,UAAWnB,IAC3D,CAACwE,KAEGyD,GAAmBhN,uBACtB+E,GAA6BwE,GAAYtE,IAAMC,WAAYH,IAC5D,CAACwE,KAEG0D,GAAmBjN,uBACtB+E,GAA6BwE,GAAYtE,IAAME,WAAYJ,IAC5D,CAACwE,KAIG2D,GAAyBC,eArK9B,SAsKcC,KAtKd,wFAsKD,yHACOnF,IAAYC,IAAYrD,IAAYsF,GAD3C,sBAC2D,IAAIe,MAAM,wBADrE,UAE8BmC,EAAyDpG,GAA5EhC,IAAMC,YAAkDoI,EAAoBrG,GAAvChC,IAAME,YAC/CkI,GAAoBC,EAH3B,sBAIU,IAAIpC,MAAM,4BAJpB,UAMQqC,EAAiB5H,GACnB3D,GACEwL,aAA8BvF,GAASC,GAASrD,IAChD4I,aAA2BxF,GAASC,GAASrD,IAC/C6I,aAA4BzF,GAASC,GAASrD,IAE5CuC,EAAa,CACjB,CAACnC,IAAMC,YAAamC,YAAwBgG,EAAiBxH,IAAiB,GAC9E,CAACZ,IAAME,YAAakC,YAAwBiG,EAAiBzH,IAAiB,IAG3EnB,IAAcC,GAjBrB,sBAiBsC,IAAIuG,MAAM,kBAjBhD,UAkBQC,EAAkBlE,GAAchC,IAAMiB,WAlB9C,uBAmB8B,IAAIgF,MAAM,4BAnBxC,WAqBQyC,EAAiBhJ,GAAU4D,SAC3BqF,EAAmBlJ,GAAU6D,UAAYoF,EAE1CrI,IAAWE,GAxBlB,uBAwBgC,IAAI0F,MAAM,kBAxB1C,WA4BMJ,KAAa+C,IAAcC,SA5BjC,iBA8BQF,GACFG,EAAc,CAAC,qBAAsB,mDACrCC,EAAO,CACLL,EAAiBrI,GAAOhE,QAAUkE,GAAOlE,QACzCsD,GACAuG,EAAgB7E,SAAS1E,WACzBwF,EAAWuG,EAAiB1I,IAAMC,WAAaD,IAAME,YAAYvD,WACjEwF,EAAWuG,EAAiB1I,IAAME,WAAaF,IAAMC,YAAYtD,WACjEiD,GACAsF,GAAS4B,iBAKXgC,EAAc,CAAC,mBACfC,EAAO,CACL1I,GAAOhE,QACPkE,GAAOlE,QACPsD,GACAuG,EAAgB7E,SAAS1E,WACzBwF,EAAWnC,IAAMC,YAAYtD,WAC7BwF,EAAWnC,IAAME,YAAYvD,WAC7BiD,GACAsF,GAAS4B,gBArDjB,2BA0D6B,OAAlBpB,GA1DX,iBA4DQiD,GACFG,EAAc,CAAC,+BAAgC,6DAC/CC,EAAO,CACLL,EAAiBrI,GAAOhE,QAAUkE,GAAOlE,QACzCsD,GACAuG,EAAgB7E,SAAS1E,WACzBwF,EAAWuG,EAAiB1I,IAAMC,WAAaD,IAAME,YAAYvD,WACjEwF,EAAWuG,EAAiB1I,IAAME,WAAaF,IAAMC,YAAYtD,WACjEiD,GACA8F,GAAcR,UACd,EACAQ,GAAc+B,EACd/B,GAAcgC,EACdhC,GAAciC,KAKhBmB,EAAc,CAAC,6BACfC,EAAO,CACL1I,GAAOhE,QACPkE,GAAOlE,QACPsD,GACAuG,EAAgB7E,SAAS1E,WACzBwF,EAAWnC,IAAMC,YAAYtD,WAC7BwF,EAAWnC,IAAME,YAAYvD,WAC7BiD,GACA8F,GAAcR,UACd,EACAQ,GAAc+B,EACd/B,GAAcgC,EACdhC,GAAciC,IA3FtB,8BA+FU,IAAI1B,MAAM,kFA/FpB,yBAkG4D+C,QAAQC,IAChEH,EAAYI,KAAIC,GACdb,EAAec,YAAYD,MAAeJ,GACvCzB,KAAK+B,KACLzB,OAAM9J,IACLD,QAAQC,MAAR,qBAAoCqL,EAAYJ,EAAMjL,GACtDuH,GAAwBvH,EAAMnB,WAC9B,OAzGV,WAkGQ2M,EAlGR,OA8GQC,EAA8BD,EAAiBE,WAAUC,GAC7DrL,IAAUsL,YAAYD,MAIa,IAAjCF,EAnHN,iBAoHI1L,QAAQC,MAAM,wDApHlB,+BAsHUqL,EAAaL,EAAYS,GACzBE,EAAkBH,EAAiBC,GAEzCxE,IAAiB,GAzHrB,UA0HUuD,EAAea,MAAeJ,EAAM,CACxCY,SAAUF,IAETnC,MAAMsC,IAC4B,IAAD,IAA1BnK,IAAeC,KACnBqF,IAAiB,GAEjBkD,GAAuB,CACrB4B,KAAMD,EAASC,KACf1O,KAAM2O,KAAiBC,iBACvBC,SACE,UAAAhI,GAAchC,IAAMC,mBAApB,eAAiC7K,cAAc,IAC/C,KACCmO,GAAkB0G,IAAiBjH,IAASlN,OAAS2J,GAAU3J,QAChE,SAHA,UAIAkM,GAAchC,IAAME,mBAJpB,aAIA,EAAiC9K,cAAc,IAC/C,KACCuO,GAAkBsG,IAAiBjH,IAASlN,OAAS4J,GAAU5J,QAClEoU,UAAW,CACTC,YAAaxK,GACbyK,QAAS3K,GAAU3J,OACnBuU,QAAS3K,GAAU5J,OACnBwU,wBAAyB,aACzBpG,IAAK,IAAIqG,WAASrG,IAAKsG,OAAOrJ,IAAKgD,OAAO,MAAQ/O,cAAc,MAIpE6P,GAAU2E,EAASC,MACpB,IAEFjC,OAAO6C,IACN1F,IAAiB,GACjB,IAAM/J,EAAI,IAAIiL,MAAM,yBAA0B,CAAEyE,MAAOD,IACvDzP,EAAEsL,KAAO,uBACTqE,YAAiB3P,EAAG,CAAE4P,MAAO,CAAE7B,UAEJ,QAAvB,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAa5C,OAChBhK,QAAQC,MAAM2M,GAGZA,EAAIhP,QAAQoP,SAAS,gBACvBxF,GAAwB,8EAExBA,GAAuB,OAACoF,QAAD,IAACA,OAAD,EAACA,EAAKhP,QAC9B,IAtKT,4CAtKC,yBAiVD,IAAMqP,GAAYC,aAAe,CAAC1K,GAAQE,KAEpCyK,GACJhJ,GAAchC,IAAMC,aAAe6K,GAAU,GACzCG,WAAYjJ,GAAchC,IAAMC,YAAyC7K,cAAc,IAAM0V,GAAU,GACvG,EAEAI,GACJlJ,GAAchC,IAAME,aAAe4K,GAAU,GACzCG,WAAYjJ,GAAchC,IAAME,YAAyC9K,cAAc,IAAM0V,GAAU,GACvG,EAEAK,GAAW,6BAAenJ,GAAchC,IAAMC,mBAAnC,aAAe,EAAiC7K,cAAc,GAA9D,mBACf+N,SADe,IACfA,QADe,EACfA,GAASrN,OADM,0BAETkM,GAAchC,IAAME,mBAFX,aAET,EAAiC9K,cAAc,GAFtC,mBAE4CgO,SAF5C,IAE4CA,QAF5C,EAE4CA,GAAStN,QAEhEsV,GAAiCrQ,uBACpCjB,IACCwK,GAAYtE,IAAM2B,kBAAmB7H,EAAM6C,WAA3C,GAEF,CAAC2H,KAGG+G,GAA4BtQ,uBAAY,KAC5C8J,IAAe,GACfc,GAAiB,MAEbX,IACFV,GAAYtE,IAAM2B,kBAAmB,KAEvCsD,GAAU,IACVI,GAAwB,GAAxB,GACC,CAACf,GAAaU,KAEjB,GAAgEsG,aAC9DC,OAAOtQ,SAAS+G,GAAchC,IAAM2B,mBAAmB3F,QAAQ,IAC/DoP,IAFF,qBAAOI,GAAP,MAAiCC,GAAjC,MAKA,SAASC,KAAe,IAAD,IACrB,OACE,gBAAC,IAAD,CAAYC,IAAK,KAAM1V,MAAO,CAAE2V,UAAW,QAA3C,UACE,gBAAC,IAAD,CAASD,IAAI,MAAb,UACE,eAACE,EAAA,EAAD,CAAc5J,SAAUxC,GAAWtI,KAAM,SACzC,eAAC,IAAD,CAAMnB,SAAU,GAAID,WAAY,IAAhC,mBACGiM,GAAchC,IAAMC,mBADvB,aACG,EAAiC7K,cAAc,KAElD,eAAC,IAAD,CAAMY,SAAU,GAAID,WAAY,IAAhC,gBACGoN,SADH,IACGA,QADH,EACGA,GAASrN,WAETkV,IACD,gBAAC,IAAD,CAAM7W,MAAOW,GAAMuC,QAAS+D,WAAW,MAAMpF,SAAU,GAAID,WAAY,IAAvE,eACK+V,YAAad,GAAsBrO,YAAY,SAASC,EAD7D,UAMJ,gBAAC,IAAD,CAAS+O,IAAI,MAAb,UACE,eAACE,EAAA,EAAD,CAAc5J,SAAUvC,GAAWvI,KAAM,SACzC,eAAC,IAAD,CAAMnB,SAAU,GAAID,WAAY,IAAhC,mBACGiM,GAAchC,IAAME,mBADvB,aACG,EAAiC9K,cAAc,KAElD,eAAC,IAAD,CAAMY,SAAU,GAAID,WAAY,IAAhC,gBACGqN,SADH,IACGA,QADH,EACGA,GAAStN,WAEToV,IACD,gBAAC,IAAD,CAAM/W,MAAOW,GAAMuC,QAAS+D,WAAW,MAAMpF,SAAU,GAAID,WAAY,IAAvE,eACK+V,YAAaZ,GAAsBvO,YAAY,SAASC,EAD7D,UAMJ,eAAC,KAAKmP,OAAN,CAAa/V,SAAU,GAAID,WAAY,IAAK5B,MAAOW,GAAMuC,QAAS2U,UAAU,OAA5E,SACG,qGACCpL,GAAkB,UAK3B,CAED,SAASqL,KAAe,IAAD,EACrB,OACE,uCACE,eAAC,KAAD,UACGxL,IACC,uCACE,gBAAC,KAAD,CAAqBxK,MAAO,CAAEiW,cAAe,OAA7C,UACE,eAAC,KAAKC,UAAN,CAAgBnW,SAAU,GAAID,WAAY,IAAK5B,MAAOW,GAAMuC,QAA5D,SACE,2CAEF,eAAC,KAAK+U,MAAN,CAAYpW,SAAU,GAAID,WAAY,IAAtC,SACE,eAACnB,EAAA,EAAD,CAAcC,MAAOA,UAIzB,gBAACwX,EAAA,EAAD,CAAYpW,MAAO,CAAEiW,cAAe,QAApC,UACE,eAAC,IAAD,CAAM/X,MAAOW,GAAMuC,QAASrB,SAAU,GAAID,WAAY,IAAtD,SACE,+CAGF,gBAACsW,EAAA,EAAD,WACE,eAAC,IAAD,CAAoBC,UAAW7M,GAAW8M,UAAW7M,GAAW8M,QAAQ,IACxE,eAAC,IAAD,CAAMrY,MAAOW,GAAM2B,KAAMT,SAAU,GAAID,WAAY,IAAnD,mBACGiM,GAAchC,IAAMiB,kBADvB,aACG,EAAgC7L,cAAc,WAKpD+M,IACC,uCACE,gBAACkK,EAAA,EAAD,CAAYpW,MAAO,CAAEiW,cAAe,QAApC,UACE,eAAC,KAAKC,UAAN,CAAgBpW,WAAY,IAAKC,SAAU,GAAI7B,MAAOW,GAAMuC,QAA5D,SACE,8CAGF,gBAAC,KAAD,WACE,eAACwU,EAAA,EAAD,CAAc5J,SAAUxC,GAAWtI,KAAK,SACxC,gBAAC,KAAKiV,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,UACGyW,aAAgBtK,GAAWnC,IAAMC,YAAlB,OAA+BR,SAA/B,IAA+BA,QAA/B,EAA+BA,GAAWiN,UAD5D,WACwEvJ,SADxE,IACwEA,QADxE,EACwEA,GAASrN,gBAKrF,gBAACuW,EAAA,EAAD,WACE,yBAEA,gBAAC,KAAD,WACE,eAACR,EAAA,EAAD,CAAc5J,SAAUvC,GAAWvI,KAAK,SACxC,gBAAC,KAAKiV,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,UACGyW,aAAgBtK,GAAWnC,IAAME,YAAlB,OAA+BR,SAA/B,IAA+BA,QAA/B,EAA+BA,GAAWgN,UAD5D,WACwEtJ,SADxE,IACwEA,QADxE,EACwEA,GAAStN,wBAU/F,eAACO,EAAA,EAAD,CAAe2C,WAAY6M,KAAa+C,IAAcC,UAA8B,OAAlBnD,IAAyBnP,QAAS4R,GAApG,SACE,eAAC,IAAD,CAAMpS,WAAY,IAAKC,SAAU,GAAjC,SACE,yCAKT,CAED,OACE,qCACE,gBAAC,KAAD,WACE,eAAC2W,EAAA,EAAD,CACEC,OAAQhI,GACRiI,UAAWxB,GACXvG,cAAeA,GACf+E,KAAM7E,IAAkB,GACxB8H,QAAS,IACP1H,GACE,eAAC,IAAD,CAAyByH,UAAWxB,GAA2B5P,QAAS2J,KAExE,eAAC,IAAD,CACE2H,MAAO,mBACPF,UAAWxB,GACX2B,WAAYtB,GACZuB,cAAehB,KAIrBd,YAAaA,KAEf,eAAC,IAAD,CAAYQ,IAAI,KAAhB,SACE,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,eAAC,IAAD,CAAWrV,QAAQ,OAAO4W,aAAa,MAAvC,SACE,gBAAC,IAAD,CAAYvB,IAAI,OAAhB,UACE,gBAACU,EAAA,EAAD,WACE,eAAC,IAAD,CAAMrW,SAAU,GAAID,WAAY,IAAhC,SACE,oCAGF,gBAAC,IAAD,CAAMC,SAAU,GAAID,WAAY,IAAhC,UACE,mCADF,KAC4B8K,GAAD,OAA8BA,SAA9B,IAA8BA,QAA9B,EAA8BA,GAAezL,cAAc,GAA1C,eAAC+X,EAAA,EAAD,IAD5C,mBAIF,eAACd,EAAA,EAAD,CAAKpW,MAAO,CAAEE,WAAY,YAA1B,SACE,gBAAC,IAAD,CAAMH,SAAU,GAAID,WAAY,IAAhC,UACGuP,GAAiBtF,IAAM2B,mBAD1B,SAKF,uCACE,eAACnH,EAAA,EAAD,CAAQV,MAAO0R,GAA0B/Q,SAAUgR,GAA6BtU,KAAM,KACtF,gBAACkV,EAAA,EAAD,CAAYpW,MAAO,CAAE0V,IAAK,OAA1B,UACE,eAAC,KAAD,CAAWpV,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,MAA/D,iBACA,eAAC,KAAD,CAAWpL,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,MAA/D,iBACA,eAAC,KAAD,CAAWpL,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,MAA/D,iBACA,eAAC,KAAD,CAAWpL,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,OAA/D,SACE,4CAOTqB,IAAWvC,IACV,eAAC2M,EAAA,EAAD,CACEC,aAAW,EACXC,UAAQ,EACRxT,MAAOwL,GAAiBtF,IAAMiB,WAC9BqD,YAAawD,GACbyF,MAAO,KACPC,OAAQ,KACRC,uBAAqB,EACrBxL,SACE,IAAIyL,QACF1K,GADF,UAEEvC,GAAKM,sBAFP,aAEE,EAAqB1E,QAFvB,UAGEoE,GAAKM,sBAHP,aAGE,EAAqB2L,SAHvB,yBAQFiB,GAAG,wBAKT,gBAAC,KAAD,WACE,uCACE,uBAAK1X,MAAO,CAAE2X,aAAc,UAA5B,UACE,eAACR,EAAA,EAAD,CACEtT,MAAOwL,GAAiBtF,IAAMC,YAC9BqE,YAAayD,GACbwF,MAAO,KACPC,OAAQ,KACRvL,SAAUxC,GACV5J,MAAO,gBACPgY,iBAAkB,IAAM,KACxBJ,uBAAuB,EACvBE,GAAG,0BACHG,aAAchC,YAAad,GAAsBrO,YAAY,SAASC,IAExE,eAAC,IAAD,CAAMmR,eAAe,WAAW5X,WAAW,SAASyV,UAAU,SAA9D,SACGjM,IAAeqD,KAAYK,IAAoBE,KAC9C,eAAC,KAAD,CACEyK,SAAO,EACPC,GAAE,kBACA5K,GAAmB6K,aAAWzK,OAAKT,IAAUA,IAAWiH,IAAiBjH,IAASlN,OADlF,YAEEgN,GAFF,YAEiBnD,IAJrB,SAMG0D,GAAmB,6CAAmC,mDAM/D,iCACE,eAAC+J,EAAA,EAAD,CACEtT,MAAOwL,GAAiBtF,IAAME,YAC9BoE,YAAa0D,GACbuF,MAAO,KACPC,OAAQ,KACRvL,SAAUvC,GACVmO,iBAAkB,IAAM,KACxBJ,uBAAuB,EACvBE,GAAG,0BACHG,aAAchC,YAAaZ,GAAsBvO,YAAY,SAASC,IAExE,eAAC,IAAD,CAAMmR,eAAe,WAAW5X,WAAW,SAASyV,UAAU,SAA9D,SACGjM,IAAeqD,KAAYW,IAAmBD,KAC7C,eAAC,KAAD,CACEsK,SAAO,EACPC,GAAE,kBAAapL,EAAb,YACAa,GAAmBwK,aAAWzK,OAAKT,IAAUA,IAAWiH,IAAiBjH,IAASlN,OADlF,YAEE6J,IAJN,SAMG+D,GAAmB,6CAAmC,sDAOhEjD,IACC,gBAAC,KAAD,WACE,eAAC,IAAD,CAAS0N,QAAQ,gBAAgBxC,IAAI,MAAM1V,MAAO,CAAEiW,cAAe,QAAnE,SACE,eAAC,KAAKC,UAAN,CAAgBpW,WAAY,IAAKC,SAAU,GAAI7B,MAAOW,GAAMuC,QAA5D,SACE,eAAC,KAAD,UACE,kDAKL8K,IACC,gBAAC,KAAD,CAAWlM,MAAO,CAAEiW,cAAe,OAAQkC,aAAa,cAAD,OAAgBtZ,GAAM0C,SAA7E,UACE,gBAAC,KAAD,WACE,eAACqU,EAAA,EAAD,CAAc5J,SAAUxC,GAAWtI,KAAK,SACxC,gBAAC,KAAKiV,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,UACGyW,aAAgBtK,GAAWnC,IAAMC,YAAlB,OAA+BR,SAA/B,IAA+BA,QAA/B,EAA+BA,GAAWiN,UAD5D,WACwEvJ,SADxE,IACwEA,QADxE,EACwEA,GAASrN,aAInF,gBAAC,KAAD,WACE,eAAC+V,EAAA,EAAD,CAAc5J,SAAUvC,GAAWvI,KAAK,SACxC,gBAAC,KAAKiV,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,UACGyW,aAAgBtK,GAAWnC,IAAME,YAAlB,OAA+BR,SAA/B,IAA+BA,QAA/B,EAA+BA,GAAWgN,UAD5D,WACwEtJ,SADxE,IACwEA,QADxE,EACwEA,GAAStN,gBAMvF,gBAAC,KAAD,CAAWG,MAAO,CAAEoY,WAAY,QAAhC,UACE,eAAC,KAAKlC,UAAN,CACEpW,WAAY,IACZC,SAAU,GACV7B,MAAOW,GAAMuC,QACbpB,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAJxC,SAME,eAAC,KAAD,UACE,6CAGJ,eAAC,KAAKiW,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,SACE,eAACpB,EAAA,EAAD,CAAcC,MAAOA,aAM7B,sBAAKoB,MAAO,CAAEqY,SAAU,YAAxB,SACI1O,GAKA,gBAACyM,EAAA,EAAD,YACIvO,IACA,eAACzH,EAAA,EAAD,CACEE,QApqBrB,4CAqqBqBgY,UAAW1I,KAAa+C,IAAcC,UAA8B,OAAlBnD,GAClD1M,SACE6M,KAAa+C,IAAc4F,cACT,OAAlB9I,KACC7E,IACDA,GAAc0E,QAAQ,KAExBiH,OAAO,aACPvW,MAAO,CAAED,SAAU,OAAQD,WAAY,KAVzC,SAYG8P,KAAa+C,IAAc6F,QAC1B,eAAC,IAAD,UACE,uCAEA5I,KAAa+C,IAAcC,UAA8B,OAAlBnD,GACzC,kBAEA,mBAIN,eAACrP,EAAA,EAAD,CACEE,QAAS,KACPsO,IAAe,EAAf,EAEF7L,UAAW2L,IAA8B,OAAlBe,IAA0BG,KAAa+C,IAAcC,SAC5E/K,OAAQ6G,MAAa3C,GAAchC,IAAMC,eAAiB+B,GAAchC,IAAME,YALhF,SAOE,eAAC,IAAD,CAAMlK,SAAU,GAAID,WAAY,IAAhC,SACG+H,IAAS,uBArChB,eAACzH,EAAA,EAAD,CAAaE,QAASqN,GAAtB,SACE,0DAgDnB,C,qIC7sBc,SAAS8K,GAAT,GAQX,IAAD,qCAPD7L,GAOC,EAPDA,YACAC,GAMC,EANDA,YACAnD,GAKC,EALDA,YAMOF,GAAP,UAAgCsD,YAAYF,WAA5C,aAA4DjG,EAA1C8C,GAAlB,UAAuEqD,YAAYD,WAAnF,aAAmGlG,EACnG,GAAiDM,cAAzC0C,GAAR,GAAQA,QAASoD,GAAjB,GAAiBA,QAAS7F,GAA1B,GAA0BA,MAAOC,GAAjC,GAAiCA,YACzB6F,GAAYC,cAAZD,QAEFE,GAAUxN,YAA6B8J,IACvC2D,GAAUzN,YAA6B+J,IAC7C,GAAyBU,mBAAQ,IAAM,QAACX,SAAD,IAACA,QAAD,EAACA,GAAWa,QAAZ,OAAqBZ,SAArB,IAAqBA,QAArB,EAAqBA,GAAWY,UAAU,CAACb,GAAWC,KAA7F,qBAAOW,GAAP,MAAeE,GAAf,MAEMzL,GAAQC,cAEd,GAAqB4Z,cAAdC,GAAP,qBAGMhL,GAAoBC,eAG1B,GAAgEzE,IAAxDS,GAAR,GAAQA,iBAAkBgP,GAA1B,GAA0BA,sBAAuB/O,GAAjD,GAAiDA,WACjD,GHmHK,SACLL,EACAC,EACAC,GAwBC,IAAD,QAqBI7B,EApBI8B,EAAY1C,cAAZ0C,QAER,EAAgER,IAAxDS,EAAR,EAAQA,iBAAkBgP,EAA1B,EAA0BA,sBAAuB/O,EAAjD,EAAiDA,WAC3CgP,EAAsBD,IAA0B7O,IAAMC,WAAaD,IAAME,WAAaF,IAAMC,WAG5FE,EAA8CC,mBAClD,MACE,CAACJ,IAAMC,YAAP,OAAoBR,QAApB,IAAoBA,SAAa7C,EACjC,CAACoD,IAAME,YAAP,OAAoBR,QAApB,IAAoBA,SAAa9C,KAEnC,CAAC6C,EAAWC,IAGPW,EAAP,OAA0BZ,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWa,QAAtBC,EAAf,OAA8Cb,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAWY,QAEnDhD,EAAUuR,IAA0B7O,IAAMC,WAAaM,EAASF,EAChE9C,EAAWsR,IAA0B7O,IAAMC,WAAaI,EAASE,EAEnEwO,GAAwB,EAI5B,EAA0DvO,YAAiBH,EAAQE,EAAQZ,GAA3F,mBAASc,EAAT,KAAeC,EAAf,KAAgC3D,EAAhC,KAEA,EAA0B4D,cAAnBC,EAAP,oBAGMC,EAAgBC,YAAe,OAACL,QAAD,IAACA,OAAD,EAACA,EAAMM,gBAEtCC,EAAS,CACb,CAAChB,IAAMC,YAAaI,EACpB,CAACL,IAAME,YAAaK,EACpB,CAACP,IAAMiB,WAAP,OAAmBR,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMM,gBAIrBzE,EAAcL,YAAc,OAACwE,QAAD,IAACA,OAAD,EAACA,EAAMM,gBACnCG,EACJT,GACAnE,GACAuE,GACAR,GAEAc,IAAKC,mBAAmB9E,EAAY+E,SAAUR,EAAcQ,UACxD5E,cAAYC,cAAc2D,EAAQI,EAAKa,kBAAkBjB,EAAQ/D,EAAauE,GAAeQ,eAC7FzE,EACA2E,EACJd,GACAnE,GACAuE,GACAN,GAEAY,IAAKC,mBAAmB9E,EAAY+E,SAAUR,EAAcQ,UACxD5E,cAAYC,cAAc6D,EAAQE,EAAKa,kBAAkBf,EAAQjE,EAAauE,GAAeQ,eAC7FzE,EACA4E,EAAsD,CAC1D,CAACxB,IAAMC,YAAaiB,EACpB,CAAClB,IAAME,YAAaqB,GAGlBE,EAA2B,IAAIC,UAAQ,IAAK,OAEhD,GAAI7B,IAAqBG,IAAM2B,kBAC7BF,EAAkB,IAAIC,UAAQ5B,EAAY,YAGvC,GAAID,IAAqBG,IAAMiB,WAClC,UAAIR,QAAJ,IAAIA,KAAMM,eAAgB,CACxB,IAEwF,EAFlFa,EAAoBC,YAAe/B,EAAYW,EAAKM,gBAEtDa,GAAqBf,GAAiBe,EAAkBE,YAAYjB,KACtE/C,EAAK,UAAGA,SAAH,QAAY,+BAGf8D,GAAqBf,IAAkBe,EAAkBE,YAAYjB,KACvEY,EAAkB,IAAIC,UAAQE,EAAkBP,SAAUR,EAAcQ,UAE3E,OAID,GAAIL,EAAOnB,GAAmB,CAC5B,IAAM+B,EAAoBC,YAAe/B,EAAYkB,EAAOnB,IACtDkC,EAAiBP,EAAgB3B,GACnC+B,GAAqBG,IAAmBH,EAAkBE,YAAYC,KACxEN,EAAkB,IAAIC,UAAQE,EAAkBP,SAAUU,EAAeV,UAE5E,CAGH,IAwGoD,GAID,GAI8B,GAhH3ErD,GAAQoC,mBAAQ,KACpB,IAAKS,EACH,OAAOzC,IAAUC,KAAK,KAGxB,IAAM2Q,EAAoB7N,IAAKqJ,OAC7BrJ,IAAKe,SAASrB,EAAcQ,SAAUI,EAAgBwN,WACtDxN,EAAgByN,aAGlB,OAAO9Q,IAAUC,KAAK2Q,EAAkBrS,WAAxC,GAEC,QAACkE,QAAD,IAACA,OAAD,EAACA,EAAeQ,SAAS1E,WAAY8E,EAAgBwN,UAAUtS,WAAY8E,EAAgByN,YAAYvS,aAEpGwS,GAAexQ,cACjB+B,IACA3D,EAFgC,OAGlCO,QAHkC,IAGlCA,OAHkC,EAGlCA,EAASjB,QAHyB,OAIlCkB,QAJkC,IAIlCA,OAJkC,EAIlCA,EAAUlB,QAJwB,OAKlCoE,QALkC,IAKlCA,OALkC,EAKlCA,EAAMpE,QACN2B,IAIIoR,GAA+DvN,YACnEsN,GAAavQ,OAAOjC,WACpBwD,EAAW0O,IACX,GAGIQ,GAA6DjP,mBAAQ,KACzE,GAAIgP,IAA0BlO,GAAmBK,EAAiB,CAChE,IAAM3C,EACJkQ,IAAwB9O,IAAMC,WAC1BkB,IAAKqJ,OAAOrJ,IAAKe,SAAShB,EAAgBG,SAAUI,EAAgBwN,WAAYxN,EAAgByN,aAChG/N,IAAKqJ,OAAOrJ,IAAKe,SAASX,EAAgBF,SAAUI,EAAgBwN,WAAYxN,EAAgByN,aAEtG,OAAOrN,YAAejD,EAAOjC,WAAYwD,EAAW2O,IAAsB,EAC3E,CAEA,GACA,CACDM,GACAlO,EACAK,EACAuN,EACArN,EAAgBwN,UAChBxN,EAAgByN,YAChB/O,IAGImP,GAGF,CACF,CAACtP,IAAMC,YACLI,GAAUa,GAAmBO,GAAmBA,EAAgBK,YAAY,KACxErF,cAAYC,cAAc2D,EAAQoB,EAAgBS,SAAShB,EAAgBG,UAAUA,eACrFzE,EACN,CAACoD,IAAME,YACLK,GAAUgB,GAAmBE,GAAmBA,EAAgBK,YAAY,KACxErF,cAAYC,cAAc6D,EAAQkB,EAAgBS,SAASX,EAAgBF,UAAUA,eACrFzE,GAGFoF,GAKF,CACF,CAAChC,IAAM2B,mBAAoBF,EAC3B,CAACzB,IAAMiB,WACLJ,GAAiBY,GAAmBA,EAAgBK,YAAY,KAC5DrF,cAAYC,cAAcmE,EAAcoB,SAAUR,EAAgBS,SAASrB,EAAcQ,UAAUA,eACnGzE,EACN,CAACiS,GACCtR,GAAY6R,GACR3S,cAAYC,cAAca,EAAU6R,GAAuB/N,eAC3DzE,EACN,CAACkS,GACCxR,GAAW+R,GAAuB5S,cAAYC,cAAcY,EAAS+R,GAAqBhO,eAAYzE,GAGpGuF,GAAa,CACjB,CAACnC,IAAMC,YACL+B,IAAiBA,GAAchC,IAAMC,YACjCmC,YAAwBJ,GAAchC,IAAMC,YAAyCW,GAAiB,GACtGO,IAAKgD,OAAO,GAClB,CAACnE,IAAME,YACL8B,IAAiBA,GAAchC,IAAME,YACjCkC,YAAwBJ,GAAchC,IAAME,YAAyCU,GAAiB,GACtGO,IAAKgD,OAAO,IAGdtP,GAAQuL,mBAAQ,KACpB,IAAMiC,EAAgB,OAAG5C,QAAH,IAAGA,OAAH,EAAGA,EAAWa,QACpC,OAAOG,GAAQ4B,EAAmB5B,EAAK6B,QAAQD,QAAoBzF,CAAnE,GACC,CAAC6C,EAAWgB,IA+Bf,OA7BKb,IACH9B,EAAQ,yBAGLgC,GAAekC,GAAchC,IAAMiB,aACtCnD,EAAK,WAAGA,SAAH,UAAY,0BAGfgC,IAAekC,GAAchC,IAAMiB,aACrCnD,EAAK,WAAGA,SAAH,UAAY,yBAGf+C,GAAa,UAAImB,GAAchC,IAAMiB,kBAAxB,OAAI,EAAgCa,YAAYjB,KAC/D/C,EAAK,WAAGA,SAAH,UAAY,+BAIjBqR,GAAarR,QACZ,UAAAqR,GAAarR,MAAMrC,eAAnB,SAA4BoP,SAAS,2BAArC,UACCsE,GAAarR,MAAMkJ,YADpB,iBACC,EAAyBvL,eAD1B,OACC,EAAkCoP,SAAS,6BAE7CkE,GAAwB,GAGtBI,GAAarR,QAAUiR,IACzBlR,QAAQC,MAAMqR,GAAarR,OAC3BA,EAAQ,+BAGH,CACLgR,sBACA3O,aACAM,OACAI,gBACAyO,gBACAtN,iBACAG,cACA4M,wBACAla,SACAiJ,QACA4C,kBACA3D,yBAEH,CG5WKwS,CAAoB,OAAC9P,SAAD,IAACA,WAAa7C,EAAd,OAAyB8C,SAAzB,IAAyBA,WAAa9C,EAAW+C,IAZvEmP,GADF,GACEA,oBACA3O,GAFF,GAEEA,WACAM,GAHF,GAGEA,KACAI,GAJF,GAIEA,cACAyO,GALF,GAKEA,aACAtN,GANF,GAMEA,cACAG,GAPF,GAOEA,WACA4M,GARF,GAQEA,sBACAla,GATF,GASEA,MACAiJ,GAVF,GAUEA,MACA4C,GAXF,GAWEA,gBACA3D,GAZF,GAYEA,uBAEF,GH6WK,WAIL,IAAMqH,EAAWC,cACTwK,EAA0BzP,IAA1ByP,sBAeR,MAAO,CACLvK,YAdkBvJ,uBAClB,CAACwJ,EAAczE,KACbsE,EAASI,YAAU,CAAED,QAAOzE,eAA5B,GAEF,CAACsE,IAWDoL,cARoBzU,uBAAY,KAChCqJ,EACEqL,YAAiB,CAAElL,MAAOsK,IAA0B7O,IAAMC,WAAaD,IAAME,WAAaF,IAAMC,aADlG,GAGC,CAACmE,EAAUyK,IAMf,CGrYsDa,GAAhChL,GAArB,GAAQJ,YAA2BkL,GAAnC,GAAmCA,cAE7BtL,IAAU,OAAJzD,SAAI,IAAJA,QAAA,EAAAA,GAAMyD,MAAO/C,IAAKgD,OAAO,GAE/BwL,MACJ3M,IACA7C,GAAW0O,KADX,UAEA1O,GAAW0O,WAFX,OAEA,EAAmCvL,UAG/BsM,MACJ5M,IACA7C,GAAW0O,KADX,UAEA1O,GAAW0O,WAFX,OAEA,EAAmCrL,OAAOC,OAAKT,MAG3C6M,GACJ1M,IAAWC,GAAWyL,KAA0B7O,IAAMC,WAAakD,GAAUC,QAAWxG,EAEpF+H,IAAW7G,KAAUiR,GAG3B,GAAsC/Z,oBAAkB,GAAxD,qBAAO4P,GAAP,MAAoBC,GAApB,MACA,GAA0C7P,oBAAS,GAAnD,qBAAO8P,GAAP,MAAsBC,GAAtB,MAGA,GAA4B/P,mBAAiB,IAA7C,qBAAOgQ,GAAP,MAAeC,GAAf,MACMC,GAAWC,eACjB,GAA0BxE,cAAnBC,GAAP,qBACA,GAAsC5L,mBAAiB,IAAvD,qBAAO8a,GAAP,MAAoBC,GAApB,MAEMzK,GAAmB,CACvB,CAACtF,IAAM2B,mBAAoBK,GAAchC,IAAM2B,mBAAmB4D,QAAQ,KACtE,IACAvD,GAAchC,IAAM2B,mBAAmB/F,SAAS,IAAI8F,UAAQ,IAAK,QACjE,KACAM,GAAchC,IAAM2B,mBAAmB3F,QAAQ,GACnD,CAACgE,IAAMiB,WACLpB,KAAqBG,IAAMiB,UAAYnB,GAAvC,oBAAoDkC,GAAchC,IAAMiB,kBAAxE,aAAoD,EAAgC7L,cAAc,UAAlG,QAAwG,GAC1G,CAAC4K,IAAMC,YACLJ,KAAqBG,IAAMC,WAAaH,GAAxC,oBAAqDkC,GAAchC,IAAMC,mBAAzE,aAAqD,EAAiC7K,cAAc,UAApG,QAA0G,GAC5G,CAAC4K,IAAME,YACLL,KAAqBG,IAAME,WAAaJ,GAAxC,oBAAqDkC,GAAchC,IAAME,mBAAzE,aAAqD,EAAiC9K,cAAc,UAApG,QAA0G,IAIxGoQ,GAAgCC,YAAe,OAAChF,SAAD,IAACA,IAAD,UAACA,GAAMM,sBAAP,aAAC,EAAsB1E,SAG5E,GAA0CrH,mBAAuE,MAAjH,qBAAO0Q,GAAP,MAAsBC,GAAtB,MACA,GAAoCC,YAClC5D,GAAchC,IAAMiB,WACpB9D,GACIuD,GACE3D,GAAsB,WACnBK,GAA+BM,QAAQqG,iBADpB,cACpB,GAAmDiM,IAClD5S,GAA+BM,QAAQC,OAAOqS,IAHpC,WAIZ5S,GAA+BM,QAAQuG,eAJ3B,cAIb,GAAiD+L,SACnDpT,GARN,qBAAOiJ,GAAP,MAAiBC,GAAjB,MAYAtH,qBAAU,KACRmH,GAAiB,KAAjB,GAEC,QAAC9E,SAAD,IAACA,QAAD,EAACA,GAAekF,YAEnB,IAAMC,GAAiBzD,IAnGtB,wDAqGD,iHACOS,GADP,sBACsB,IAAIiD,MAAM,iBADhC,UAEOT,IAAiB/E,IAASwC,IAAYiC,GAF7C,sBAE6D,IAAIe,MAAM,wBAFvE,UAGQC,EAAkBlE,GAAchC,IAAMiB,WAH9C,sBAI8B,IAAIgF,MAAM,4BAJxC,WAMMD,GANN,yCAOWF,MAPX,wBAWsBN,GAAaW,OAAOvG,IAX1C,QAWQwG,EAXR,OAaQC,EAAe,CACnB,CAAEC,KAAM,OAAQnL,KAAM,UACtB,CAAEmL,KAAM,UAAWnL,KAAM,UACzB,CAAEmL,KAAM,UAAWnL,KAAM,WACzB,CAAEmL,KAAM,oBAAqBnL,KAAM,YAE/BoL,EAAS,CACbD,KAAM5F,GAAkB,eAAiB,cACzC8F,QAAS,IACTxD,QAASA,GACTyD,kBAAmBhG,GAAKM,eAAe1E,SAEnCqK,EAAS,CACb,CAAEJ,KAAM,QAASnL,KAAM,WACvB,CAAEmL,KAAM,UAAWnL,KAAM,WACzB,CAAEmL,KAAM,QAASnL,KAAM,WACvB,CAAEmL,KAAM,QAASnL,KAAM,WACvB,CAAEmL,KAAM,WAAYnL,KAAM,YAEtBM,EAAU,CACdkL,MAAO/G,GACPiH,QAAS1J,GACLuD,GACE3D,GAAsB,UACnBK,GAA+BM,QAAQqG,iBADpB,aACpB,EAAmDiM,IAClD5S,GAA+BM,QAAQC,OAAOqS,IAHpC,UAIZ5S,GAA+BM,QAAQuG,eAJ3B,aAIb,EAAiD+L,SACnDpT,EACJ9C,MAAOoM,EAAgB7E,SAAS1E,WAChCyJ,MAAOA,EAAMU,cACb5B,SAAUA,GAAS6B,YAEfC,EAAOC,KAAKC,UAAU,CAC1BC,MAAO,CACLd,eACAK,UAEFH,SACAa,YAAa,SACb3L,YAGFwH,GACGoE,KAAK,uBAAwB,CAACzH,GAASoH,IACvCM,KAAKC,kBACLD,MAAKE,IACJ7B,GAAiB,CACf8B,EAAGD,EAAUC,EACbC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbzC,SAAUA,GAAS6B,YAJrB,IAODa,OAAO9J,IAEc,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO+J,OACT/B,IACD,IAtEP,4CArGC,yBAgLD,IAAMxB,GAAcvJ,uBAClB,CAACwJ,EAAczE,KACb6F,GAAiB,MACVjB,GAAaH,EAAOzE,KAE7B,CAAC4E,KAGGoD,GAAmB/M,uBACtB+E,GAA6BwE,GAAYtE,IAAMiB,UAAWnB,IAC3D,CAACwE,KAEG2L,GAAkBlV,uBACrB+E,GAA6BwE,GAAYuK,GAAuB/O,IACjE,CAAC+O,GAAuBvK,KAIpB2D,GAAyBC,eAlM9B,SAmMcC,KAnMd,wFAmMD,qHACOhL,IAAU8F,IAAYrD,IAAYsF,GADzC,sBACyD,IAAIe,MAAM,wBADnE,UAE8BmC,EAAyDpG,GAA5EhC,IAAMC,YAAkDoI,EAAoBrG,GAAvChC,IAAME,YAC/CkI,GAAoBC,EAH3B,sBAIU,IAAIpC,MAAM,4BAJpB,UAMQjJ,EAAckT,aAAelN,GAASC,GAASrD,GAASc,GAAiB3D,IAE1E0C,IAAcC,GARrB,sBAQsC,IAAIuG,MAAM,kBARhD,UASQC,EAAkBlE,GAAchC,IAAMiB,WAT9C,uBAU8B,IAAIgF,MAAM,4BAVxC,WAYQyC,EAAiBhJ,GAAU4D,SAE5BjD,IAAWE,GAdlB,uBAcgC,IAAI0F,MAAM,kBAd1C,WAkBMJ,KAAa+C,IAAcC,SAlBjC,iBAoBQ8G,IACF7G,EAAc,CAAC,aACfC,EAAO,CACLL,EAAiBrI,GAAOhE,QAAUkE,GAAOlE,QACzC6J,EAAgB7E,SAAS1E,WACzBgD,GACAC,GACAuC,GAAWuG,EAAiB1I,IAAMC,WAAaD,IAAME,YAAYvD,WACjEuI,GAAS4B,iBAKXgC,EAAc,CAAC,UACfC,EAAO,CACL8F,KAA0B7O,IAAMC,WAAaM,GAAOlE,QAAUgE,GAAOhE,QACrEwS,KAA0B7O,IAAMC,WAAaI,GAAOhE,QAAUkE,GAAOlE,QACrE6J,EAAgB7E,SAAS1E,WACzBgD,GACAC,GACAiP,KAA0B7O,IAAMC,WAC5BkC,GAAWnC,IAAMC,YAAYtD,WAC7BwF,GAAWnC,IAAME,YAAYvD,WACjCuI,GAAS4B,gBA3CjB,2BAgD6B,OAAlBpB,GAhDX,iBAkDQiK,IACF7G,EAAc,CAAC,mBACfC,EAAO,CACLL,EAAiBrI,GAAOhE,QAAUkE,GAAOlE,QACzC6J,EAAgB7E,SAAS1E,WACzBgD,GACAC,GACAuC,GAAWuG,EAAiB1I,IAAME,WAAaF,IAAMC,YAAYtD,WACjE+I,GAAcR,UACd,EACAQ,GAAc+B,EACd/B,GAAcgC,EACdhC,GAAciC,KAKhBmB,EAAc,CAAC,gBACfC,EAAO,CACL8F,KAA0B7O,IAAMC,WAAaM,GAAOlE,QAAUgE,GAAOhE,QACrEwS,KAA0B7O,IAAMC,WAAaI,GAAOhE,QAAUkE,GAAOlE,QACrE6J,EAAgB7E,SAAS1E,WACzBgD,GACAC,GACAiP,KAA0B7O,IAAMC,WAC5BkC,GAAWnC,IAAMC,YAAYtD,WAC7BwF,GAAWnC,IAAME,YAAYvD,WACjC+I,GAAcR,UACd,EACAQ,GAAc+B,EACd/B,GAAcgC,EACdhC,GAAciC,IAjFtB,8BAqFU,IAAI1B,MAAM,kFArFpB,eAyFMvF,KAAoB3D,IACtBgM,EAAKoH,QAAS/S,GAA+BM,QAAQC,OAAOC,SA1FhE,UA4F4DoL,QAAQC,IAChEH,EAAYI,KAAIC,GACdnM,EAAYoM,YAAYD,MAAeJ,GACpCzB,KAAK+B,KACLzB,OAAM6C,IAAQ,IAAD,IAEe,QAAvB,OAACA,QAAD,IAACA,OAAD,EAACA,EAAa5C,OAChBhK,QAAQC,MAAR,qBAAoCqL,EAAYJ,EAAM0B,GAItDA,EAAIhP,QAAQoP,SAAS,+BAArB,OACAJ,QADA,IACAA,GADA,UACAA,EAAKzD,YADL,iBACA,EAAWvL,eADX,OACA,EAAoBoP,SAAS,8BAE7BkF,GAAe,+DAEfA,GAAc,OAACtF,QAAD,IAACA,OAAD,EAACA,EAAKhP,QAGtB,OA/GV,WA4FQ6N,EA5FR,OAoHQC,EAA8BD,EAAiBE,WAAUC,GAC7DrL,IAAUsL,YAAYD,MAIa,IAAjCF,EAzHN,iBA0HI1L,QAAQC,MAAM,wDA1HlB,+BA4HUqL,EAAaL,EAAYS,GACzBE,EAAkBH,EAAiBC,GAEzCxE,IAAiB,GA/HrB,UAgIU/H,EAAYmM,MAAeJ,EAAM,CACrCY,SAAUF,IAETnC,MAAMsC,IAC4B,IAAD,EAA1BnK,IAAeC,KACnBqF,IAAiB,GAEjBkD,GAAuB,CACrB4B,KAAMD,EAASC,KACf1O,KAAM2O,KAAiBC,iBACvBC,SAAS,UAAAhI,GAAc6M,WAAd,eAAsCzZ,cAAc,IAAK,KAAzD,OAA+Dya,SAA/D,IAA+DA,QAA/D,EAA+DA,GAAkB/Z,QAC1FoU,UAAW,CACTC,YAAaxK,GACbyK,QAAS3K,GAAU3J,OACnBuU,QAAS3K,GAAU5J,OACnBwU,wBAAyB,eACzBpG,IAAK,IAAIqG,WAASrG,IAAKsG,OAAOrJ,IAAKgD,OAAO,MAAQ/O,cAAc,MAIpE6P,GAAU2E,EAASC,MACpB,IAEFjC,OAAO6C,IACN1F,IAAiB,GACjB,IAAM/J,EAAI,IAAIiL,MAAM,iBAAkB,CAAEyE,MAAOD,IAC/CzP,EAAEsL,KAAO,WACTqE,YAAiB3P,EAAG,CAAE4P,MAAO,CAAE7B,UAEJ,QAAvB,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAa5C,OAChBhK,QAAQC,MAAM2M,GAGZA,EAAIhP,QAAQoP,SAAS,8BACvBkF,GAAe,+DAEfA,GAAc,OAACtF,QAAD,IAACA,OAAD,EAACA,EAAKhP,QACrB,IArKT,6CAnMC,sBA6WD,IAAM0P,GAAW,8BAAenJ,GAAc6M,WAA7B,cAAe,GAAsCzZ,cAAc,GAAnE,mBAAyEya,SAAzE,IAAyEA,QAAzE,EAAyEA,GAAkB/Z,QAEtGsV,GAAiCrQ,uBACpCjB,IACCwK,GAAYtE,IAAM2B,kBAAmB7H,EAAM6C,WAA3C,GAEF,CAAC2H,KAGG+G,GAA4BtQ,uBAAY,KAC5C8J,IAAe,GACfc,GAAiB,MAEbX,IACFV,GAAYtE,IAAM2B,kBAAmB,KAEvCsD,GAAU,IACV8K,GAAe,GAAf,GACC,CAACzL,GAAaU,KAEjB,GAAgEsG,aAC9DC,OAAOtQ,SAAS+G,GAAchC,IAAM2B,mBAAmB3F,QAAQ,IAC/DoP,IAFF,qBAAOI,GAAP,MAAiCC,GAAjC,MAKM2E,GAAuBrV,uBAAY,KACvCyU,IAAe,GACd,CAACA,KAEEa,GAAcxb,GAASga,KAA0B7O,IAAMC,WAAapL,GAAMQ,SAAWR,QAAS+H,EAE9F0T,GACJtO,GAAc6M,KACdS,GAAaT,MACX7M,GAAc6M,IAAuCjT,SAAS0T,GAAaT,KACxE7M,GAAc6M,IAAuC0B,SACpDjB,GAAaT,UAEfjS,EAEAkO,GAAYC,aAAe,CAAC1K,GAAQE,KAEpCiQ,GAAwB3B,KAA0B7O,IAAMC,WAAa6K,GAAU,GAAKA,GAAU,GAE9FgD,GACJ9L,GAAc6M,KAA0B2B,GACpCvF,WAAYjJ,GAAc6M,IAAuCzZ,cAAc,IAAMob,GACrF,EAEA7U,GACJ0U,IACAf,GAAaR,KACbwB,IACAG,6BACEJ,GACAf,GAAaR,IACbwB,IAGEI,GAAwBjQ,IAAQ9E,GAAcgV,aAA6B,CAAClQ,IAAO9E,SAAeiB,EAGlGgU,GAAsB9U,aAAgB4U,IAE5C,SAAShF,KAAe,IAAD,EACrB,OACE,gBAAC,IAAD,CAAYC,IAAK,KAAM1V,MAAO,CAAE2V,UAAW,QAA3C,UACE,gBAAC,IAAD,CAASD,IAAI,MAAb,UACE,eAACE,EAAA,EAAD,CAAc5J,SAAU9B,GAAW0O,IAAwB1X,KAAM,SACjE,eAAC,IAAD,CAAMnB,SAAU,GAAID,WAAY,IAAhC,mBACGiM,GAAc6M,WADjB,aACG,EAAsCzZ,cAAc,KAEvD,eAAC,IAAD,CAAMY,SAAU,GAAID,WAAY,IAAhC,gBACG8Z,SADH,IACGA,QADH,EACGA,GAAkB/Z,SAEpBgY,IACC,gBAAC,IAAD,CAAM3Z,MAAOW,GAAMuC,QAAS+D,WAAW,MAAMpF,SAAU,GAAID,WAAY,IAAvE,eACK+V,YAAagC,GAAanR,YAAY,SAASC,EADpD,UAMJ,eAAC,KAAKmP,OAAN,CAAa/V,SAAU,GAAID,WAAY,IAAK5B,MAAOW,GAAMuC,QAAS2U,UAAU,OAA5E,SACG,qGACCpL,GAAkB,UAK3B,CAED,SAASqL,KAAe,IAAD,EACrB,OACE,uCACE,eAAC,KAAD,UACGxL,IACC,uCACE,gBAAC,KAAD,CAAqBxK,MAAO,CAAEiW,cAAe,OAA7C,UACE,eAAC,KAAKC,UAAN,CAAgBnW,SAAU,GAAID,WAAY,IAAK5B,MAAOW,GAAMuC,QAA5D,SACE,2CAEF,eAAC,KAAK+U,MAAN,CAAYpW,SAAU,GAAID,WAAY,IAAtC,SACE,eAACnB,EAAA,EAAD,CAAcC,MAAOA,UAIzB,gBAACwX,EAAA,EAAD,CAAYpW,MAAO,CAAEiW,cAAe,QAApC,UACE,eAAC,KAAKC,UAAN,CAAgBnW,SAAU,GAAID,WAAY,IAAK5B,MAAOW,GAAMuC,QAA5D,SACE,0CAEF,eAAC,KAAK+U,MAAN,CAAYpW,SAAU,GAAID,WAAY,IAAtC,SACE,eAAC2F,GAAA,EAAD,CAAsBC,YAAa+U,UAIvC,gBAACrE,EAAA,EAAD,CAAYpW,MAAO,CAAEiW,cAAe,QAApC,UACE,eAAC,IAAD,CAAM/X,MAAOW,GAAMuC,QAASrB,SAAU,GAAID,WAAY,IAAtD,SACE,+CAGF,gBAACsW,EAAA,EAAD,WACE,eAAC,IAAD,CAAoBC,UAAW7M,GAAW8M,UAAW7M,GAAW8M,QAAQ,IACxE,eAAC,IAAD,CAAMrY,MAAOW,GAAM2B,KAAMT,SAAU,GAAID,WAAY,IAAnD,mBACGiM,GAAchC,IAAMiB,kBADvB,aACG,EAAgC7L,cAAc,WAKpD+M,IACC,qCACE,gBAACkK,EAAA,EAAD,CAAYpW,MAAO,CAAEiW,cAAe,QAApC,UACE,eAAC,KAAKC,UAAN,CAAgBpW,WAAY,IAAKC,SAAU,GAAI7B,MAAOW,GAAMuC,QAA5D,SACE,8CAGF,gBAAC,KAAD,WACE,eAACwU,EAAA,EAAD,CAAc5J,SAAU4N,GAAkB1Y,KAAK,SAC/C,gBAAC,KAAKiV,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,UACGyW,aACCoC,KAA0B7O,IAAMC,WAC5BkC,GAAWnC,IAAMC,YACjBkC,GAAWnC,IAAME,YAHP,OAId2P,SAJc,IAIdA,QAJc,EAIdA,GAAkBnD,UACjB,IANL,OAOGmD,SAPH,IAOGA,QAPH,EAOGA,GAAkB/Z,uBAUnC,eAACO,EAAA,EAAD,CAAe2C,WAAY6M,KAAa+C,IAAcC,UAA8B,OAAlBnD,IAAyBnP,QAAS4R,GAApG,SACE,eAAC,IAAD,CAAMpS,WAAY,IAAKC,SAAU,GAAjC,SACE,yCAKT,CAED,OACE,qCACE,gBAAC,KAAD,WACE,eAAC2W,EAAA,EAAD,CACEC,OAAQhI,GACRiI,UAAWxB,GACXvG,cAAeA,GACf+E,KAAM7E,IAAkB,GACxB8H,QAAS,IACPgD,GACE,eAAC,IAAD,CAAyBjD,UAAWxB,GAA2B5P,QAASqU,KAExE,eAAC,IAAD,CACE/C,MAAO,mBACPF,UAAWxB,GACX2B,WAAYtB,GACZuB,cAAehB,KAIrBd,YAAaA,KAEf,eAAC,IAAD,CAAYQ,IAAI,KAAhB,SACE,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,eAAC,IAAD,CAAWrV,QAAQ,OAAO4W,aAAa,MAAvC,SACE,gBAAC,IAAD,CAAYvB,IAAI,OAAhB,UACE,gBAACU,EAAA,EAAD,WACE,eAAC,IAAD,CAAMrW,SAAU,GAAID,WAAY,IAAhC,SACE,oCAGF,gBAAC,IAAD,CAAMC,SAAU,GAAID,WAAY,IAAhC,UACE,mCADF,KAC4B8K,GAAD,OAA8BA,SAA9B,IAA8BA,QAA9B,EAA8BA,GAAezL,cAAc,GAA1C,eAAC+X,EAAA,EAAD,IAD5C,mBAIF,eAACd,EAAA,EAAD,CAAKpW,MAAO,CAAEE,WAAY,YAA1B,SACE,gBAAC,IAAD,CAAMH,SAAU,GAAID,WAAY,IAAhC,UACGuP,GAAiBtF,IAAM2B,mBAD1B,SAKF,uCACE,eAACnH,EAAA,EAAD,CAAQV,MAAO0R,GAA0B/Q,SAAUgR,GAA6BtU,KAAM,KACtF,gBAACkV,EAAA,EAAD,CAAYpW,MAAO,CAAE0V,IAAK,OAA1B,UACE,eAAC,KAAD,CAAWpV,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,MAA/D,iBACA,eAAC,KAAD,CAAWpL,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,MAA/D,iBACA,eAAC,KAAD,CAAWpL,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,MAA/D,iBACA,eAAC,KAAD,CAAWpL,QAAS,IAAM+N,GAAYtE,IAAM2B,kBAAmB,OAA/D,SACE,4CAOTqB,IAAWvC,IACV,eAAC2M,EAAA,EAAD,CACEC,aAAW,EACXC,UAAQ,EACRxT,MAAOwL,GAAiBtF,IAAMiB,WAC9BqD,YAAawD,GACbyF,MAAO,KACPC,OAAQ,KACRC,uBAAqB,EACrBxL,SACE,IAAIyL,QACF1K,GADF,WAEEvC,GAAKM,sBAFP,cAEE,GAAqB1E,QAFvB,WAGEoE,GAAKM,sBAHP,cAGE,GAAqB2L,SAHvB,yBAQFiB,GAAG,wBAKT,gBAAC,KAAD,WACE,iCACE,eAACP,EAAA,EAAD,CACEyD,eAAa,EACb/W,MAAOwL,GAAiBuJ,IACxBvK,YAAa2L,GACba,iBAAkBV,GAClB7C,MAAO,KACPC,OAAQ,KACRvL,SAAU9B,GAAW0O,IACrBlB,GAAG,gBACH9X,MAAO,gBACP4X,uBAAuB,EACvBsD,iBAAe,EACfC,YAAY,MACZC,cAAY,EACZnD,aAAchC,YAAagC,GAAanR,YAAY,SAASC,IAE/D,eAAC,IAAD,CAAMmR,eAAe,WAAW5X,WAAW,SAASyV,UAAU,SAA9D,SACGjM,IACCqD,KACC2M,IAA2BC,KAC5BzP,GAAW2O,KACT,eAAC,KAAD,CACEd,SAAO,EACPC,GACEY,KAA0B7O,IAAMC,WAAhC,kBAEM0P,GACIzB,aAAWzK,OAAKT,IAAUA,IAC1BkL,aAAWjE,IAAiBjH,IAAUA,IAJhD,YAKQkL,aAAW/N,GAAW2O,IAAkC9L,IALhE,YAK4ErD,IAL5E,kBAMeuO,aAAW/N,GAAW2O,IAAkC9L,IANvE,YAOM2M,GACIzB,aAAWzK,OAAKT,IAAUA,IAC1BkL,aAAWjE,IAAiBjH,IAAUA,IAThD,YAUQrD,IAbZ,SAgBGgQ,GAA0B,6CAAmC,mDAMvElP,IACC,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAWxK,MAAO,CAAEiW,cAAe,OAAQkC,aAAa,cAAD,OAAgBtZ,GAAM0C,SAA7E,UACE,gBAAC,IAAD,CAAYmU,IAAI,MAAhB,UACE,eAAC,KAAKQ,UAAN,CAAgBpW,WAAY,IAAKC,SAAU,GAAI7B,MAAOW,GAAMuC,QAA5D,SACE,eAAC,KAAD,UACE,4CAGJ,eAAC,KAAK+U,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,SACE,eAAC0F,GAAA,EAAD,CAAsBC,YAAa+U,UAItCvO,IACC,gBAAC,IAAD,CAAYwJ,IAAI,MAAhB,UACE,eAAC,KAAKQ,UAAN,CAAgBpW,WAAY,IAAKC,SAAU,GAAI7B,MAAOW,GAAMuC,QAA5D,SACE,eAAC,KAAD,UACE,gDAIJ,gBAAC,KAAD,WACE,eAACwU,EAAA,EAAD,CACE5J,SAAU4M,KAA0B7O,IAAMC,WAAaR,GAAYC,GACnEvI,KAAK,SAEP,gBAAC,KAAKiV,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,UACGyW,aACCoC,KAA0B7O,IAAMC,WAC5BkC,GAAWnC,IAAMC,YACjBkC,GAAWnC,IAAME,YAHP,OAId2P,SAJc,IAIdA,QAJc,EAIdA,GAAkBnD,UACjB,IANL,OAOGmD,SAPH,IAOGA,QAPH,EAOGA,GAAkB/Z,mBAO7B,gBAAC,KAAD,CAAWG,MAAO,CAAEoY,WAAY,QAAhC,UACE,eAAC,KAAKlC,UAAN,CACEpW,WAAY,IACZC,SAAU,GACV7B,MAAOW,GAAMuC,QACbpB,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAJxC,SAME,eAAC,KAAD,UACE,6CAGJ,eAAC,KAAKiW,MAAN,CAAYrW,WAAY,IAAKC,SAAU,GAAvC,SACE,eAACpB,EAAA,EAAD,CAAcC,MAAOA,aAM5Bka,GACC,eAACvT,GAAA,EAAD,CAAUC,QAAS,8DAAyDH,SAAS,IACnFsV,GAAsB,EACxB,eAACpV,GAAA,EAAD,CAAUC,QAAS,kCAA6BH,SAAS,IACvDsV,GAAsB,EACxB,eAACpV,GAAA,EAAD,CAAUC,QAAS,8BAAyBH,SAAS,IACnD,KAEJ,sBAAKrF,MAAO,CAAEqY,SAAU,YAAxB,SACI1O,GAKA,gBAACyM,EAAA,EAAD,WACE,eAAChW,EAAA,EAAD,CACEE,QAvtBnB,4CAwtBmBgY,UAAW1I,KAAa+C,IAAcC,UAA8B,OAAlBnD,GAClD1M,UACG2L,IACDkB,KAAa+C,IAAc4F,cACT,OAAlB9I,KACC7E,IACDA,GAAc0E,QAAQ,MACrBqL,GAAsB,IAAMhC,GAE/BpC,OAAO,aACPlW,QAAQ,OACRL,MAAO,CAAED,SAAU,OAAQD,WAAY,KAbzC,SAeG8P,KAAa+C,IAAc6F,QAC1B,eAAC,IAAD,UACE,uCAEA5I,KAAa+C,IAAcC,UAA8B,OAAlBnD,GACzC,kBAEA,mBAGJ,eAACrP,EAAA,EAAD,CACEC,QAAQ,WACRC,QAAS,KACPsO,IAAe,EAAf,EAEF7L,UACG2L,IACkB,OAAlBe,IAA0BG,KAAa+C,IAAcC,UACrD+H,GAAsB,IAAMhC,GAE/B9Q,QACIkE,GAAchC,IAAMC,eACpB+B,GAAchC,IAAME,eACpByE,IAAWiM,GAAsB,GAbvC,SAgBE,eAAC,IAAD,CAAM5a,SAAU,GAAID,WAAY,IAAhC,SACG+H,KAEG8S,GAAsB,IAAMhC,GAC5B,gBACAgC,GAAsB,EACtB,uBACA,wBArDV,eAACva,EAAA,EAAD,CAAaE,QAASqN,GAAtB,SACE,0DAgEnB,CCh1Bc,SAASsN,GAAT,GAI6E,IAAD,QAHzFC,MACEC,OAAUvO,EAE6E,EAF7EA,YAAaC,EAEgE,EAFhEA,YAAanD,EAEmD,EAFnDA,YAG/BF,EAAP,UAAgCsD,YAAYF,UAA5C,aAA4DjG,EAA1C8C,EAAlB,UAAuEqD,YAAYD,UAAnF,aAAmGlG,EACnG,EAA2BM,cAAnB8F,EAAR,EAAQA,QAAS7F,EAAjB,EAAiBA,MAEXgG,EAAUxN,YAA6B8J,GACvC2D,EAAUzN,YAA6B+J,GAErCe,EAASjB,EAAkB,OAACC,QAAD,IAACA,SAAa7C,EAAd,OAAyB8C,QAAzB,IAAyBA,SAAa9C,EAAW+C,GAA5Ec,KAEFyD,GAAU,OAAJzD,QAAI,IAAJA,OAAA,EAAAA,EAAMyD,MAAO/C,IAAKgD,OAAO,GAE/BkN,EAAoB9b,QACxByN,IAAavD,GAAaA,EAAU+D,OAAOC,OAAKT,KAAetD,GAAaA,EAAU8D,OAAOC,OAAKT,MAGpG,EAAkChO,mBAAS,GAA3C,mBAAO8B,EAAP,KAAkBC,EAAlB,KACQua,EAAoBC,cAApBD,gBAUR,OATA9S,qBAAU,KACR8S,EAAgBE,IAAcC,2BAA4B,CACxDrH,QAAO,OAAEjH,QAAF,IAAEA,OAAF,EAAEA,EAASrN,OAClBuU,QAAO,OAAEjH,QAAF,IAAEA,OAAF,EAAEA,EAAStN,OAClBoO,IAAK,IAAIqG,WAASrG,GAAKsG,OAAOrJ,IAAKgD,OAAO,MAAQ/O,cAAc,IAHlE,GAMC,IAEE+H,EAEH,qCACE,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,eAAC,IAAD,CAAeuU,OAAQC,IAAgBC,SAEvC,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC/a,EAAA,EAAD,CACEC,UAAWA,EACXC,aAAcA,EACdC,gBAAiB,gKAGrB,gBAAC,KAAD,kBACGmM,QADH,IACGA,OADH,EACGA,EAASrN,OADZ,aACuBsN,QADvB,IACuBA,OADvB,EACuBA,EAAStN,OADhC,IACwC,sCAI3B,IAAdgB,EACC,eAAC8L,GAAD,CAAWC,YAAaA,EAAaC,YAAaA,EAAanD,YAAaA,IAE5E,eAAC+O,GAAD,CAAQ7L,YAAaA,EAAaC,YAAaA,EAAanD,YAAaA,OAI5Ec,EACC,eAAC,KAAD,CAAWxK,MAAO,CAAE2V,UAAW,OAAQtV,QAAS,KAAhD,SACE,eAAC,IAAD,CAAqBub,cAAeR,EAAmB5Q,KAAMA,MAE7D,UA/BS,eAAC,IAAD,CAAUwN,GAAG,KAmCjC,C,2uBCjFY6D,EAAcnb,UAAOY,IAAV,yEAAGZ,CAAH,oTAqBXob,EAAYpb,UAAOY,IAAV,uEAAGZ,CAAH,+RAIN,KAAG7B,MAAkB+C,aAUxBma,EAAarb,UAAOY,IAAV,wEAAGZ,CAAH,qHASVsb,EAAStb,UAAOY,IAAV,oEAAGZ,CAAH,8NAKO,KAAG7B,MAAkB0C,SAUlC0a,EAA+Bvb,UAAOY,IAAV,0FAAGZ,CAAH,8EAQ5Bwb,EAAWxb,UAAOY,IAAV,sEAAGZ,CAAH,kKAKV,KAAG7B,MAAkBuC,UAQnB+a,EAAczb,kBAAO0b,KAAV,yEAAG1b,CAAH,sNAGK,KAAG7B,MAAkB0C,SAMpB,KAAG1C,MAAkB0C,SAKtC8a,EAAe3b,kBAAO0b,KAAV,0EAAG1b,CAAH,4HAUZ4b,EAAY5b,UAAO6b,OAAV,uEAAG7b,CAAH,mQAGA,QAAG7B,EAAH,EAAGA,MAAH,gBAAkBA,EAAMiE,QAAxB,SAIlB,KAAGjE,MAAkBmE,WAAWwZ,UAA/B,IAAD,qDAOO,KAAG3d,MAAkBiE,UAER,KAAGjE,MAAkBiE,UAGrB,KAAGjE,MAAkBiE,UAKhC2Z,EAAgB/b,kBAAO0b,KAAV,2EAAG1b,CAAH,wFAEJ,KAAG7B,MAAkB0C,SAK9Bmb,EAAYhc,UAAOY,IAAV,wEAAGZ,CAAH,iDAKTic,EAAejc,UAAOY,IAAV,2EAAGZ,CAAH,8CAMZkc,EAAqBlc,UAAOY,IAAV,iFAAGZ,CAAH,8EACT,KAAG7B,MAAkB0C,SAM9Bsb,EAAsBnc,UAAOY,IAAV,kFAAGZ,CAAH,sJ,wNCrJjB,SAAS2U,EACtBxR,EACAW,GAE0B,IAD1BsY,EACyB,uDADX,IAEd,EAA0B/d,oBAAY,IAAM8E,IAA5C,mBAAOkZ,EAAP,KAAcC,EAAd,KACMC,EAAQC,mBAERC,EAAgBrY,uBACnBsY,IACCJ,EAASI,GACLH,EAAMI,SACRC,aAAaL,EAAMI,SAErBJ,EAAMI,QAAUE,YAAW,KACzB/Y,EAAS4Y,GACTH,EAAMI,aAAU1W,CAAhB,GACCmW,EAHH,GAKF,CAACA,EAAatY,IAWhB,OARA+D,qBAAU,KACJ0U,EAAMI,UACRC,aAAaL,EAAMI,SACnBJ,EAAMI,aAAU1W,GAElBqW,EAASnZ,EAAT,GACC,CAACA,IAEG,CAACkZ,EAAOI,EAChB,C","file":"static/js/remove-liquidity-page.b46a5827.chunk.js","sourcesContent":["const AddCircle = ({ width, height, color }: { width?: number; height?: number; color?: string }) => {\r\n  return (\r\n    <svg width={width || 24} height={height || 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M8 9H16\" stroke={color || 'white'} strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path\r\n        d=\"M10 13L8 15L10 17\"\r\n        stroke={color || 'white'}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path d=\"M16 15H8\" stroke={color || 'white'} strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path\r\n        d=\"M14 7L16 9L14 11\"\r\n        stroke={color || 'white'}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default AddCircle\r\n","import { Currency, Price } from '@kyberswap/ks-sdk-core'\r\nimport React, { useState } from 'react'\r\nimport { Text } from 'rebass'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport SwitchIcon from 'components/Icons/SwitchIcon'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\ninterface CurrentPriceProps {\r\n  price?: Price<Currency, Currency>\r\n}\r\n\r\nexport default function CurrentPrice({ price }: CurrentPriceProps) {\r\n  const theme = useTheme()\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  const formattedPrice = showInverted ? price?.toSignificant(8) : price?.invert()?.toSignificant(8)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const nativeQuote = useCurrencyConvertedToNative(price?.quoteCurrency as Currency)\r\n  const nativeBase = useCurrencyConvertedToNative(price?.baseCurrency as Currency)\r\n  const label = showInverted\r\n    ? `1 ${nativeBase?.symbol} = ${formattedPrice ?? '-'} ${nativeQuote?.symbol}`\r\n    : `1 ${nativeQuote?.symbol} = ${formattedPrice ?? '-'} ${nativeBase?.symbol}`\r\n\r\n  return (\r\n    <Text fontWeight={400} fontSize={14}>\r\n      {show ? (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ marginRight: '4px' }}>{label}</div>\r\n          <ButtonEmpty\r\n            padding=\"0\"\r\n            width=\"fit-content\"\r\n            onClick={() => setShowInverted && setShowInverted(!showInverted)}\r\n          >\r\n            <SwitchIcon color={theme.text} />\r\n          </ButtonEmpty>\r\n        </div>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport styled from 'styled-components'\r\n\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport { TabContainer, TabItem } from 'components/PoolList/styled'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst Tab = styled(TabItem)`\r\n  padding: 8px;\r\n`\r\n\r\nconst LiquidityProviderMode = ({\r\n  activeTab,\r\n  setActiveTab,\r\n  singleTokenInfo,\r\n}: {\r\n  activeTab: number\r\n  setActiveTab: (activeTab: number) => void\r\n  singleTokenInfo: string\r\n}) => {\r\n  const theme = useTheme()\r\n  return (\r\n    <TabContainer style={{ padding: '4px' }}>\r\n      <Tab active={activeTab === 0} onClick={() => setActiveTab(0)} role=\"button\">\r\n        <Trans>Token Pair</Trans>\r\n      </Tab>\r\n      <Tab active={activeTab === 1} onClick={() => setActiveTab(1)} role=\"button\">\r\n        <Trans>Single Token</Trans>\r\n        <InfoHelper\r\n          text={singleTokenInfo}\r\n          size={12}\r\n          isActive={activeTab === 1}\r\n          color={activeTab === 1 ? theme.text : theme.subText}\r\n        />\r\n      </Tab>\r\n    </TabContainer>\r\n  )\r\n}\r\n\r\nexport default LiquidityProviderMode\r\n","import { rgba } from 'polished'\r\nimport { Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const ListItemGroupContainer = styled.div<{ isDisableShowTwoPools: boolean; isShowExpandedPools: boolean }>`\r\n  border-bottom: ${({ theme }) => `1px solid ${theme.border}`};\r\n  cursor: ${({ isDisableShowTwoPools }) => (isDisableShowTwoPools ? 'default' : 'pointer')};\r\n  background-color: ${({ theme, isShowExpandedPools }) =>\r\n    isShowExpandedPools ? rgba(theme.tableHeader, 0.6) : theme.background};\r\n\r\n  &:hover {\r\n    ${({ theme, isDisableShowTwoPools, isShowExpandedPools }) =>\r\n      !isDisableShowTwoPools && !isShowExpandedPools && `background-color: ${theme.tableHeader}`};\r\n  }\r\n`\r\n\r\nexport const ItemCardGroupContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nexport const TableRow = styled.div<{ isShowExpandedPools?: boolean; isShowBorderBottom?: boolean }>`\r\n  display: grid;\r\n  grid-gap: 1.5rem;\r\n  grid-template-columns: 1.5fr 1.5fr 2fr 0.75fr 1fr 1fr 1fr 1.5fr;\r\n  padding: 24px 16px;\r\n  font-size: 14px;\r\n  align-items: center;\r\n  height: fit-content;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    width: 86.36%; // 100% - (1.5fr / grid-template-columns)\r\n    border-bottom: ${({ theme, isShowBorderBottom }) =>\r\n      isShowBorderBottom ? `1px solid ${rgba(theme.border, 0.5)}` : 'none'};\r\n  }\r\n`\r\n\r\nexport const DataText = styled(Flex)`\r\n  color: ${({ theme }) => theme.text7};\r\n  flex-direction: column;\r\n`\r\n\r\nexport const ButtonWrapper = styled(Flex)`\r\n  justify-content: flex-end;\r\n  gap: 4px;\r\n  align-items: center;\r\n`\r\n\r\nexport const PoolAddressContainer = styled(Flex)`\r\n  align-items: center;\r\n`\r\n\r\nexport const AddressAndAMPContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`\r\n\r\nexport const AddressWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nexport const TextAMP = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nexport const TokenPairContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`\r\n\r\nexport const TextTokenPair = styled.div``\r\n\r\nexport const TextAMPLiquidity = styled.div``\r\n\r\nexport const AMPLiquidityAndTVLContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 8px;\r\n`\r\n\r\nexport const TextTVL = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nexport const TextShowMorePools = styled.div<{ disabled: boolean }>`\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.primary};\r\n  grid-column: 2 / -1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 24px;\r\n\r\n  ${({ disabled }) => (disabled ? `opacity: 0.5;` : ``)}\r\n  &:hover {\r\n    ${({ disabled }) => (!disabled ? `opacity: 0.7;` : ``)}\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    padding: 0;\r\n  `}\r\n`\r\n\r\nexport const DashedDivider = styled.div`\r\n  ${({ theme }) => `\r\n    border-bottom: 1px dashed ${theme.bg14};\r\n  `}\r\n`\r\n\r\nexport const ChevronContainer = styled.div`\r\n  margin-left: 8px;\r\n`\r\n\r\nexport const StyledItemCard = styled.div`\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  position: relative;\r\n  min-width: 392px;\r\n  background: ${({ theme }) => theme.background};\r\n  padding: 20px;\r\n  overflow: hidden;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    min-width: revert;\r\n    padding: 16px;\r\n  `}\r\n`\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto auto;\r\n  grid-template-columns: 1fr auto;\r\n  gap: 4px;\r\n`\r\n\r\nexport const HeaderTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n  grid-column: 1 / 1;\r\n  grid-row: 1 / 1;\r\n  line-height: 24px;\r\n`\r\n\r\nexport const HeaderAMPAndAddress = styled.div`\r\n  display: flex;\r\n  gap: 4px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.subText};\r\n  grid-column: 1 / 1;\r\n  grid-row: 2 / 2;\r\n  line-height: 16px;\r\n`\r\n\r\nexport const TokenRatioContainer = styled.div`\r\n  background: ${({ theme }) => theme.tabBackgound};\r\n  position: relative;\r\n  overflow: hidden;\r\n  padding: 4px;\r\n  border-radius: 999px;\r\n`\r\n\r\nexport const TokenRatioGrid = styled.div`\r\n  padding: 4px;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr 1fr auto;\r\n  grid-template-rows: 1fr;\r\n  gap: 8px;\r\n  isolation: isolate;\r\n`\r\n\r\nexport const Progress = styled.div<{ value: string }>`\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  width: ${({ value }) => value + '%'};\r\n  background: ${({ theme }) => theme.tabActive};\r\n  border-top-left-radius: 999px;\r\n  border-bottom-left-radius: 999px;\r\n`\r\n\r\nexport const TokenRatioName = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const TokenRatioPercent = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nexport const TabContainer = styled.div`\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.tabBackgound};\r\n  border-radius: 20px;\r\n  display: flex;\r\n  padding: 2px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const TabItem = styled.div<{ active?: boolean }>`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: ${({ theme, active }) => (active ? theme.text : theme.subText)};\r\n  background: ${({ theme, active }) => (active ? theme.tabActive : 'transparent')};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 6px;\r\n  border-radius: 20px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  transition: color 300ms;\r\n`\r\n\r\nexport const InformationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`\r\n\r\nexport const ButtonGroupContainer = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n\r\n  > * {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nexport const FooterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n","import React, { CSSProperties, ChangeEvent, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.subText};\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.subText};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.subText};\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.subText};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.subText};\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.subText};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.subText}, ${({ theme }) => theme.subText});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.subText}, ${({ theme }) => theme.subText});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.subText};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.subText};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.subText};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n  style?: CSSProperties\r\n  className?: string\r\n}\r\n\r\nexport default function Slider({\r\n  value,\r\n  onChange,\r\n  min = 0,\r\n  step = 1,\r\n  max = 100,\r\n  size = 28,\r\n  style,\r\n  className,\r\n}: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      type=\"range\"\r\n      value={value}\r\n      style={style ? style : { width: '90%', marginLeft: 15, marginRight: 15, padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      className={className}\r\n    />\r\n  )\r\n}\r\n","import { rgba } from 'polished'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport styled from 'styled-components'\r\n\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nexport const ZapErrorWrapper = styled.div<{ warning?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  background: ${({ theme, warning }) => rgba(warning ? theme.warning : theme.red, 0.35)};\r\n  padding: 1rem;\r\n  border-radius: 999px;\r\n  margin-bottom: 28px;\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n`\r\n\r\nconst ZapError = ({ message, warning }: { message?: string; warning?: boolean }) => {\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <ZapErrorWrapper warning={warning}>\r\n      <AlertTriangle color={warning ? theme.warning : theme.red} style={{ strokeWidth: 1.5 }} size={16} />\r\n      {message}\r\n    </ZapErrorWrapper>\r\n  )\r\n}\r\n\r\nexport default ZapError\r\n","import { Percent } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { ONE_BIPS } from 'constants/index'\r\nimport { warningSeverity } from 'utils/prices'\r\n\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  if (!priceImpact || priceImpact.lessThan('0')) {\r\n    return <div>--</div>\r\n  }\r\n\r\n  return (\r\n    <ErrorText fontWeight={500} fontSize={14} severity={warningSeverity(priceImpact)}>\r\n      {priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { useTokenContract } from 'hooks/useContract'\r\nimport { useSingleCallResult } from 'state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? TokenAmount.fromRawAmount(token, totalSupply.toString()) : undefined\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useZapContract } from 'hooks/useContract'\r\n\r\nconst useZap = (isStaticFeeContract: boolean, isOldStaticFeeContract: boolean) => {\r\n  const zapContract = useZapContract(isStaticFeeContract, isOldStaticFeeContract)\r\n  const { isEVM, networkInfo } = useActiveWeb3React()\r\n  const calculateZapInAmounts = useCallback(\r\n    async (tokenIn: string, tokenOut: string, pool: string, userIn: BigNumber) => {\r\n      if (!isEVM) return\r\n      try {\r\n        const result =\r\n          isStaticFeeContract && !isOldStaticFeeContract\r\n            ? await zapContract?.calculateZapInAmounts(\r\n                (networkInfo as EVMNetworkInfo).classic.static.factory,\r\n                tokenIn,\r\n                tokenOut,\r\n                pool,\r\n                userIn,\r\n              )\r\n            : await zapContract?.calculateZapInAmounts(tokenIn, tokenOut, pool, userIn)\r\n\r\n        return result\r\n      } catch (err) {\r\n        console.error(err)\r\n        throw err\r\n      }\r\n    },\r\n    [zapContract, isEVM, networkInfo, isStaticFeeContract, isOldStaticFeeContract],\r\n  )\r\n\r\n  const calculateZapOutAmount = useCallback(\r\n    async (tokenIn: string, tokenOut: string, pool: string, lpQty: BigNumber) => {\r\n      if (!isEVM) return\r\n      try {\r\n        const result =\r\n          isStaticFeeContract && !isOldStaticFeeContract\r\n            ? await zapContract?.calculateZapOutAmount(\r\n                (networkInfo as EVMNetworkInfo).classic.static.factory,\r\n                tokenIn,\r\n                tokenOut,\r\n                pool,\r\n                lpQty,\r\n              )\r\n            : await zapContract?.calculateZapOutAmount(tokenIn, tokenOut, pool, lpQty)\r\n\r\n        return result\r\n      } catch (err) {\r\n        console.error(err)\r\n        throw err\r\n      }\r\n    },\r\n    [zapContract, isEVM, networkInfo, isStaticFeeContract, isOldStaticFeeContract],\r\n  )\r\n\r\n  return {\r\n    zapContract,\r\n    calculateZapInAmounts,\r\n    calculateZapOutAmount,\r\n  }\r\n}\r\n\r\nexport const useZapInAmounts = (\r\n  isStaticFeeContract: boolean,\r\n  isOldStaticFeeContract: boolean,\r\n  tokenIn?: string,\r\n  tokenOut?: string,\r\n  pool?: string,\r\n  userIn?: BigNumber,\r\n) => {\r\n  const { calculateZapInAmounts } = useZap(isStaticFeeContract, isOldStaticFeeContract)\r\n  const [result, setResult] = useState<{\r\n    amounts: {\r\n      tokenInAmount: BigNumber\r\n      tokenOutAmount: BigNumber\r\n    }\r\n    error?: Error\r\n  }>({\r\n    amounts: {\r\n      tokenInAmount: BigNumber.from(0),\r\n      tokenOutAmount: BigNumber.from(0),\r\n    },\r\n    error: undefined,\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function handleCalculateZapInAmounts() {\r\n      if (!userIn) {\r\n        setResult({\r\n          amounts: {\r\n            tokenInAmount: BigNumber.from(0),\r\n            tokenOutAmount: BigNumber.from(0),\r\n          },\r\n          error: undefined,\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      try {\r\n        if (tokenIn && tokenOut && pool && userIn?.gt(0)) {\r\n          const amounts = await calculateZapInAmounts(tokenIn, tokenOut, pool, userIn)\r\n\r\n          setResult({\r\n            amounts,\r\n            error: undefined,\r\n          })\r\n        }\r\n      } catch (err) {\r\n        setResult({\r\n          amounts: {\r\n            tokenInAmount: BigNumber.from(0),\r\n            tokenOutAmount: BigNumber.from(0),\r\n          },\r\n          error: err as Error,\r\n        })\r\n      }\r\n    }\r\n\r\n    handleCalculateZapInAmounts()\r\n  }, [calculateZapInAmounts, pool, tokenIn, tokenOut, userIn])\r\n\r\n  return result\r\n}\r\n\r\nexport const useZapOutAmount = (\r\n  isStaticFeeContract: boolean,\r\n  isOldStaticFeeContract: boolean,\r\n  tokenIn?: string,\r\n  tokenOut?: string,\r\n  pool?: string,\r\n  lpQty?: BigNumber,\r\n) => {\r\n  const { calculateZapOutAmount } = useZap(isStaticFeeContract, isOldStaticFeeContract)\r\n  const [result, setResult] = useState<{ amount: BigNumber; error?: any }>({\r\n    amount: BigNumber.from(0),\r\n    error: undefined,\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function handleCalculateZapOutAmount() {\r\n      if (!lpQty || lpQty.eq(0)) {\r\n        setResult({\r\n          amount: BigNumber.from(0),\r\n          error: undefined,\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      try {\r\n        if (tokenIn && tokenOut && pool && lpQty?.gt(0)) {\r\n          const amount = await calculateZapOutAmount(tokenIn, tokenOut, pool, lpQty)\r\n          setResult({\r\n            amount,\r\n            error: undefined,\r\n          })\r\n        }\r\n      } catch (err) {\r\n        setResult({\r\n          amount: BigNumber.from(0),\r\n          error: err as Error,\r\n        })\r\n      }\r\n    }\r\n\r\n    handleCalculateZapOutAmount()\r\n  }, [calculateZapOutAmount, tokenIn, tokenOut, pool, lpQty])\r\n\r\n  return result\r\n}\r\n","import { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Currency, CurrencyAmount, Percent, Price, TokenAmount } from '@kyberswap/ks-sdk-core'\r\nimport { t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { usePairByAddress } from 'data/Reserves'\r\nimport { useTotalSupply } from 'data/TotalSupply'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useZapOutAmount } from 'hooks/useZap'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { AppState } from 'state/index'\r\nimport { tryParseAmount } from 'state/swap/hooks'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { useTokenBalance } from 'state/wallet/hooks'\r\nimport { calculateSlippageAmount } from 'utils'\r\n\r\nimport { Field, switchTokenField, typeInput } from './actions'\r\n\r\nexport function useBurnState(): AppState['burn'] {\r\n  return useSelector<AppState, AppState['burn']>(state => state.burn)\r\n}\r\n\r\nexport function useDerivedBurnInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  pairAddress: string | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  userLiquidity?: TokenAmount\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\r\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\r\n  }\r\n  amountsMin: {\r\n    [Field.CURRENCY_A]?: JSBI\r\n    [Field.CURRENCY_B]?: JSBI\r\n  }\r\n  price?: Price<Currency, Currency>\r\n  error?: string\r\n  isStaticFeePair?: boolean\r\n  isOldStaticFeeContract?: boolean\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue } = useBurnState()\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\r\n\r\n  let error: string | undefined\r\n\r\n  // pair + totalsupply\r\n  const [, pair, isStaticFeePair, isOldStaticFeeContract] = usePairByAddress(tokenA, tokenB, pairAddress)\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // balances\r\n  const userLiquidity = useTokenBalance(pair?.liquidityToken)\r\n\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken,\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? TokenAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity).quotient)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? TokenAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity).quotient)\r\n      : undefined\r\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB,\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\r\n      if (independentAmount && userLiquidity && independentAmount.greaterThan(userLiquidity)) {\r\n        error = error ?? t`Insufficient balance`\r\n      }\r\n\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else {\r\n    if (tokens[independentField]) {\r\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\r\n      const liquidityValue = liquidityValues[independentField]\r\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\r\n      }\r\n    }\r\n  }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? TokenAmount.fromRawAmount(userLiquidity.currency, percentToRemove.multiply(userLiquidity.quotient).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_A]:\r\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\r\n        ? TokenAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\r\n        ? TokenAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\r\n        : undefined,\r\n  }\r\n\r\n  const amountsMin = {\r\n    [Field.CURRENCY_A]:\r\n      parsedAmounts && parsedAmounts[Field.CURRENCY_A]\r\n        ? calculateSlippageAmount(parsedAmounts[Field.CURRENCY_A] as CurrencyAmount<Currency>, allowedSlippage)[0]\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      parsedAmounts && parsedAmounts[Field.CURRENCY_B]\r\n        ? calculateSlippageAmount(parsedAmounts[Field.CURRENCY_B] as CurrencyAmount<Currency>, allowedSlippage)[0]\r\n        : undefined,\r\n  }\r\n\r\n  const price = useMemo(() => {\r\n    const wrappedCurrencyA = currencyA?.wrapped\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [currencyA, pair])\r\n\r\n  if (!account) {\r\n    error = t`Connect wallet`\r\n  }\r\n\r\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? t`Enter an amount`\r\n  }\r\n\r\n  if (userLiquidity && parsedAmounts[Field.LIQUIDITY]?.greaterThan(userLiquidity)) {\r\n    error = error ?? t`Insufficient balance`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    userLiquidity,\r\n    parsedAmounts,\r\n    amountsMin,\r\n    price,\r\n    error,\r\n    isStaticFeePair,\r\n    isOldStaticFeeContract,\r\n  }\r\n}\r\n\r\nexport function useBurnActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onUserInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedZapOutInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  pairAddress: string | undefined,\r\n): {\r\n  dependentTokenField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  userLiquidity?: TokenAmount\r\n  noZapAmounts: {\r\n    [field in Field]?: TokenAmount\r\n  }\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  }\r\n  amountsMin: {\r\n    [Field.CURRENCY_A]: JSBI\r\n    [Field.CURRENCY_B]: JSBI\r\n  }\r\n  insufficientLiquidity: boolean\r\n  price?: Price<Currency, Currency>\r\n  error?: string\r\n  isStaticFeePair?: boolean\r\n  isOldStaticFeeContract?: boolean\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { independentField, independentTokenField, typedValue } = useBurnState()\r\n  const dependentTokenField = independentTokenField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\r\n\r\n  const tokenIn = independentTokenField === Field.CURRENCY_A ? tokenB : tokenA\r\n  const tokenOut = independentTokenField === Field.CURRENCY_A ? tokenA : tokenB\r\n\r\n  let insufficientLiquidity = false\r\n  let error: string | undefined\r\n\r\n  // pair + totalsupply\r\n  const [, pair, isStaticFeePair, isOldStaticFeeContract] = usePairByAddress(tokenA, tokenB, pairAddress)\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // balances\r\n  const userLiquidity = useTokenBalance(pair?.liquidityToken)\r\n\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken,\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? TokenAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity).quotient)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? TokenAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity).quotient)\r\n      : undefined\r\n  const liquidityValues: { [field in Field]?: TokenAmount } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB,\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\r\n\r\n      if (independentAmount && userLiquidity && independentAmount.greaterThan(userLiquidity)) {\r\n        error = error ?? t`Insufficient balance`\r\n      }\r\n\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else {\r\n    if (tokens[independentField]) {\r\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\r\n      const liquidityValue = liquidityValues[independentField]\r\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\r\n      }\r\n    }\r\n  }\r\n\r\n  const lpQty = useMemo(() => {\r\n    if (!userLiquidity) {\r\n      return BigNumber.from('0')\r\n    }\r\n\r\n    const liquidityToRemove = JSBI.divide(\r\n      JSBI.multiply(userLiquidity.quotient, percentToRemove.numerator),\r\n      percentToRemove.denominator,\r\n    )\r\n\r\n    return BigNumber.from(liquidityToRemove.toString())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userLiquidity?.quotient.toString(), percentToRemove.numerator.toString(), percentToRemove.denominator.toString()])\r\n\r\n  const zapOutAmount = useZapOutAmount(\r\n    !!isStaticFeePair,\r\n    !!isOldStaticFeeContract,\r\n    tokenIn?.address,\r\n    tokenOut?.address,\r\n    pair?.address,\r\n    lpQty,\r\n  )\r\n\r\n  // amounts\r\n  const independentTokenAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\r\n    zapOutAmount.amount.toString(),\r\n    currencies[independentTokenField],\r\n    false,\r\n  )\r\n\r\n  const dependentTokenAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\r\n    if (independentTokenAmount && liquidityValueA && liquidityValueB) {\r\n      const amount =\r\n        dependentTokenField === Field.CURRENCY_A\r\n          ? JSBI.divide(JSBI.multiply(liquidityValueA.quotient, percentToRemove.numerator), percentToRemove.denominator)\r\n          : JSBI.divide(JSBI.multiply(liquidityValueB.quotient, percentToRemove.numerator), percentToRemove.denominator)\r\n\r\n      return tryParseAmount(amount.toString(), currencies[dependentTokenField], false)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [\r\n    independentTokenAmount,\r\n    liquidityValueA,\r\n    liquidityValueB,\r\n    dependentTokenField,\r\n    percentToRemove.numerator,\r\n    percentToRemove.denominator,\r\n    currencies,\r\n  ])\r\n\r\n  const noZapAmounts: {\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  } = {\r\n    [Field.CURRENCY_A]:\r\n      tokenA && liquidityValueA && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? TokenAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && liquidityValueB && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? TokenAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\r\n        : undefined,\r\n  }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? TokenAmount.fromRawAmount(userLiquidity.currency, percentToRemove.multiply(userLiquidity.quotient).quotient)\r\n        : undefined,\r\n    [independentTokenField]:\r\n      tokenOut && independentTokenAmount\r\n        ? TokenAmount.fromRawAmount(tokenOut, independentTokenAmount.quotient)\r\n        : undefined,\r\n    [dependentTokenField]:\r\n      tokenIn && dependentTokenAmount ? TokenAmount.fromRawAmount(tokenIn, dependentTokenAmount.quotient) : undefined,\r\n  }\r\n\r\n  const amountsMin = {\r\n    [Field.CURRENCY_A]:\r\n      parsedAmounts && parsedAmounts[Field.CURRENCY_A]\r\n        ? calculateSlippageAmount(parsedAmounts[Field.CURRENCY_A] as CurrencyAmount<Currency>, allowedSlippage)[0]\r\n        : JSBI.BigInt(0),\r\n    [Field.CURRENCY_B]:\r\n      parsedAmounts && parsedAmounts[Field.CURRENCY_B]\r\n        ? calculateSlippageAmount(parsedAmounts[Field.CURRENCY_B] as CurrencyAmount<Currency>, allowedSlippage)[0]\r\n        : JSBI.BigInt(0),\r\n  }\r\n\r\n  const price = useMemo(() => {\r\n    const wrappedCurrencyA = currencyA?.wrapped\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [currencyA, pair])\r\n\r\n  if (!account) {\r\n    error = t`Connect wallet`\r\n  }\r\n\r\n  if (!typedValue && !parsedAmounts[Field.LIQUIDITY]) {\r\n    error = error ?? t`Enter an amount`\r\n  }\r\n\r\n  if (typedValue && !parsedAmounts[Field.LIQUIDITY]) {\r\n    error = error ?? t`Invalid amount`\r\n  }\r\n\r\n  if (userLiquidity && parsedAmounts[Field.LIQUIDITY]?.greaterThan(userLiquidity)) {\r\n    error = error ?? t`Insufficient balance`\r\n  }\r\n\r\n  if (\r\n    zapOutAmount.error &&\r\n    (zapOutAmount.error.message?.includes('INSUFFICIENT_LIQUIDITY') ||\r\n      zapOutAmount.error.data?.message?.includes('INSUFFICIENT_LIQUIDITY'))\r\n  ) {\r\n    insufficientLiquidity = true\r\n  }\r\n\r\n  if (zapOutAmount.error && !insufficientLiquidity) {\r\n    console.error(zapOutAmount.error)\r\n    error = t`Something went wrong`\r\n  }\r\n\r\n  return {\r\n    dependentTokenField,\r\n    currencies,\r\n    pair,\r\n    userLiquidity,\r\n    noZapAmounts,\r\n    parsedAmounts,\r\n    amountsMin,\r\n    insufficientLiquidity,\r\n    price,\r\n    error,\r\n    isStaticFeePair,\r\n    isOldStaticFeeContract,\r\n  }\r\n}\r\n\r\nexport function useZapOutActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onSwitchField: () => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n  const { independentTokenField } = useBurnState()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchField = useCallback(() => {\r\n    dispatch(\r\n      switchTokenField({ field: independentTokenField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A }),\r\n    )\r\n  }, [dispatch, independentTokenField])\r\n\r\n  return {\r\n    onUserInput,\r\n    onSwitchField,\r\n  }\r\n}\r\n","import { NEVER_RELOAD, useSingleCallResult } from 'state/multicall/hooks'\r\n\r\nimport { useActiveWeb3React } from './index'\r\nimport { useArgentWalletDetectorContract } from './useContract'\r\n\r\nexport default function useIsArgentWallet(): boolean {\r\n  const { account } = useActiveWeb3React()\r\n  const argentWalletDetector = useArgentWalletDetectorContract()\r\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', [account ?? undefined], NEVER_RELOAD)\r\n  return call?.result?.[0] ?? false\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, CurrencyAmount, Fraction, Percent, Token, WETH } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { captureException } from '@sentry/react'\r\nimport JSBI from 'jsbi'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\r\nimport { BlackCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport CurrentPrice from 'components/CurrentPrice'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport Loader from 'components/Loader'\r\nimport Row, { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport Slider from 'components/Slider'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport { Dots } from 'components/swap/styleds'\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport { useActiveWeb3React, useWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\r\nimport { usePairContract } from 'hooks/useContract'\r\nimport useIsArgentWallet from 'hooks/useIsArgentWallet'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\r\nimport { Wrapper } from 'pages/Pool/styleds'\r\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks'\r\nimport { Field } from 'state/burn/actions'\r\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from 'state/burn/hooks'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { StyledInternalLink, TYPE, UppercaseText } from 'theme'\r\nimport { calculateGasMargin, calculateSlippageAmount, formattedNum } from 'utils'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport { formatJSBIValue } from 'utils/formatBalance'\r\nimport {\r\n  getDynamicFeeRouterContract,\r\n  getOldStaticFeeRouterContract,\r\n  getStaticFeeRouterContract,\r\n} from 'utils/getContract'\r\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler'\r\n\r\nimport {\r\n  CurrentPriceWrapper,\r\n  DetailBox,\r\n  DetailWrapper,\r\n  FirstColumn,\r\n  GridColumn,\r\n  MaxButton,\r\n  ModalDetailWrapper,\r\n  SecondColumn,\r\n  TokenWrapper,\r\n} from './styled'\r\n\r\nexport default function TokenPair({\r\n  currencyIdA,\r\n  currencyIdB,\r\n  pairAddress,\r\n}: {\r\n  currencyIdA: string\r\n  currencyIdB: string\r\n  pairAddress: string\r\n}) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, isEVM, networkInfo } = useActiveWeb3React()\r\n  const { library } = useWeb3React()\r\n\r\n  const nativeA = currencyA as Currency\r\n  const nativeB = currencyB as Currency\r\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\r\n\r\n  const currencyAIsETHER = !!currencyA?.isNative\r\n  const currencyAIsWETH = !!currencyA?.equals(WETH[chainId])\r\n  const currencyBIsETHER = !!currencyB?.isNative\r\n  const currencyBIsWETH = !!currencyB?.equals(WETH[chainId])\r\n\r\n  const theme = useTheme()\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletModal = useWalletModalToggle()\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, userLiquidity, parsedAmounts, amountsMin, price, error, isStaticFeePair, isOldStaticFeeContract } =\r\n    useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined, pairAddress)\r\n  const contractAddress = isEVM\r\n    ? isStaticFeePair\r\n      ? isOldStaticFeeContract\r\n        ? (networkInfo as EVMNetworkInfo).classic.oldStatic?.router\r\n        : (networkInfo as EVMNetworkInfo).classic.static.router\r\n      : (networkInfo as EVMNetworkInfo).classic.dynamic?.router\r\n    : undefined\r\n  const amp = pair?.amp || JSBI.BigInt(0)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const deadline = useTransactionDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n  const [removeLiquidityError, setRemoveLiquidityError] = useState<string>('')\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  // allowance handling\r\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\r\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], contractAddress)\r\n\r\n  // if user liquidity change => remove signature\r\n  useEffect(() => {\r\n    setSignatureData(null)\r\n    // eslint-disable-next-line\r\n  }, [userLiquidity?.toExact()])\r\n\r\n  const isArgentWallet = useIsArgentWallet()\r\n\r\n  async function onAttemptToApprove() {\r\n    if (!chainId) throw new Error('missing chain')\r\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    if (isArgentWallet) {\r\n      return approveCallback()\r\n    }\r\n\r\n    // try to gather a signature for permission\r\n    const nonce = await pairContract.nonces(account)\r\n\r\n    const EIP712Domain = [\r\n      { name: 'name', type: 'string' },\r\n      { name: 'version', type: 'string' },\r\n      { name: 'chainId', type: 'uint256' },\r\n      { name: 'verifyingContract', type: 'address' },\r\n    ]\r\n    const domain = {\r\n      name: isStaticFeePair ? 'KyberSwap LP' : 'KyberDMM LP',\r\n      version: '1',\r\n      chainId: chainId,\r\n      verifyingContract: pair.liquidityToken.address,\r\n    }\r\n    const Permit = [\r\n      { name: 'owner', type: 'address' },\r\n      { name: 'spender', type: 'address' },\r\n      { name: 'value', type: 'uint256' },\r\n      { name: 'nonce', type: 'uint256' },\r\n      { name: 'deadline', type: 'uint256' },\r\n    ]\r\n    const message = {\r\n      owner: account,\r\n      TransactionErrorContent,\r\n      spender: contractAddress,\r\n      value: liquidityAmount.quotient.toString(),\r\n      nonce: nonce.toHexString(),\r\n      deadline: deadline.toNumber(),\r\n    }\r\n    const data = JSON.stringify({\r\n      types: {\r\n        EIP712Domain,\r\n        Permit,\r\n      },\r\n      domain,\r\n      primaryType: 'Permit',\r\n      message,\r\n    })\r\n\r\n    library\r\n      .send('eth_signTypedData_v4', [account, data])\r\n      .then(splitSignature)\r\n      .then(signature => {\r\n        setSignatureData({\r\n          v: signature.v,\r\n          r: signature.r,\r\n          s: signature.s,\r\n          deadline: deadline.toNumber(),\r\n        })\r\n      })\r\n      .catch((error: any) => {\r\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\r\n        if (error?.code !== 4001) {\r\n          approveCallback()\r\n        }\r\n      })\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      setSignatureData(null)\r\n      return _onUserInput(field, typedValue)\r\n    },\r\n    [_onUserInput],\r\n  )\r\n\r\n  const onLiquidityInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\r\n    [onUserInput],\r\n  )\r\n  const onCurrencyAInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\r\n    [onUserInput],\r\n  )\r\n  const onCurrencyBInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\r\n    [onUserInput],\r\n  )\r\n\r\n  // tx sending\r\n  const addTransactionWithType = useTransactionAdder()\r\n  async function onRemove() {\r\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n    const routerContract = isStaticFeePair\r\n      ? isOldStaticFeeContract\r\n        ? getOldStaticFeeRouterContract(chainId, library, account)\r\n        : getStaticFeeRouterContract(chainId, library, account)\r\n      : getDynamicFeeRouterContract(chainId, library, account)\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB.isNative\r\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          pairAddress,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        methodNames = ['removeLiquidity']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          pairAddress,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n    }\r\n    // we have a signataure, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          pairAddress,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        methodNames = ['removeLiquidityWithPermit']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          pairAddress,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map(methodName =>\r\n        routerContract.estimateGas[methodName](...args)\r\n          .then(calculateGasMargin)\r\n          .catch(error => {\r\n            console.error(`estimateGas failed`, methodName, args, error)\r\n            setRemoveLiquidityError(error.toString())\r\n            return undefined\r\n          }),\r\n      ),\r\n    )\r\n\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate =>\r\n      BigNumber.isBigNumber(safeGasEstimate),\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await routerContract[methodName](...args, {\r\n        gasLimit: safeGasEstimate,\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          if (!!currencyA && !!currencyB) {\r\n            setAttemptingTxn(false)\r\n\r\n            addTransactionWithType({\r\n              hash: response.hash,\r\n              type: TRANSACTION_TYPE.REMOVE_LIQUIDITY,\r\n              summary:\r\n                parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) +\r\n                ' ' +\r\n                (currencyAIsWETH ? NativeCurrencies[chainId].symbol : currencyA.symbol) +\r\n                ' and ' +\r\n                parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) +\r\n                ' ' +\r\n                (currencyBIsWETH ? NativeCurrencies[chainId].symbol : currencyB.symbol),\r\n              arbitrary: {\r\n                poolAddress: pairAddress,\r\n                token_1: currencyA.symbol,\r\n                token_2: currencyB.symbol,\r\n                remove_liquidity_method: 'token pair',\r\n                amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\r\n              },\r\n            })\r\n\r\n            setTxHash(response.hash)\r\n          }\r\n        })\r\n        .catch((err: Error) => {\r\n          setAttemptingTxn(false)\r\n          const e = new Error('Remove Liquidity Error', { cause: err })\r\n          e.name = 'RemoveLiquidityError'\r\n          captureException(e, { extra: { args } })\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          if ((err as any)?.code !== 4001) {\r\n            console.error(err)\r\n          }\r\n\r\n          if (err.message.includes('INSUFFICIENT')) {\r\n            setRemoveLiquidityError(t`Insufficient liquidity available. Please reload page and try again!`)\r\n          } else {\r\n            setRemoveLiquidityError(err?.message)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const usdPrices = useTokensPrice([tokenA, tokenB])\r\n\r\n  const estimatedUsdCurrencyA =\r\n    parsedAmounts[Field.CURRENCY_A] && usdPrices[0]\r\n      ? parseFloat((parsedAmounts[Field.CURRENCY_A] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[0]\r\n      : 0\r\n\r\n  const estimatedUsdCurrencyB =\r\n    parsedAmounts[Field.CURRENCY_B] && usdPrices[1]\r\n      ? parseFloat((parsedAmounts[Field.CURRENCY_B] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[1]\r\n      : 0\r\n\r\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    nativeA?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${nativeB?.symbol}`\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n    setRemoveLiquidityError('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback,\r\n  )\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\r\n        <AutoRow gap=\"4px\">\r\n          <CurrencyLogo currency={currencyA} size={'28px'} />\r\n          <Text fontSize={32} fontWeight={500}>\r\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\r\n          </Text>\r\n          <Text fontSize={32} fontWeight={500}>\r\n            {nativeA?.symbol}\r\n          </Text>\r\n          {!!estimatedUsdCurrencyA && (\r\n            <Text color={theme.subText} marginLeft=\"4px\" fontSize={18} fontWeight={500}>\r\n              (~{formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined})\r\n            </Text>\r\n          )}\r\n        </AutoRow>\r\n\r\n        <AutoRow gap=\"4px\">\r\n          <CurrencyLogo currency={currencyB} size={'28px'} />\r\n          <Text fontSize={32} fontWeight={500}>\r\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\r\n          </Text>\r\n          <Text fontSize={32} fontWeight={500}>\r\n            {nativeB?.symbol}\r\n          </Text>\r\n          {!!estimatedUsdCurrencyB && (\r\n            <Text color={theme.subText} marginLeft=\"4px\" fontSize={18} fontWeight={500}>\r\n              (~{formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined})\r\n            </Text>\r\n          )}\r\n        </AutoRow>\r\n\r\n        <TYPE.italic fontSize={12} fontWeight={400} color={theme.subText} textAlign=\"left\">\r\n          {t`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </TYPE.italic>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <ModalDetailWrapper>\r\n          {pair && (\r\n            <>\r\n              <CurrentPriceWrapper style={{ paddingBottom: '8px' }}>\r\n                <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n                  <Trans>Current Price</Trans>\r\n                </TYPE.subHeader>\r\n                <TYPE.black fontSize={14} fontWeight={400}>\r\n                  <CurrentPrice price={price} />\r\n                </TYPE.black>\r\n              </CurrentPriceWrapper>\r\n\r\n              <RowBetween style={{ paddingBottom: '12px' }}>\r\n                <Text color={theme.subText} fontSize={14} fontWeight={400}>\r\n                  <Trans>LP Tokens Removed</Trans>\r\n                </Text>\r\n\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\r\n                  <Text color={theme.text} fontSize={14} fontWeight={400}>\r\n                    {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              </RowBetween>\r\n\r\n              {amountsMin && (\r\n                <>\r\n                  <RowBetween style={{ paddingBottom: '12px' }}>\r\n                    <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\r\n                      <Trans>Minimum Received</Trans>\r\n                    </TYPE.subHeader>\r\n\r\n                    <TokenWrapper>\r\n                      <CurrencyLogo currency={currencyA} size=\"16px\" />\r\n                      <TYPE.black fontWeight={400} fontSize={14}>\r\n                        {formatJSBIValue(amountsMin[Field.CURRENCY_A], currencyA?.decimals)} {nativeA?.symbol}\r\n                      </TYPE.black>\r\n                    </TokenWrapper>\r\n                  </RowBetween>\r\n\r\n                  <RowBetween>\r\n                    <div />\r\n\r\n                    <TokenWrapper>\r\n                      <CurrencyLogo currency={currencyB} size=\"16px\" />\r\n                      <TYPE.black fontWeight={400} fontSize={14}>\r\n                        {formatJSBIValue(amountsMin[Field.CURRENCY_B], currencyB?.decimals)} {nativeB?.symbol}\r\n                      </TYPE.black>\r\n                    </TokenWrapper>\r\n                  </RowBetween>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </ModalDetailWrapper>\r\n\r\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          <Text fontWeight={500} fontSize={16}>\r\n            <Trans>Confirm</Trans>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <TransactionConfirmationModal\r\n          isOpen={showConfirm}\r\n          onDismiss={handleDismissConfirmation}\r\n          attemptingTxn={attemptingTxn}\r\n          hash={txHash ? txHash : ''}\r\n          content={() =>\r\n            removeLiquidityError ? (\r\n              <TransactionErrorContent onDismiss={handleDismissConfirmation} message={removeLiquidityError} />\r\n            ) : (\r\n              <ConfirmationModalContent\r\n                title={'You will receive'}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )\r\n          }\r\n          pendingText={pendingText}\r\n        />\r\n        <AutoColumn gap=\"md\">\r\n          <GridColumn>\r\n            <FirstColumn>\r\n              <BlackCard padding=\"1rem\" borderRadius=\"4px\">\r\n                <AutoColumn gap=\"1rem\">\r\n                  <RowBetween>\r\n                    <Text fontSize={12} fontWeight={500}>\r\n                      <Trans>Amount</Trans>\r\n                    </Text>\r\n\r\n                    <Text fontSize={12} fontWeight={500}>\r\n                      <Trans>Balance</Trans>: {!userLiquidity ? <Loader /> : userLiquidity?.toSignificant(6)} LP Tokens\r\n                    </Text>\r\n                  </RowBetween>\r\n                  <Row style={{ alignItems: 'flex-end' }}>\r\n                    <Text fontSize={72} fontWeight={500}>\r\n                      {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\r\n                    </Text>\r\n                  </Row>\r\n\r\n                  <>\r\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} size={18} />\r\n                    <RowBetween style={{ gap: '4px' }}>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>25%</MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>50%</MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>75%</MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}>\r\n                        <Trans>Max</Trans>\r\n                      </MaxButton>\r\n                    </RowBetween>\r\n                  </>\r\n                </AutoColumn>\r\n              </BlackCard>\r\n\r\n              {chainId && pair && (\r\n                <CurrencyInputPanel\r\n                  hideBalance\r\n                  hideLogo\r\n                  value={formattedAmounts[Field.LIQUIDITY]}\r\n                  onUserInput={onLiquidityInput}\r\n                  onMax={null}\r\n                  onHalf={null}\r\n                  disableCurrencySelect\r\n                  currency={\r\n                    new Token(\r\n                      chainId,\r\n                      pair.liquidityToken?.address,\r\n                      pair.liquidityToken?.decimals,\r\n                      `LP Tokens`,\r\n                      `LP Tokens`,\r\n                    )\r\n                  }\r\n                  id=\"liquidity-amount\"\r\n                />\r\n              )}\r\n            </FirstColumn>\r\n\r\n            <SecondColumn>\r\n              <>\r\n                <div style={{ marginBottom: '1.5rem' }}>\r\n                  <CurrencyInputPanel\r\n                    value={formattedAmounts[Field.CURRENCY_A]}\r\n                    onUserInput={onCurrencyAInput}\r\n                    onMax={null}\r\n                    onHalf={null}\r\n                    currency={currencyA}\r\n                    label={t`Output`}\r\n                    onCurrencySelect={() => null}\r\n                    disableCurrencySelect={true}\r\n                    id=\"remove-liquidity-tokena\"\r\n                    estimatedUsd={formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined}\r\n                  />\r\n                  <Flex justifyContent=\"flex-end\" alignItems=\"center\" marginTop=\"0.5rem\">\r\n                    {pairAddress && chainId && (currencyAIsETHER || currencyAIsWETH) && (\r\n                      <StyledInternalLink\r\n                        replace\r\n                        to={`/remove/${\r\n                          currencyAIsETHER ? currencyId(WETH[chainId], chainId) : NativeCurrencies[chainId].symbol\r\n                        }/${currencyIdB}/${pairAddress}`}\r\n                      >\r\n                        {currencyAIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\r\n                      </StyledInternalLink>\r\n                    )}\r\n                  </Flex>\r\n                </div>\r\n\r\n                <div>\r\n                  <CurrencyInputPanel\r\n                    value={formattedAmounts[Field.CURRENCY_B]}\r\n                    onUserInput={onCurrencyBInput}\r\n                    onMax={null}\r\n                    onHalf={null}\r\n                    currency={currencyB}\r\n                    onCurrencySelect={() => null}\r\n                    disableCurrencySelect={true}\r\n                    id=\"remove-liquidity-tokenb\"\r\n                    estimatedUsd={formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined}\r\n                  />\r\n                  <Flex justifyContent=\"flex-end\" alignItems=\"center\" marginTop=\"0.5rem\">\r\n                    {pairAddress && chainId && (currencyBIsWETH || currencyBIsETHER) && (\r\n                      <StyledInternalLink\r\n                        replace\r\n                        to={`/remove/${currencyIdA}/${\r\n                          currencyBIsETHER ? currencyId(WETH[chainId], chainId) : NativeCurrencies[chainId].symbol\r\n                        }/${pairAddress}`}\r\n                      >\r\n                        {currencyBIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\r\n                      </StyledInternalLink>\r\n                    )}\r\n                  </Flex>\r\n                </div>\r\n              </>\r\n\r\n              {pair && (\r\n                <DetailWrapper>\r\n                  <AutoRow justify=\"space-between\" gap=\"4px\" style={{ paddingBottom: '12px' }}>\r\n                    <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\r\n                      <UppercaseText>\r\n                        <Trans>Minimum Received</Trans>\r\n                      </UppercaseText>\r\n                    </TYPE.subHeader>\r\n                  </AutoRow>\r\n\r\n                  {amountsMin && (\r\n                    <DetailBox style={{ paddingBottom: '12px', borderBottom: `1px dashed ${theme.border}` }}>\r\n                      <TokenWrapper>\r\n                        <CurrencyLogo currency={currencyA} size=\"16px\" />\r\n                        <TYPE.black fontWeight={400} fontSize={14}>\r\n                          {formatJSBIValue(amountsMin[Field.CURRENCY_A], currencyA?.decimals)} {nativeA?.symbol}\r\n                        </TYPE.black>\r\n                      </TokenWrapper>\r\n\r\n                      <TokenWrapper>\r\n                        <CurrencyLogo currency={currencyB} size=\"16px\" />\r\n                        <TYPE.black fontWeight={400} fontSize={14}>\r\n                          {formatJSBIValue(amountsMin[Field.CURRENCY_B], currencyB?.decimals)} {nativeB?.symbol}\r\n                        </TYPE.black>\r\n                      </TokenWrapper>\r\n                    </DetailBox>\r\n                  )}\r\n\r\n                  <DetailBox style={{ paddingTop: '12px' }}>\r\n                    <TYPE.subHeader\r\n                      fontWeight={500}\r\n                      fontSize={12}\r\n                      color={theme.subText}\r\n                      style={{ display: 'flex', alignItems: 'center' }}\r\n                    >\r\n                      <UppercaseText>\r\n                        <Trans>Current Price</Trans>\r\n                      </UppercaseText>\r\n                    </TYPE.subHeader>\r\n                    <TYPE.black fontWeight={400} fontSize={14}>\r\n                      <CurrentPrice price={price} />\r\n                    </TYPE.black>\r\n                  </DetailBox>\r\n                </DetailWrapper>\r\n              )}\r\n\r\n              <div style={{ position: 'relative' }}>\r\n                {!account ? (\r\n                  <ButtonLight onClick={toggleWalletModal}>\r\n                    <Trans>Connect Wallet</Trans>\r\n                  </ButtonLight>\r\n                ) : (\r\n                  <RowBetween>\r\n                    {!error && (\r\n                      <ButtonConfirmed\r\n                        onClick={onAttemptToApprove}\r\n                        confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\r\n                        disabled={\r\n                          approval !== ApprovalState.NOT_APPROVED ||\r\n                          signatureData !== null ||\r\n                          !userLiquidity ||\r\n                          userLiquidity.equalTo('0')\r\n                        }\r\n                        margin=\"0 1rem 0 0\"\r\n                        style={{ fontSize: '16px', fontWeight: 500 }}\r\n                      >\r\n                        {approval === ApprovalState.PENDING ? (\r\n                          <Dots>\r\n                            <Trans>Approving</Trans>\r\n                          </Dots>\r\n                        ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                          t`Approved`\r\n                        ) : (\r\n                          t`Approve`\r\n                        )}\r\n                      </ButtonConfirmed>\r\n                    )}\r\n                    <ButtonError\r\n                      onClick={() => {\r\n                        setShowConfirm(true)\r\n                      }}\r\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                      error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n                    >\r\n                      <Text fontSize={16} fontWeight={500}>\r\n                        {error || t`Remove`}\r\n                      </Text>\r\n                    </ButtonError>\r\n                  </RowBetween>\r\n                )}\r\n              </div>\r\n            </SecondColumn>\r\n          </GridColumn>\r\n        </AutoColumn>\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport {\r\n  Currency,\r\n  CurrencyAmount,\r\n  Fraction,\r\n  Percent,\r\n  Token,\r\n  TokenAmount,\r\n  WETH,\r\n  computePriceImpact,\r\n} from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { captureException } from '@sentry/react'\r\nimport JSBI from 'jsbi'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\r\nimport { BlackCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport CurrentPrice from 'components/CurrentPrice'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport Loader from 'components/Loader'\r\nimport Row, { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport Slider from 'components/Slider'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport ZapError from 'components/ZapError'\r\nimport FormattedPriceImpact from 'components/swap/FormattedPriceImpact'\r\nimport { Dots } from 'components/swap/styleds'\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport { useActiveWeb3React, useWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\r\nimport { usePairContract } from 'hooks/useContract'\r\nimport useIsArgentWallet from 'hooks/useIsArgentWallet'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\r\nimport { Wrapper } from 'pages/Pool/styleds'\r\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks'\r\nimport { Field } from 'state/burn/actions'\r\nimport { useBurnState, useDerivedZapOutInfo, useZapOutActionHandlers } from 'state/burn/hooks'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { StyledInternalLink, TYPE, UppercaseText } from 'theme'\r\nimport { calculateGasMargin, formattedNum } from 'utils'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { formatJSBIValue } from 'utils/formatBalance'\r\nimport { getZapContract } from 'utils/getContract'\r\nimport { computePriceImpactWithoutFee, warningSeverity } from 'utils/prices'\r\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler'\r\n\r\nimport {\r\n  CurrentPriceWrapper,\r\n  DetailBox,\r\n  DetailWrapper,\r\n  FirstColumn,\r\n  GridColumn,\r\n  MaxButton,\r\n  ModalDetailWrapper,\r\n  SecondColumn,\r\n  TokenWrapper,\r\n} from './styled'\r\n\r\nexport default function ZapOut({\r\n  currencyIdA,\r\n  currencyIdB,\r\n  pairAddress,\r\n}: {\r\n  currencyIdA: string\r\n  currencyIdB: string\r\n  pairAddress: string\r\n}) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, isEVM, networkInfo } = useActiveWeb3React()\r\n  const { library } = useWeb3React()\r\n\r\n  const nativeA = useCurrencyConvertedToNative(currencyA as Currency)\r\n  const nativeB = useCurrencyConvertedToNative(currencyB as Currency)\r\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\r\n\r\n  const theme = useTheme()\r\n\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletModal = useWalletModalToggle()\r\n\r\n  // burn state\r\n  const { independentField, independentTokenField, typedValue } = useBurnState()\r\n  const {\r\n    dependentTokenField,\r\n    currencies,\r\n    pair,\r\n    userLiquidity,\r\n    noZapAmounts,\r\n    parsedAmounts,\r\n    amountsMin,\r\n    insufficientLiquidity,\r\n    price,\r\n    error,\r\n    isStaticFeePair,\r\n    isOldStaticFeeContract,\r\n  } = useDerivedZapOutInfo(currencyA ?? undefined, currencyB ?? undefined, pairAddress)\r\n  const { onUserInput: _onUserInput, onSwitchField } = useZapOutActionHandlers()\r\n\r\n  const amp = pair?.amp || JSBI.BigInt(0)\r\n\r\n  const selectedCurrencyIsETHER = !!(\r\n    chainId &&\r\n    currencies[independentTokenField] &&\r\n    currencies[independentTokenField]?.isNative\r\n  )\r\n\r\n  const selectedCurrencyIsWETH = !!(\r\n    chainId &&\r\n    currencies[independentTokenField] &&\r\n    currencies[independentTokenField]?.equals(WETH[chainId])\r\n  )\r\n\r\n  const independentToken =\r\n    nativeA && nativeB ? (independentTokenField === Field.CURRENCY_A ? nativeA : nativeB) : undefined\r\n\r\n  const isValid = !error && !insufficientLiquidity\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const deadline = useTransactionDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n  const [zapOutError, setZapOutError] = useState<string>('')\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  // allowance handling\r\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\r\n  const [approval, approveCallback] = useApproveCallback(\r\n    parsedAmounts[Field.LIQUIDITY],\r\n    isEVM\r\n      ? isStaticFeePair\r\n        ? isOldStaticFeeContract\r\n          ? (networkInfo as EVMNetworkInfo).classic.oldStatic?.zap\r\n          : (networkInfo as EVMNetworkInfo).classic.static.zap\r\n        : (networkInfo as EVMNetworkInfo).classic.dynamic?.zap\r\n      : undefined,\r\n  )\r\n\r\n  // if user liquidity change => remove signature\r\n  useEffect(() => {\r\n    setSignatureData(null)\r\n    // eslint-disable-next-line\r\n  }, [userLiquidity?.toExact()])\r\n\r\n  const isArgentWallet = useIsArgentWallet()\r\n\r\n  async function onAttemptToApprove() {\r\n    if (!chainId) throw new Error('missing chain')\r\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    if (isArgentWallet) {\r\n      return approveCallback()\r\n    }\r\n\r\n    // try to gather a signature for permission\r\n    const nonce = await pairContract.nonces(account)\r\n\r\n    const EIP712Domain = [\r\n      { name: 'name', type: 'string' },\r\n      { name: 'version', type: 'string' },\r\n      { name: 'chainId', type: 'uint256' },\r\n      { name: 'verifyingContract', type: 'address' },\r\n    ]\r\n    const domain = {\r\n      name: isStaticFeePair ? 'KyberSwap LP' : 'KyberDMM LP',\r\n      version: '1',\r\n      chainId: chainId,\r\n      verifyingContract: pair.liquidityToken.address,\r\n    }\r\n    const Permit = [\r\n      { name: 'owner', type: 'address' },\r\n      { name: 'spender', type: 'address' },\r\n      { name: 'value', type: 'uint256' },\r\n      { name: 'nonce', type: 'uint256' },\r\n      { name: 'deadline', type: 'uint256' },\r\n    ]\r\n    const message = {\r\n      owner: account,\r\n      spender: isEVM\r\n        ? isStaticFeePair\r\n          ? isOldStaticFeeContract\r\n            ? (networkInfo as EVMNetworkInfo).classic.oldStatic?.zap\r\n            : (networkInfo as EVMNetworkInfo).classic.static.zap\r\n          : (networkInfo as EVMNetworkInfo).classic.dynamic?.zap\r\n        : undefined,\r\n      value: liquidityAmount.quotient.toString(),\r\n      nonce: nonce.toHexString(),\r\n      deadline: deadline.toNumber(),\r\n    }\r\n    const data = JSON.stringify({\r\n      types: {\r\n        EIP712Domain,\r\n        Permit,\r\n      },\r\n      domain,\r\n      primaryType: 'Permit',\r\n      message,\r\n    })\r\n\r\n    library\r\n      .send('eth_signTypedData_v4', [account, data])\r\n      .then(splitSignature)\r\n      .then(signature => {\r\n        setSignatureData({\r\n          v: signature.v,\r\n          r: signature.r,\r\n          s: signature.s,\r\n          deadline: deadline.toNumber(),\r\n        })\r\n      })\r\n      .catch((error: any) => {\r\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\r\n        if (error?.code !== 4001) {\r\n          approveCallback()\r\n        }\r\n      })\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      setSignatureData(null)\r\n      return _onUserInput(field, typedValue)\r\n    },\r\n    [_onUserInput],\r\n  )\r\n\r\n  const onLiquidityInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\r\n    [onUserInput],\r\n  )\r\n  const onCurrencyInput = useCallback(\r\n    (typedValue: string): void => onUserInput(independentTokenField, typedValue),\r\n    [independentTokenField, onUserInput],\r\n  )\r\n\r\n  // tx sending\r\n  const addTransactionWithType = useTransactionAdder()\r\n  async function onRemove() {\r\n    if (!isEVM || !library || !account || !deadline) throw new Error('missing dependencies')\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n    const zapContract = getZapContract(chainId, library, account, isStaticFeePair, isOldStaticFeeContract)\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB.isNative\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // zapOutEth\r\n      if (selectedCurrencyIsETHER) {\r\n        methodNames = ['zapOutEth']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          pairAddress,\r\n          account,\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n      // zapOut\r\n      else {\r\n        methodNames = ['zapOut']\r\n        args = [\r\n          independentTokenField === Field.CURRENCY_A ? tokenB.address : tokenA.address,\r\n          independentTokenField === Field.CURRENCY_A ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          pairAddress,\r\n          account,\r\n          independentTokenField === Field.CURRENCY_A\r\n            ? amountsMin[Field.CURRENCY_A].toString()\r\n            : amountsMin[Field.CURRENCY_B].toString(),\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n    }\r\n    // we have a signataure, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // zapOutEthPermit\r\n      if (selectedCurrencyIsETHER) {\r\n        methodNames = ['zapOutEthPermit']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          pairAddress,\r\n          account,\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // zapOutPermit\r\n      else {\r\n        methodNames = ['zapOutPermit']\r\n        args = [\r\n          independentTokenField === Field.CURRENCY_A ? tokenB.address : tokenA.address,\r\n          independentTokenField === Field.CURRENCY_A ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          pairAddress,\r\n          account,\r\n          independentTokenField === Field.CURRENCY_A\r\n            ? amountsMin[Field.CURRENCY_A].toString()\r\n            : amountsMin[Field.CURRENCY_B].toString(),\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n\r\n    // All methods of new zap static fee contract include factory address as first arg\r\n    if (isStaticFeePair && !isOldStaticFeeContract) {\r\n      args.unshift((networkInfo as EVMNetworkInfo).classic.static.factory)\r\n    }\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map(methodName =>\r\n        zapContract.estimateGas[methodName](...args)\r\n          .then(calculateGasMargin)\r\n          .catch(err => {\r\n            // we only care if the error is something other than the user rejected the tx\r\n            if ((err as any)?.code !== 4001) {\r\n              console.error(`estimateGas failed`, methodName, args, err)\r\n            }\r\n\r\n            if (\r\n              err.message.includes('INSUFFICIENT_OUTPUT_AMOUNT') ||\r\n              err?.data?.message?.includes('INSUFFICIENT_OUTPUT_AMOUNT')\r\n            ) {\r\n              setZapOutError(t`Insufficient Liquidity in the Liquidity Pool to Swap`)\r\n            } else {\r\n              setZapOutError(err?.message)\r\n            }\r\n\r\n            return undefined\r\n          }),\r\n      ),\r\n    )\r\n\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate =>\r\n      BigNumber.isBigNumber(safeGasEstimate),\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await zapContract[methodName](...args, {\r\n        gasLimit: safeGasEstimate,\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          if (!!currencyA && !!currencyB) {\r\n            setAttemptingTxn(false)\r\n\r\n            addTransactionWithType({\r\n              hash: response.hash,\r\n              type: TRANSACTION_TYPE.REMOVE_LIQUIDITY,\r\n              summary: parsedAmounts[independentTokenField]?.toSignificant(6) + ' ' + independentToken?.symbol,\r\n              arbitrary: {\r\n                poolAddress: pairAddress,\r\n                token_1: currencyA.symbol,\r\n                token_2: currencyB.symbol,\r\n                remove_liquidity_method: 'single token',\r\n                amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\r\n              },\r\n            })\r\n\r\n            setTxHash(response.hash)\r\n          }\r\n        })\r\n        .catch((err: Error) => {\r\n          setAttemptingTxn(false)\r\n          const e = new Error('zap out failed', { cause: err })\r\n          e.name = 'ZapError'\r\n          captureException(e, { extra: { args } })\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          if ((err as any)?.code !== 4001) {\r\n            console.error(err)\r\n          }\r\n\r\n          if (err.message.includes('INSUFFICIENT_OUTPUT_AMOUNT')) {\r\n            setZapOutError(t`Insufficient Liquidity in the Liquidity Pool to Swap`)\r\n          } else {\r\n            setZapOutError(err?.message)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const pendingText = `Removing ${parsedAmounts[independentTokenField]?.toSignificant(6)} ${independentToken?.symbol}`\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n    setZapOutError('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback,\r\n  )\r\n\r\n  const handleSwitchCurrency = useCallback(() => {\r\n    onSwitchField()\r\n  }, [onSwitchField])\r\n\r\n  const priceToSwap = price ? (independentTokenField === Field.CURRENCY_A ? price.invert() : price) : undefined\r\n\r\n  const amountOut =\r\n    parsedAmounts[independentTokenField] &&\r\n    noZapAmounts[independentTokenField] &&\r\n    !(parsedAmounts[independentTokenField] as TokenAmount).lessThan(noZapAmounts[independentTokenField] as TokenAmount)\r\n      ? (parsedAmounts[independentTokenField] as TokenAmount).subtract(\r\n          noZapAmounts[independentTokenField] as TokenAmount,\r\n        )\r\n      : undefined\r\n\r\n  const usdPrices = useTokensPrice([tokenA, tokenB])\r\n\r\n  const independentTokenPrice = independentTokenField === Field.CURRENCY_A ? usdPrices[0] : usdPrices[1]\r\n\r\n  const estimatedUsd =\r\n    parsedAmounts[independentTokenField] && independentTokenPrice\r\n      ? parseFloat((parsedAmounts[independentTokenField] as TokenAmount).toSignificant(6)) * independentTokenPrice\r\n      : 0\r\n\r\n  const priceImpact =\r\n    priceToSwap &&\r\n    noZapAmounts[dependentTokenField] &&\r\n    amountOut &&\r\n    computePriceImpact(\r\n      priceToSwap,\r\n      noZapAmounts[dependentTokenField] as CurrencyAmount<Currency>,\r\n      amountOut as CurrencyAmount<Currency>,\r\n    )\r\n\r\n  const priceImpactWithoutFee = pair && priceImpact ? computePriceImpactWithoutFee([pair], priceImpact) : undefined\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\r\n        <AutoRow gap=\"4px\">\r\n          <CurrencyLogo currency={currencies[independentTokenField]} size={'24px'} />\r\n          <Text fontSize={24} fontWeight={500}>\r\n            {parsedAmounts[independentTokenField]?.toSignificant(6)}\r\n          </Text>\r\n          <Text fontSize={24} fontWeight={500}>\r\n            {independentToken?.symbol}\r\n          </Text>\r\n          {estimatedUsd && (\r\n            <Text color={theme.subText} marginLeft=\"4px\" fontSize={18} fontWeight={500}>\r\n              (~{formattedNum(estimatedUsd.toString(), true) || undefined})\r\n            </Text>\r\n          )}\r\n        </AutoRow>\r\n\r\n        <TYPE.italic fontSize={12} fontWeight={400} color={theme.subText} textAlign=\"left\">\r\n          {t`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </TYPE.italic>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <ModalDetailWrapper>\r\n          {pair && (\r\n            <>\r\n              <CurrentPriceWrapper style={{ paddingBottom: '8px' }}>\r\n                <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n                  <Trans>Current Price</Trans>\r\n                </TYPE.subHeader>\r\n                <TYPE.black fontSize={14} fontWeight={400}>\r\n                  <CurrentPrice price={price} />\r\n                </TYPE.black>\r\n              </CurrentPriceWrapper>\r\n\r\n              <RowBetween style={{ paddingBottom: '12px' }}>\r\n                <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\r\n                  <Trans>Price Impact</Trans>\r\n                </TYPE.subHeader>\r\n                <TYPE.black fontSize={14} fontWeight={400}>\r\n                  <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n                </TYPE.black>\r\n              </RowBetween>\r\n\r\n              <RowBetween style={{ paddingBottom: '12px' }}>\r\n                <Text color={theme.subText} fontSize={14} fontWeight={400}>\r\n                  <Trans>LP Tokens Removed</Trans>\r\n                </Text>\r\n\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\r\n                  <Text color={theme.text} fontSize={14} fontWeight={400}>\r\n                    {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              </RowBetween>\r\n\r\n              {amountsMin && (\r\n                <>\r\n                  <RowBetween style={{ paddingBottom: '12px' }}>\r\n                    <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\r\n                      <Trans>Minimum Received</Trans>\r\n                    </TYPE.subHeader>\r\n\r\n                    <TokenWrapper>\r\n                      <CurrencyLogo currency={independentToken} size=\"16px\" />\r\n                      <TYPE.black fontWeight={400} fontSize={14}>\r\n                        {formatJSBIValue(\r\n                          independentTokenField === Field.CURRENCY_A\r\n                            ? amountsMin[Field.CURRENCY_A]\r\n                            : amountsMin[Field.CURRENCY_B],\r\n                          independentToken?.decimals,\r\n                        )}{' '}\r\n                        {independentToken?.symbol}\r\n                      </TYPE.black>\r\n                    </TokenWrapper>\r\n                  </RowBetween>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </ModalDetailWrapper>\r\n\r\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          <Text fontWeight={500} fontSize={16}>\r\n            <Trans>Confirm</Trans>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <TransactionConfirmationModal\r\n          isOpen={showConfirm}\r\n          onDismiss={handleDismissConfirmation}\r\n          attemptingTxn={attemptingTxn}\r\n          hash={txHash ? txHash : ''}\r\n          content={() =>\r\n            zapOutError ? (\r\n              <TransactionErrorContent onDismiss={handleDismissConfirmation} message={zapOutError} />\r\n            ) : (\r\n              <ConfirmationModalContent\r\n                title={'You will receive'}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )\r\n          }\r\n          pendingText={pendingText}\r\n        />\r\n        <AutoColumn gap=\"md\">\r\n          <GridColumn>\r\n            <FirstColumn>\r\n              <BlackCard padding=\"1rem\" borderRadius=\"4px\">\r\n                <AutoColumn gap=\"1rem\">\r\n                  <RowBetween>\r\n                    <Text fontSize={12} fontWeight={500}>\r\n                      <Trans>Amount</Trans>\r\n                    </Text>\r\n\r\n                    <Text fontSize={12} fontWeight={500}>\r\n                      <Trans>Balance</Trans>: {!userLiquidity ? <Loader /> : userLiquidity?.toSignificant(6)} LP Tokens\r\n                    </Text>\r\n                  </RowBetween>\r\n                  <Row style={{ alignItems: 'flex-end' }}>\r\n                    <Text fontSize={72} fontWeight={500}>\r\n                      {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\r\n                    </Text>\r\n                  </Row>\r\n\r\n                  <>\r\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} size={18} />\r\n                    <RowBetween style={{ gap: '4px' }}>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>25%</MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>50%</MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>75%</MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}>\r\n                        <Trans>Max</Trans>\r\n                      </MaxButton>\r\n                    </RowBetween>\r\n                  </>\r\n                </AutoColumn>\r\n              </BlackCard>\r\n\r\n              {chainId && pair && (\r\n                <CurrencyInputPanel\r\n                  hideBalance\r\n                  hideLogo\r\n                  value={formattedAmounts[Field.LIQUIDITY]}\r\n                  onUserInput={onLiquidityInput}\r\n                  onMax={null}\r\n                  onHalf={null}\r\n                  disableCurrencySelect\r\n                  currency={\r\n                    new Token(\r\n                      chainId,\r\n                      pair.liquidityToken?.address,\r\n                      pair.liquidityToken?.decimals,\r\n                      `LP Tokens`,\r\n                      `LP Tokens`,\r\n                    )\r\n                  }\r\n                  id=\"liquidity-amount\"\r\n                />\r\n              )}\r\n            </FirstColumn>\r\n\r\n            <SecondColumn>\r\n              <div>\r\n                <CurrencyInputPanel\r\n                  disabledInput\r\n                  value={formattedAmounts[independentTokenField]}\r\n                  onUserInput={onCurrencyInput}\r\n                  onSwitchCurrency={handleSwitchCurrency}\r\n                  onMax={null}\r\n                  onHalf={null}\r\n                  currency={currencies[independentTokenField]}\r\n                  id=\"zap-out-input\"\r\n                  label={t`Output`}\r\n                  disableCurrencySelect={false}\r\n                  showCommonBases\r\n                  positionMax=\"top\"\r\n                  isSwitchMode\r\n                  estimatedUsd={formattedNum(estimatedUsd.toString(), true) || undefined}\r\n                />\r\n                <Flex justifyContent=\"flex-end\" alignItems=\"center\" marginTop=\"0.5rem\">\r\n                  {pairAddress &&\r\n                    chainId &&\r\n                    (selectedCurrencyIsETHER || selectedCurrencyIsWETH) &&\r\n                    currencies[dependentTokenField] && (\r\n                      <StyledInternalLink\r\n                        replace\r\n                        to={\r\n                          independentTokenField === Field.CURRENCY_A\r\n                            ? `/remove/${\r\n                                selectedCurrencyIsETHER\r\n                                  ? currencyId(WETH[chainId], chainId)\r\n                                  : currencyId(NativeCurrencies[chainId], chainId)\r\n                              }/${currencyId(currencies[dependentTokenField] as Currency, chainId)}/${pairAddress}`\r\n                            : `/remove/${currencyId(currencies[dependentTokenField] as Currency, chainId)}/${\r\n                                selectedCurrencyIsETHER\r\n                                  ? currencyId(WETH[chainId], chainId)\r\n                                  : currencyId(NativeCurrencies[chainId], chainId)\r\n                              }/${pairAddress}`\r\n                        }\r\n                      >\r\n                        {selectedCurrencyIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\r\n                      </StyledInternalLink>\r\n                    )}\r\n                </Flex>\r\n              </div>\r\n\r\n              {pair && (\r\n                <DetailWrapper>\r\n                  <DetailBox style={{ paddingBottom: '12px', borderBottom: `1px dashed ${theme.border}` }}>\r\n                    <AutoColumn gap=\"8px\">\r\n                      <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\r\n                        <UppercaseText>\r\n                          <Trans>Price Impact</Trans>\r\n                        </UppercaseText>\r\n                      </TYPE.subHeader>\r\n                      <TYPE.black fontWeight={400} fontSize={14}>\r\n                        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n                      </TYPE.black>\r\n                    </AutoColumn>\r\n\r\n                    {amountsMin && (\r\n                      <AutoColumn gap=\"8px\">\r\n                        <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\r\n                          <UppercaseText>\r\n                            <Trans>Minimum Received</Trans>\r\n                          </UppercaseText>\r\n                        </TYPE.subHeader>\r\n\r\n                        <TokenWrapper>\r\n                          <CurrencyLogo\r\n                            currency={independentTokenField === Field.CURRENCY_A ? currencyA : currencyB}\r\n                            size=\"16px\"\r\n                          />\r\n                          <TYPE.black fontWeight={400} fontSize={14}>\r\n                            {formatJSBIValue(\r\n                              independentTokenField === Field.CURRENCY_A\r\n                                ? amountsMin[Field.CURRENCY_A]\r\n                                : amountsMin[Field.CURRENCY_B],\r\n                              independentToken?.decimals,\r\n                            )}{' '}\r\n                            {independentToken?.symbol}\r\n                          </TYPE.black>\r\n                        </TokenWrapper>\r\n                      </AutoColumn>\r\n                    )}\r\n                  </DetailBox>\r\n\r\n                  <DetailBox style={{ paddingTop: '12px' }}>\r\n                    <TYPE.subHeader\r\n                      fontWeight={500}\r\n                      fontSize={12}\r\n                      color={theme.subText}\r\n                      style={{ display: 'flex', alignItems: 'center' }}\r\n                    >\r\n                      <UppercaseText>\r\n                        <Trans>Current Price</Trans>\r\n                      </UppercaseText>\r\n                    </TYPE.subHeader>\r\n                    <TYPE.black fontWeight={400} fontSize={14}>\r\n                      <CurrentPrice price={price} />\r\n                    </TYPE.black>\r\n                  </DetailBox>\r\n                </DetailWrapper>\r\n              )}\r\n\r\n              {insufficientLiquidity ? (\r\n                <ZapError message={t`Insufficient Liquidity in the Liquidity Pool to Swap`} warning={false} />\r\n              ) : priceImpactSeverity > 3 ? (\r\n                <ZapError message={t`Price impact is too high`} warning={false} />\r\n              ) : priceImpactSeverity > 2 ? (\r\n                <ZapError message={t`Price impact is high`} warning={true} />\r\n              ) : null}\r\n\r\n              <div style={{ position: 'relative' }}>\r\n                {!account ? (\r\n                  <ButtonLight onClick={toggleWalletModal}>\r\n                    <Trans>Connect Wallet</Trans>\r\n                  </ButtonLight>\r\n                ) : (\r\n                  <RowBetween>\r\n                    <ButtonConfirmed\r\n                      onClick={onAttemptToApprove}\r\n                      confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\r\n                      disabled={\r\n                        !isValid ||\r\n                        approval !== ApprovalState.NOT_APPROVED ||\r\n                        signatureData !== null ||\r\n                        !userLiquidity ||\r\n                        userLiquidity.equalTo('0') ||\r\n                        (priceImpactSeverity > 3 && !expertMode)\r\n                      }\r\n                      margin=\"0 1rem 0 0\"\r\n                      padding=\"16px\"\r\n                      style={{ fontSize: '16px', fontWeight: 500 }}\r\n                    >\r\n                      {approval === ApprovalState.PENDING ? (\r\n                        <Dots>\r\n                          <Trans>Approving</Trans>\r\n                        </Dots>\r\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                        t`Approved`\r\n                      ) : (\r\n                        t`Approve`\r\n                      )}\r\n                    </ButtonConfirmed>\r\n                    <ButtonError\r\n                      padding=\"16px 6px\"\r\n                      onClick={() => {\r\n                        setShowConfirm(true)\r\n                      }}\r\n                      disabled={\r\n                        !isValid ||\r\n                        (signatureData === null && approval !== ApprovalState.APPROVED) ||\r\n                        (priceImpactSeverity > 3 && !expertMode)\r\n                      }\r\n                      error={\r\n                        !!parsedAmounts[Field.CURRENCY_A] &&\r\n                        !!parsedAmounts[Field.CURRENCY_B] &&\r\n                        (!isValid || priceImpactSeverity > 2)\r\n                      }\r\n                    >\r\n                      <Text fontSize={16} fontWeight={500}>\r\n                        {error\r\n                          ? error\r\n                          : priceImpactSeverity > 3 && !expertMode\r\n                          ? t`Remove`\r\n                          : priceImpactSeverity > 2\r\n                          ? t`Remove Anyway`\r\n                          : t`Remove`}\r\n                      </Text>\r\n                    </ButtonError>\r\n                  </RowBetween>\r\n                )}\r\n              </div>\r\n            </SecondColumn>\r\n          </GridColumn>\r\n        </AutoColumn>\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n","import { Fraction, WETH } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { useEffect, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport LiquidityProviderMode from 'components/LiquidityProviderMode'\r\nimport { AddRemoveTabs, LiquidityAction } from 'components/NavigationTabs'\r\nimport { MinimalPositionCard } from 'components/PositionCard'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { useDerivedBurnInfo } from 'state/burn/hooks'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nimport TokenPair from './TokenPair'\r\nimport ZapOut from './ZapOut'\r\nimport { Container, LiquidityProviderModeWrapper, PageWrapper, PoolName, TopBar } from './styled'\r\n\r\nexport default function RemoveLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB, pairAddress },\r\n  },\r\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string; pairAddress: string }>) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { chainId, isEVM } = useActiveWeb3React()\r\n\r\n  const nativeA = useCurrencyConvertedToNative(currencyA)\r\n  const nativeB = useCurrencyConvertedToNative(currencyB)\r\n\r\n  const { pair } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined, pairAddress)\r\n\r\n  const amp = pair?.amp || JSBI.BigInt(0)\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId && ((currencyA && currencyA.equals(WETH[chainId])) || (currencyB && currencyB.equals(WETH[chainId]))),\r\n  )\r\n\r\n  const [activeTab, setActiveTab] = useState(0)\r\n  const { mixpanelHandler } = useMixpanel()\r\n  useEffect(() => {\r\n    mixpanelHandler(MIXPANEL_TYPE.REMOVE_LIQUIDITY_INITIATED, {\r\n      token_1: nativeA?.symbol,\r\n      token_2: nativeB?.symbol,\r\n      amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\r\n    })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (!isEVM) return <Redirect to=\"/\" />\r\n  return (\r\n    <>\r\n      <PageWrapper>\r\n        <Container>\r\n          <AddRemoveTabs action={LiquidityAction.REMOVE} />\r\n\r\n          <TopBar>\r\n            <LiquidityProviderModeWrapper>\r\n              <LiquidityProviderMode\r\n                activeTab={activeTab}\r\n                setActiveTab={setActiveTab}\r\n                singleTokenInfo={t`We will automatically remove your liquidity and convert it into your desired token (either token from the token pair), all in a single transaction`}\r\n              />\r\n            </LiquidityProviderModeWrapper>\r\n            <PoolName>\r\n              {nativeA?.symbol} - {nativeB?.symbol} <Trans>pool</Trans>\r\n            </PoolName>\r\n          </TopBar>\r\n\r\n          {activeTab === 0 ? (\r\n            <TokenPair currencyIdA={currencyIdA} currencyIdB={currencyIdB} pairAddress={pairAddress} />\r\n          ) : (\r\n            <ZapOut currencyIdA={currencyIdA} currencyIdB={currencyIdB} pairAddress={pairAddress} />\r\n          )}\r\n        </Container>\r\n\r\n        {pair ? (\r\n          <Container style={{ marginTop: '24px', padding: '0' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </Container>\r\n        ) : null}\r\n      </PageWrapper>\r\n    </>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport { AutoColumn } from 'components/Column'\r\n\r\nexport const PageWrapper = styled.div`\r\n  padding: 28px 16px 100px;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 24px 16px 100px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    padding: 24px 32px 100px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1366px) {\r\n    padding: 24px 215px 50px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1440px) {\r\n    padding: 24px 252px 50px;\r\n  }\r\n`\r\n\r\nexport const Container = styled.div`\r\n  max-width: 936px;\r\n  margin: 0 auto;\r\n  padding: 4px 20px 24px;\r\n  background: ${({ theme }) => theme.background};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 8px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    padding: 4px 24px 24px;\r\n  }\r\n`\r\n\r\nexport const GridColumn = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nexport const TopBar = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  margin-top: 1rem;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    margin-top: 0;\r\n  }\r\n`\r\n\r\nexport const LiquidityProviderModeWrapper = styled.div`\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport const PoolName = styled.div`\r\n  display: flex;\r\n  margin-bottom: 24px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.subText};\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport const FirstColumn = styled(AutoColumn)`\r\n  grid-auto-rows: min-content;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  gap: 20px;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding-right: 24px;\r\n    padding-bottom: 0;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n    border-bottom: none;\r\n  }\r\n`\r\n\r\nexport const SecondColumn = styled(AutoColumn)`\r\n  grid-auto-rows: min-content;\r\n  padding-top: 24px;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding-left: 24px;\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nexport const MaxButton = styled.button`\r\n  flex: 1;\r\n  padding: 6px 0;\r\n  background-color: ${({ theme }) => `${theme.primary}33`};\r\n  border: 1px solid transparent;\r\n  border-radius: 999px;\r\n  font-size: 1rem;\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 0.25rem 0;\r\n  `};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  margin: 0.25rem;\r\n  overflow: hidden;\r\n  color: ${({ theme }) => theme.primary};\r\n  :hover {\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n  }\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const DetailWrapper = styled(AutoColumn)`\r\n  padding: 1rem 1rem 12px;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  margin: 24px 0 28px;\r\n  border-radius: 20px;\r\n`\r\n\r\nexport const DetailBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`\r\n\r\nexport const TokenWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n`\r\n\r\nexport const ModalDetailWrapper = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 20px;\r\n  padding: 1rem;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nexport const CurrentPriceWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100,\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n"],"sourceRoot":""}