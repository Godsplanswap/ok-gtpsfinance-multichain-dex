{"version":3,"sources":["components/PositionCard/index.tsx","pages/AddLiquidity/styled.tsx","pages/Pools/styleds.tsx"],"names":["FixedHeightRow","styled","RowBetween","VerticalDivider","div","theme","subText","StyledPositionCard","LightCard","background","mediaWidth","upToSmall","StyledMinimalPositionCard","MinimalPositionItemDivider","border","MinimalPositionItem","AutoColumn","noBorder","noPadding","WarningMessage","Text","warning","formattedUSDPrice","tokenAmount","price","usdValue","parseFloat","toSignificant","formattedNum","toString","NarrowPositionCard","pair","showUnwrapped","currency0","token0","unwrappedToken","currency1","token1","useState","showMore","setShowMore","userPoolBalance","useTokenBalance","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","greaterThanOrEqual","quotient","Percent","undefined","getLiquidityValue","token0Deposited","token1Deposited","native0","useCurrencyConvertedToNative","native1","gap","fontWeight","fontSize","onClick","margin","size","symbol","toFixed","marginLeft","MinimalPositionCard","useTheme","usdPrices","useTokensPrice","marginX","paddingY","style","borderBottom","color","currency","equalTo","divide","decimalScale","lessThan","Fraction","BigInt","greaterThan","ONE_BIPS","Row","Flex","FullPositionCard","stakedBalance","myLiquidity","tab","farm","farmAPR","chainId","useActiveWeb3React","useMedia","MEDIA_WIDTHS","farmStatus","isEnded","ethPrice","useETHPrice","poolData","useSinglePoolData","address","toLowerCase","currentPrice","data","fee","oneDayFeeUSD","oneDayFeeUntracked","tradingFeeAPR","getTradingFeeAPR","reserveUSD","apr","userDefaultPoolBalance","add","token0Staked","token1Staked","amp","percentToken0","reserve0","asFraction","virtualReserve0","multiply","reserve1","virtualReserve1","percentToken1","subtract","liquidityTokenBalance","pool","totalSupply","stakedUSD","toExact","totalDeposit","isWarning","warningToken","goToFarmPath","justifyContent","alignItems","sx","marginTop","width","shortenAddress","toCopy","placement","noArrow","text","to","height","textReverse","flexDirection","as","padding","Link","currencyId","disabled","textAlign","href","DMM_ANALYTICS_URL","id","PageWrapper","Container","GridColumn","TopBar","LiquidityProviderModeWrapper","PoolName","FirstColumn","SecondColumn","TokenWrapper","ActiveText","Section","Card","CurrentPriceWrapper","PoolRatioWrapper","DynamicFeeRangeWrapper","USDPrice","Warning","DetailBox","PoolsPageWrapper","ToolbarWrapper","CurrencyWrapper","SelectPairInstructionWrapper","IconWrapper","ButtonIcon","ButtonEmpty","rgba","lighten"],"mappings":"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","file":"static/js/add-liquidity-page~my-pool-page~pool-finder-page~remove-liquidity-page.d11ea36e.chunk.js","sourcesContent":["import { Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Fraction, Percent, TokenAmount } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { useState } from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty, ButtonOutlined, ButtonPrimary } from 'components/Button'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CopyHelper from 'components/Copy'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Divider from 'components/Divider'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { FarmingIcon } from 'components/Icons'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { DMM_ANALYTICS_URL, ONE_BIPS } from 'constants/index'\r\nimport { useTotalSupply } from 'data/TotalSupply'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { TokenWrapper } from 'pages/AddLiquidity/styled'\r\nimport { IconWrapper } from 'pages/Pools/styleds'\r\nimport { useETHPrice, useTokensPrice } from 'state/application/hooks'\r\nimport { Farm } from 'state/farms/types'\r\nimport { UserLiquidityPosition, useSinglePoolData } from 'state/pools/hooks'\r\nimport { useTokenBalance } from 'state/wallet/hooks'\r\nimport { ExternalLink, MEDIA_WIDTHS, UppercaseText } from 'theme'\r\nimport { formattedNum, shortenAddress } from 'utils'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport { getTradingFeeAPR, useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nconst FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\nconst VerticalDivider = styled.div`\r\n  width: 1px;\r\n  height: 10px;\r\n  background-color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nconst StyledPositionCard = styled(LightCard)`\r\n  border: none;\r\n  background: ${({ theme }) => theme.background};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  padding: 20px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 16px;\r\n  `}\r\n`\r\n\r\nconst StyledMinimalPositionCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 20px;\r\n  padding: 1rem;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  gap: 1rem;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 20px 16px;\r\n    gap: 1rem;\r\n  }\r\n`\r\n\r\nconst MinimalPositionItemDivider = styled(VerticalDivider)`\r\n  height: 36px;\r\n  background-color: ${({ theme }) => theme.border};\r\n\r\n  @media only screen and (max-width: 999px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst MinimalPositionItem = styled(AutoColumn)<{ noBorder?: boolean; noPadding?: boolean }>`\r\n  width: 100%;\r\n  border-bottom: ${({ theme, noBorder }) => (noBorder ? 'none' : `1px solid ${theme.border}`)};\r\n  padding-bottom: ${({ noPadding }) => (noPadding ? '0' : '1rem')};\r\n  gap: 4px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    width: fit-content;\r\n    border-bottom: none;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\n\r\nconst WarningMessage = styled(Text)`\r\n  color: ${({ theme }) => theme.warning};\r\n  text-align: center;\r\n`\r\n\r\nconst formattedUSDPrice = (tokenAmount: TokenAmount, price: number) => {\r\n  const usdValue = parseFloat(tokenAmount.toSignificant(6)) * price\r\n\r\n  return <span>{`(~${formattedNum(usdValue.toString(), true)})`}</span>\r\n}\r\n\r\ninterface PositionCardProps {\r\n  pair: Pair\r\n  showUnwrapped?: boolean\r\n  border?: string\r\n  stakedBalance?: TokenAmount // optional balance to indicate that liquidity is deposited in mining pool\r\n  myLiquidity?: UserLiquidityPosition\r\n  tab?: 'ALL' | 'STAKED'\r\n  farm?: Farm\r\n  farmAPR?: number\r\n}\r\n\r\nexport function NarrowPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance &&\r\n    !!totalPoolTokens &&\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\r\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  const native0 = useCurrencyConvertedToNative(currency0 || undefined)\r\n  const native1 = useCurrencyConvertedToNative(currency1 || undefined)\r\n  return (\r\n    <>\r\n      <StyledPositionCard border={border}>\r\n        <AutoColumn gap=\"12px\">\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <Text fontWeight={500} fontSize={16}>\r\n                <Trans>Your position</Trans>\r\n              </Text>\r\n            </RowFixed>\r\n          </FixedHeightRow>\r\n          <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n            <RowFixed>\r\n              <DoubleCurrencyLogo currency0={native0} currency1={native1} margin={true} size={20} />\r\n              <Text fontWeight={500} fontSize={20}>\r\n                {native0?.symbol}/{native1?.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            <RowFixed>\r\n              <Text fontWeight={500} fontSize={20}>\r\n                {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}{' '}\r\n              </Text>\r\n            </RowFixed>\r\n          </FixedHeightRow>\r\n          <AutoColumn gap=\"4px\">\r\n            <FixedHeightRow>\r\n              <Text fontSize={16} fontWeight={500}>\r\n                <Trans>Your pool share:</Trans>\r\n              </Text>\r\n              <Text fontSize={16} fontWeight={500}>\r\n                {poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}\r\n              </Text>\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text fontSize={16} fontWeight={500}>\r\n                {native0?.symbol}:\r\n              </Text>\r\n              {token0Deposited ? (\r\n                <RowFixed>\r\n                  <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\r\n                    {token0Deposited?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text fontSize={16} fontWeight={500}>\r\n                {native1?.symbol}:\r\n              </Text>\r\n              {token1Deposited ? (\r\n                <RowFixed>\r\n                  <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\r\n                    {token1Deposited?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n          </AutoColumn>\r\n        </AutoColumn>\r\n      </StyledPositionCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const theme = useTheme()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const userPoolBalance = useTokenBalance(pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance &&\r\n    !!totalPoolTokens &&\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\r\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  const native0 = useCurrencyConvertedToNative(currency0 || undefined)\r\n  const native1 = useCurrencyConvertedToNative(currency1 || undefined)\r\n\r\n  const usdPrices = useTokensPrice([pair.token0, pair.token1])\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        fontWeight={500}\r\n        fontSize={16}\r\n        marginX=\"16px\"\r\n        paddingY=\"1rem\"\r\n        style={{ borderBottom: `1px solid ${theme.border}` }}\r\n      >\r\n        <Trans>Your Current Position</Trans>\r\n      </Text>\r\n\r\n      <StyledMinimalPositionCard>\r\n        <MinimalPositionItem gap=\"4px\">\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={native0} currency1={native1} size={16} />\r\n            <UppercaseText style={{ marginLeft: '4px' }}>\r\n              <Text fontWeight={500} fontSize={12} color={theme.subText}>\r\n                {native0?.symbol}/{native1?.symbol} LP Tokens\r\n              </Text>\r\n            </UppercaseText>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontWeight={400} fontSize={14}>\r\n              {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}{' '}\r\n            </Text>\r\n          </RowFixed>\r\n        </MinimalPositionItem>\r\n        <MinimalPositionItemDivider />\r\n\r\n        <MinimalPositionItem>\r\n          <TokenWrapper>\r\n            <CurrencyLogo currency={native0} size=\"16px\" />\r\n            <Text fontSize={12} fontWeight={500}>\r\n              {native0?.symbol}\r\n            </Text>\r\n          </TokenWrapper>\r\n\r\n          {token0Deposited ? (\r\n            <RowFixed>\r\n              <Text fontSize={14} fontWeight={400}>\r\n                {token0Deposited.equalTo('0')\r\n                  ? '0'\r\n                  : token0Deposited\r\n                      .divide(token0Deposited.decimalScale)\r\n                      .lessThan(new Fraction(JSBI.BigInt(1), JSBI.BigInt(100)))\r\n                  ? '<0.01'\r\n                  : token0Deposited?.toSignificant(6)}{' '}\r\n                {formattedUSDPrice(token0Deposited, usdPrices[0])}\r\n              </Text>\r\n            </RowFixed>\r\n          ) : (\r\n            '-'\r\n          )}\r\n        </MinimalPositionItem>\r\n\r\n        <MinimalPositionItemDivider />\r\n\r\n        <MinimalPositionItem>\r\n          <TokenWrapper>\r\n            <CurrencyLogo currency={native1} size=\"16px\" />\r\n            <Text fontSize={12} fontWeight={500}>\r\n              {native1?.symbol}\r\n            </Text>\r\n          </TokenWrapper>\r\n          {token1Deposited ? (\r\n            <RowFixed>\r\n              <Text fontSize={14} fontWeight={400}>\r\n                {token1Deposited.equalTo('0')\r\n                  ? '0'\r\n                  : token1Deposited\r\n                      .divide(token1Deposited.decimalScale)\r\n                      .lessThan(new Fraction(JSBI.BigInt(1), JSBI.BigInt(100)))\r\n                  ? '<0.01'\r\n                  : token1Deposited?.toSignificant(6)}{' '}\r\n                {formattedUSDPrice(token1Deposited, usdPrices[1])}\r\n              </Text>\r\n            </RowFixed>\r\n          ) : (\r\n            '-'\r\n          )}\r\n        </MinimalPositionItem>\r\n\r\n        <MinimalPositionItemDivider />\r\n        <MinimalPositionItem gap=\"4px\" noBorder={true} noPadding={true}>\r\n          <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n            <UppercaseText>\r\n              <Trans>Your Share Of Pool</Trans>\r\n            </UppercaseText>\r\n          </Text>\r\n          <Text fontSize={14} fontWeight={400}>\r\n            {poolTokenPercentage && poolTokenPercentage.greaterThan('0')\r\n              ? poolTokenPercentage?.lessThan(ONE_BIPS)\r\n                ? '<0.01'\r\n                : poolTokenPercentage?.toFixed(2)\r\n              : '0'}\r\n            %\r\n          </Text>\r\n        </MinimalPositionItem>\r\n      </StyledMinimalPositionCard>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Row = styled(Flex)`\r\n  justify-content: space-between;\r\n  color: ${({ theme }) => theme.subText};\r\n  font-weight: 500;\r\n  margin-top: 8px;\r\n  font-size: 12px;\r\n  line-height: 2;\r\n`\r\n\r\nexport default function FullPositionCard({\r\n  pair,\r\n  border,\r\n  stakedBalance,\r\n  myLiquidity,\r\n  tab,\r\n  farm,\r\n  farmAPR = 0,\r\n}: PositionCardProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const upToSmall = useMedia(`(max-width: ${MEDIA_WIDTHS.upToSmall}px)`)\r\n\r\n  const farmStatus = !farm ? 'NO_FARM' : farm.isEnded ? 'FARM_ENDED' : 'FARM_ACTIVE'\r\n  const ethPrice = useETHPrice()\r\n\r\n  const { data: poolData } = useSinglePoolData(pair.address.toLowerCase(), ethPrice.currentPrice)\r\n\r\n  // const volume = poolData?.oneDayVolumeUSD || poolData?.oneDayVolumeUntracked\r\n  const fee = poolData?.oneDayFeeUSD || poolData?.oneDayFeeUntracked\r\n  const tradingFeeAPR = getTradingFeeAPR(poolData?.reserveUSD, fee)\r\n\r\n  const apr = tradingFeeAPR + (tab && tab === 'STAKED' ? farmAPR : 0)\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const userDefaultPoolBalance = useTokenBalance(pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  // if staked balance balance provided, add to standard liquidity amount\r\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance &&\r\n    !!totalPoolTokens &&\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\r\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  const [token0Staked, token1Staked] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!stakedBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, stakedBalance.quotient)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, stakedBalance),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, stakedBalance),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  const amp = new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000))\r\n\r\n  const percentToken0 = pair.reserve0.asFraction\r\n    .divide(pair.virtualReserve0)\r\n    .multiply('100')\r\n    .divide(\r\n      pair.reserve0.divide(pair.virtualReserve0).asFraction.add(pair.reserve1.divide(pair.virtualReserve1).asFraction),\r\n    )\r\n  const percentToken1 = new Fraction(JSBI.BigInt(100), JSBI.BigInt(1)).subtract(percentToken0)\r\n\r\n  const usdValue = myLiquidity\r\n    ? (parseFloat(myLiquidity.liquidityTokenBalance) * parseFloat(myLiquidity.pool.reserveUSD)) /\r\n      parseFloat(myLiquidity.pool.totalSupply)\r\n    : 0\r\n\r\n  const stakedUSD = myLiquidity\r\n    ? (parseFloat(stakedBalance?.toExact() || '0') * parseFloat(myLiquidity.pool.reserveUSD)) /\r\n      parseFloat(myLiquidity.pool.totalSupply)\r\n    : 0\r\n\r\n  const totalDeposit = formattedNum((usdValue + stakedUSD).toString(), true)\r\n\r\n  const isWarning = percentToken0.lessThan(JSBI.BigInt(10)) || percentToken1.lessThan(JSBI.BigInt(10))\r\n\r\n  const warningToken = isWarning\r\n    ? percentToken0.lessThan(JSBI.BigInt(10))\r\n      ? pair.token0.symbol\r\n      : pair.token1.symbol\r\n    : undefined\r\n\r\n  const native0 = useCurrencyConvertedToNative(currency0 || undefined)\r\n  const native1 = useCurrencyConvertedToNative(currency1 || undefined)\r\n\r\n  const theme = useTheme()\r\n\r\n  const goToFarmPath =\r\n    farmStatus !== 'NO_FARM'\r\n      ? `/farms?tab=classic&type=${farmStatus === 'FARM_ACTIVE' ? 'active' : 'ended'}&search=${pair.address}`\r\n      : ''\r\n\r\n  const renderFarmIcon = () => {\r\n    if (farmStatus !== 'FARM_ACTIVE') {\r\n      return null\r\n    }\r\n\r\n    if (upToSmall) {\r\n      return (\r\n        <MouseoverTooltip\r\n          placement=\"top\"\r\n          noArrow\r\n          text={\r\n            <Text>\r\n              <Trans>\r\n                Available for yield farming. Click <Link to={goToFarmPath}>here</Link> to go to the farm.\r\n              </Trans>\r\n            </Text>\r\n          }\r\n        >\r\n          <FarmingIcon />\r\n        </MouseoverTooltip>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <MouseoverTooltip width=\"fit-content\" placement=\"top\" text={<Trans>Available for yield farming</Trans>}>\r\n        <Link to={goToFarmPath}>\r\n          <FarmingIcon />\r\n        </Link>\r\n      </MouseoverTooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledPositionCard border={border}>\r\n      <Flex justifyContent=\"space-between\">\r\n        <div>\r\n          <Flex alignItems=\"center\">\r\n            <DoubleCurrencyLogo currency0={native0} currency1={native1} size={24} />\r\n            <Text fontWeight={500} fontSize={20}>{`${native0?.symbol}/${native1?.symbol}`}</Text>\r\n          </Flex>\r\n\r\n          <Flex alignItems=\"center\" sx={{ gap: '6px' }} marginTop=\"12px\">\r\n            <Text color={theme.subText} fontWeight={500} fontSize=\"12px\" width=\"max-content\">\r\n              AMP = {amp.toSignificant(5)}\r\n            </Text>\r\n\r\n            <VerticalDivider />\r\n            <Flex alignItems=\"center\" color={theme.subText} fontSize={12}>\r\n              <Text>{shortenAddress(chainId, pair.address, 3)}</Text>\r\n              <CopyHelper toCopy={pair.address} />\r\n            </Flex>\r\n          </Flex>\r\n        </div>\r\n\r\n        <Flex\r\n          sx={{\r\n            gap: '4px',\r\n          }}\r\n        >\r\n          {renderFarmIcon()}\r\n          {isWarning && (\r\n            <MouseoverTooltip\r\n              text={\r\n                warningToken ? (\r\n                  <WarningMessage>{t`Note: ${warningToken} is now <10% of the pool. Pool might become inactive if ${warningToken} reaches 0%`}</WarningMessage>\r\n                ) : (\r\n                  <WarningMessage>\r\n                    <Trans>One token is close to 0% in the pool ratio. Pool might go inactive.</Trans>\r\n                  </WarningMessage>\r\n                )\r\n              }\r\n            >\r\n              <IconWrapper\r\n                style={{\r\n                  width: '24px',\r\n                  height: '24px',\r\n                  background: theme.warning,\r\n                  marginLeft: farmStatus === 'FARM_ACTIVE' ? '8px' : 0,\r\n                }}\r\n              >\r\n                <AlertTriangle color={theme.textReverse} size={16} />\r\n              </IconWrapper>\r\n            </MouseoverTooltip>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Flex marginTop=\"0.25rem\" justifyContent=\"flex-end\" alignItems=\"center\"></Flex>\r\n\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"1rem\">\r\n        <Text fontSize=\"1rem\" fontWeight={500} color={theme.subText}>\r\n          {tab === 'ALL' ? <Trans>Your Liquidity</Trans> : <Trans>Your Staked</Trans>}\r\n        </Text>\r\n        <Flex fontSize={12} color={theme.subText} marginTop=\"2px\" alignItems=\"baseline\" sx={{ gap: '4px' }}>\r\n          <Flex alignItems=\"center\" flexDirection=\"row\">\r\n            APR{' '}\r\n            {tab === 'STAKED' && (\r\n              <InfoHelper text={t`${tradingFeeAPR.toFixed(2)}% LP Fee + ${farmAPR.toFixed(2)}% Rewards`} size={14} />\r\n            )}\r\n          </Flex>\r\n          <Text as=\"span\" color={theme.apr} fontSize=\"20px\" fontWeight={500}>\r\n            {apr ? `${apr.toFixed(2)}%` : '--'}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider sx={{ marginTop: '0.5rem' }} />\r\n\r\n      <Flex height=\"168px\" marginTop=\"0.75rem\" flexDirection=\"column\">\r\n        {tab === 'ALL' ? (\r\n          <>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Your Liquidity Balance</Trans>\r\n              </Text>\r\n              <Text fontSize={14} color={theme.text}>\r\n                {totalDeposit}\r\n              </Text>\r\n            </Row>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Total LP Tokens</Trans>\r\n              </Text>\r\n              <Text color={theme.text} fontSize={14}>\r\n                {userPoolBalance?.toSignificant(6) ?? '-'}\r\n              </Text>\r\n            </Row>\r\n            <Row>\r\n              <Flex alignItems=\"center\">\r\n                <Text>\r\n                  <Trans>Available LP Tokens</Trans>\r\n                </Text>\r\n                <InfoHelper text={t`Your available LP Token balance after staking (if applicable)`} size={14} />\r\n              </Flex>\r\n              <Text color={theme.text} fontSize={14}>\r\n                {userDefaultPoolBalance?.toSignificant(6) ?? '0'}\r\n              </Text>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Text>\r\n                <Trans>Pooled {native0?.symbol}</Trans>\r\n              </Text>\r\n              {token0Deposited ? (\r\n                <RowFixed>\r\n                  <CurrencyLogo size=\"16px\" currency={currency0} />\r\n                  <Text fontSize={14} fontWeight={500} marginLeft={'6px'} color={theme.text}>\r\n                    {token0Deposited?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </Row>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Pooled {native1?.symbol}</Trans>\r\n              </Text>\r\n              {token1Deposited ? (\r\n                <RowFixed>\r\n                  <CurrencyLogo size=\"16px\" currency={currency1} />\r\n                  <Text color={theme.text} fontSize={14} fontWeight={500} marginLeft={'6px'}>\r\n                    {token1Deposited?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </Row>\r\n\r\n            <Row>\r\n              <Text>\r\n                <Trans>Your Share Of Pool</Trans>\r\n              </Text>\r\n              <Text fontSize={14} color={theme.text}>\r\n                {poolTokenPercentage\r\n                  ? (poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)) + '%'\r\n                  : '-'}\r\n              </Text>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Your Staked Balance</Trans>\r\n              </Text>\r\n              <Text fontSize={14} color={theme.text}>\r\n                {formattedNum(stakedUSD.toString(), true)}\r\n              </Text>\r\n            </Row>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Staked LP Tokens</Trans>\r\n              </Text>\r\n              <Text color={theme.text} fontSize={14}>\r\n                {stakedBalance?.toSignificant(6) ?? '-'}\r\n              </Text>\r\n            </Row>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Staked {native0?.symbol}</Trans>\r\n              </Text>\r\n              {token0Staked ? (\r\n                <RowFixed>\r\n                  <CurrencyLogo size=\"16px\" currency={currency0} />\r\n                  <Text fontSize={14} fontWeight={500} marginLeft={'6px'} color={theme.text}>\r\n                    {token0Staked?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </Row>\r\n            <Row>\r\n              <Text>\r\n                <Trans>Staked {native1?.symbol}</Trans>\r\n              </Text>\r\n              {token1Staked ? (\r\n                <RowFixed>\r\n                  <CurrencyLogo size=\"16px\" currency={currency1} />\r\n                  <Text color={theme.text} fontSize={14} fontWeight={500} marginLeft={'6px'}>\r\n                    {token1Staked?.toSignificant(6)}\r\n                  </Text>\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Flex>\r\n\r\n      {tab === 'ALL' ? (\r\n        <Flex marginTop=\"20px\" sx={{ gap: '1rem' }}>\r\n          {userDefaultPoolBalance?.greaterThan(JSBI.BigInt(0)) ? (\r\n            <ButtonOutlined\r\n              style={{\r\n                padding: '10px',\r\n                fontSize: '14px',\r\n              }}\r\n              as={Link}\r\n              to={`/remove/${currencyId(currency0, chainId)}/${currencyId(currency1, chainId)}/${pair.address}`}\r\n            >\r\n              <Text width=\"max-content\">\r\n                <Trans>Remove Liquidity</Trans>\r\n              </Text>\r\n            </ButtonOutlined>\r\n          ) : (\r\n            <ButtonPrimary\r\n              disabled\r\n              style={{\r\n                padding: '10px',\r\n                fontSize: '14px',\r\n              }}\r\n            >\r\n              <Text width=\"max-content\">\r\n                <Trans>Remove Liquidity</Trans>\r\n              </Text>\r\n            </ButtonPrimary>\r\n          )}\r\n\r\n          <ButtonPrimary\r\n            padding=\"10px\"\r\n            style={{ fontSize: '14px' }}\r\n            as={Link}\r\n            to={`/add/${currencyId(currency0, chainId)}/${currencyId(currency1, chainId)}/${pair.address}`}\r\n          >\r\n            <Text width=\"max-content\">\r\n              <Trans>Add Liquidity</Trans>\r\n            </Text>\r\n          </ButtonPrimary>\r\n        </Flex>\r\n      ) : (\r\n        <ButtonPrimary padding=\"10px\" style={{ fontSize: '14px' }} as={Link} to={goToFarmPath}>\r\n          <Text width=\"max-content\">\r\n            <Trans>Go to farm</Trans>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      )}\r\n\r\n      <Divider sx={{ marginTop: '20px' }} />\r\n\r\n      <Flex justifyContent=\"space-between\" marginTop=\"16px\" alignItems=\"center\">\r\n        <ButtonEmpty width=\"max-content\" style={{ fontSize: '14px' }} padding=\"0\">\r\n          <ExternalLink\r\n            style={{ width: '100%', textAlign: 'center' }}\r\n            href={`${DMM_ANALYTICS_URL[chainId]}/pool/${poolData?.id ?? ''}`}\r\n          >\r\n            <Trans>Analytics ↗</Trans>\r\n          </ExternalLink>\r\n        </ButtonEmpty>\r\n\r\n        {!!farm && (\r\n          <ButtonEmpty width=\"max-content\" style={{ fontSize: '14px' }} padding=\"0\" as={Link} to={goToFarmPath}>\r\n            <Trans>Go to farm ↗</Trans>\r\n          </ButtonEmpty>\r\n        )}\r\n      </Flex>\r\n    </StyledPositionCard>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\n\r\nexport const PageWrapper = styled.div`\r\n  padding: 28px 16px 100px;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 24px 16px 100px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    padding: 24px 32px 100px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1366px) {\r\n    padding: 24px 215px 50px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1440px) {\r\n    padding: 24px 252px 50px;\r\n  }\r\n`\r\n\r\nexport const Container = styled.div`\r\n  max-width: 936px;\r\n  margin: 0 auto;\r\n  padding: 4px 20px 24px;\r\n  background: ${({ theme }) => theme.background};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 20px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    padding: 4px 24px 24px;\r\n  }\r\n`\r\n\r\nexport const GridColumn = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nexport const TopBar = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  margin-top: 1rem;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    margin-top: 0;\r\n  }\r\n`\r\n\r\nexport const LiquidityProviderModeWrapper = styled.div`\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport const PoolName = styled.div`\r\n  display: flex;\r\n  margin-bottom: 24px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.subText};\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport const FirstColumn = styled(AutoColumn)`\r\n  grid-auto-rows: min-content;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  gap: 1rem;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding-right: 24px;\r\n    padding-bottom: 0;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n    border-bottom: none;\r\n  }\r\n`\r\n\r\nexport const SecondColumn = styled(AutoColumn)`\r\n  grid-auto-rows: min-content;\r\n  padding-top: 24px;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding-left: 24px;\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nexport const TokenWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n`\r\n\r\nexport const ActiveText = styled.div`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nexport const Section = styled(Card)`\r\n  padding: 16px 12px;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 16px;\r\n  }\r\n`\r\n\r\nexport const CurrentPriceWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-bottom: 1px dashed ${({ theme }) => theme.border};\r\n  padding-bottom: 8px;\r\n`\r\n\r\nexport const PoolRatioWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nexport const DynamicFeeRangeWrapper = styled(AutoColumn)`\r\n  flex: 1;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const USDPrice = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  padding-left: 8px;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nexport const Warning = styled.div`\r\n  display: flex;\r\n  background: ${({ theme }) => `${theme.warning}20`};\r\n  border-radius: 999px;\r\n  padding: 0.75rem 1rem;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nexport const DetailBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`\r\n","import { lighten, rgba } from 'polished'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\n\r\nexport const PoolsPageWrapper = styled.div`\r\n  padding: 32px 24px 50px;\r\n  width: 100%;\r\n  max-width: 1500px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 24px 16px 100px;\r\n  `}\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`\r\n\r\nexport const ToolbarWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const CurrencyWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nexport const SelectPairInstructionWrapper = styled.div`\r\n  text-align: center;\r\n  height: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n  border-radius: 50%;\r\n  background: ${({ theme }) => theme.apr};\r\n  width: 18px;\r\n  height: 18px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const ButtonIcon = styled(ButtonEmpty)`\r\n  background: ${({ theme }) => rgba(theme.subText, 0.2)};\r\n  width: 28px;\r\n  min-width: 28px;\r\n  height: 28px;\r\n  min-height: 28px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  color: ${({ theme }) => theme.subText} !important;\r\n\r\n  :hover {\r\n    background: ${({ theme }) => lighten(0.4, rgba(theme.subText, 0.2))};\r\n  }\r\n`\r\n"],"sourceRoot":""}