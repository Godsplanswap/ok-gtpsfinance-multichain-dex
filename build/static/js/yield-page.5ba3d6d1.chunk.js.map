{"version":3,"sources":["../node_modules/react-feather/dist/icons/clock.js","../node_modules/react-feather/dist/icons/dollar-sign.js","components/CheckBox.tsx","components/Icons/Deposit.tsx","components/Icons/Withdraw.tsx","hooks/useProAmmPositions.ts","constants/upcoming-pools.ts","components/UpcomingFarms/styled.tsx","components/UpcomingFarms/PoolTokens.tsx","components/UpcomingFarms/StartingIn.tsx","components/UpcomingFarms/ListItem.tsx","components/UpcomingFarms/NoFarms.tsx","components/UpcomingFarms/index.tsx","hooks/useVesting.tsx","components/HoverDropdown/index.tsx","components/Vesting/VestingCard.tsx","components/Vesting/RewardLockerSchedules.tsx","hooks/useTimestampFromBlock.ts","components/Vesting/styleds.tsx","components/Vesting/ConfirmVestingModal.tsx","../node_modules/react-feather/dist/icons/lock.js","../node_modules/react-feather/dist/icons/unlock.js","components/Icons/AgriCulture.tsx","components/Vesting/VestingSummary.tsx","components/Vesting/index.tsx","components/Vesting/ScheduleCard.tsx","components/Vesting/ProMMVesting.tsx","hooks/useFairLaunch.ts","components/Icons/Harvest.tsx","components/YieldPools/ElasticFarmModals/styled.tsx","components/YieldPools/HarvestAll.tsx","hooks/useStakedBalance.ts","components/YieldPools/ListItem.tsx","components/YieldPools/FairLaunchPools.tsx","components/YieldPools/ConfirmHarvestingModal.tsx","assets/svg/sprinkling_bulb.svg","components/YieldPools/index.tsx","components/YieldPools/ElasticFarmSummary/SummaryContent.tsx","components/YieldPools/ElasticFarmSummary/index.tsx","components/FarmIssueAnnouncement.tsx","../node_modules/react-feather/dist/icons/arrow-up.js","components/YieldPools/ElasticFarmGroup/buttons.tsx","components/YieldPools/SharePoolContext.tsx","components/YieldPools/ElasticFarmGroup/index.tsx","components/YieldPools/ElasticFarmGroup/Row.tsx","components/YieldPools/ElasticFarmModals/DepositModal.tsx","components/YieldPools/ElasticFarmModals/StakeModal.tsx","components/YieldPools/ElasticFarmModals/HarvestModal.tsx","components/YieldPools/ElasticFarmModals/WithdrawModal.tsx","components/YieldPools/ElasticFarms.tsx","../node_modules/react-feather/dist/icons/eye.js","components/YieldPools/FarmGuide.tsx","pages/Farm/index.tsx","pages/Pool/styleds.tsx","utils/formatTime.ts"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Clock","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName","DollarSign","x1","y1","x2","y2","d","Checkbox","styled","input","theme","primary","textReverse","disableText","Deposit","Withdraw","useProAmmPositionsFromTokenIds","tokenIds","positionManager","useProAmmNFTPositionManagerContract","useActiveWeb3React","isEVM","networkInfo","inputs","useMemo","map","tokenId","results","useSingleContractMultipleData","loading","some","error","positions","result","poolId","getCreate2Address","elastic","coreFactory","keccak256","defaultAbiCoder","encode","info","token0","token1","fee","initCodeHash","feeGrowthInsideLast","pos","nonce","liquidity","operator","tickLower","tickUpper","rTokenOwed","position","useProAmmPositionsFromTokenId","undefined","useProAmmPositions","account","useSingleCallResult","balanceLoading","balanceResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","BigNumber","from","positionsLoading","UPCOMING_POOLS","TableWrapper","div","background","TableHeader","fade","tableHeader","mediaWidth","upToSmall","upToMedium","upToLarge","RowsWrapper","TableRow","isLastItem","border","StyledImg","img","HigherLogo","CoveredLogo","PoolTokensWrapper","PoolTokensText","text","NetworkLabel","span","NoFarmsWrapper","NoFarmsMessage","subText","StyledItemCard","PoolTokens","pool","src","poolToken1Logo","alt","poolToken2Logo","poolToken1Symbol","poolToken2Symbol","StartingIn","startingIn","useTheme","timeDiff","Date","getTime","now","seconds","Math","abs","getFormattedTimeFromSecond","ListItem","useMedia","alignItems","justifyContent","NETWORKS_INFO","network","icon","style","marginRight","name","rewards","reward","index","logo","information","href","display","noBorder","marginBottom","fontWeight","NoFarms","history","useHistory","useParsedQueryString","tab","farmType","VERSION","ELASTIC","Button","padding","onClick","replace","UpcomingFarms","lgBreakpoint","useVesting","rewardLockerAddress","addTransactionWithType","useTransactionAdder","lockerContract","useRewardLockerContract","vestAtIndex","useCallback","token","Error","CONTRACT_NOT_FOUND_MSG","estimateGas","vestScheduleAtIndices","gasLimit","calculateGasMargin","tx","hash","type","TRANSACTION_TYPE","CLAIM","summary","vestMultipleTokensAtIndices","tokens","indices","vestScheduleForMultipleTokensAtIndices","Dropdown","placement","DropdownIcon","DownSvg","HoverDropdownWrapper","disabledHover","HoverDropdown","hideIcon","content","dropdownContent","formatRemainTime","numberOfSeconds","days","hours","toFixed","ScheduleCardWrapper","ProgressBar","buttonGray","Claimed","Unlocked","Dot","RewardBackground","buttonBlack","InfoCard","VestingCard","endTime","remainTime","onClaimAll","unlockedUSD","values","reduce","res","item","vestableAmount","CurrencyAmount","fromRawAmount","toString","tokenPrice","parseFloat","toExact","harvestedUSD","harvestedAmount","totalAmount","claimedUSD","vestedAmount","claimable","gt","claimedPercent","unlockedPercent","fontSize","marginTop","dayjs","format","marginLeft","lineHeight","overflow","HoverInlineText","maxCharacters","formatDollarAmount","sx","gap","Fragment","CurrencyLogo","currency","toSignificant","disabled","amount","paddingY","symbol","address","Divider","RewardLockerSchedules","schedules","rewardLockerVersion","dispatch","useAppDispatch","currentBlockNumber","useBlockNumber","currentTimestamp","round","chainId","mixpanelHandler","useMixpanel","rewardTokenMap","forEach","schedule","isNative","ZERO_ADDRESS","rewardTokens","rewardPrices","useTokensPrice","rewardPriceMap","acc","vestableIndexes","unlockedAmount","add","fullyVestedAlready","sub","isZero","RewardLockerVersion","V1","lt","mul","isNegative","setShowConfirm","setAttemptingTxn","setTxHash","addresses","k","txHash","MIXPANEL_TYPE","ALL_REWARDS_CLAIMED","reward_tokens_and_amounts","fixedFormatting","decimals","console","setVestingError","endTimestampFromBlock","block","library","useWeb3React","useState","timestamp","setTimestamp","useEffect","getBlock","blockData","fetchTimestamp","useTimestampFromBlock","cur","V2","ScheduleGrid","ConfirmVestingModal","showConfirm","useSelector","state","vesting","attemptingTxn","vestingError","handleConfirmDismiss","confirmationContent","onDismiss","message","TransactionConfirmationModal","isOpen","pendingText","Lock","x","y","rx","ry","Unlock","AgriCulture","SummaryWrapper","upToExtraSmall","SummaryItem","SummaryItemTitle","VestingSummary","totalHarvested","locked","unlocked","claimed","Loader","value","amountByAddress","flex","Vesting","schedulesByRewardLocker","useSchedules","rewardLockerAddressesWithVersion","useRewardLockerAddressesWithVersion","flat","fullyIndexes","fullyAmount","useFarmRewardsUSD","noVesting","every","LocalLoader","textAlign","ScheduleCard","max","floor","quantity","vestedQuantity","isEnd","timePeriod","startTime","handleClaimAll","contract","_token","ind","ELASTIC_ALL_REWARD_CLAIMED","reward_tokens_and_qty","ProMMVesting","usePrommSchedules","harvested","harvestedUsd","vested","vestedUsd","unlockedBigint","unlockedUsd","lockedAmount","rewardLocker","useFairLaunch","fairLaunchContract","useFairLaunchContract","getPoolLength","poolLength","getPoolInfo","pid","poolInfo","getRewardTokens","deposit","shouldHaverst","STAKE","getFullDisplayBalance","withdraw","UNSTAKE","harvest","_name","HARVEST","harvestMultiplePools","pids","masterChefContract","Harvest","ModalContentWrapper","Title","Text","Select","SelectMenu","SelectOption","rotate","HarvestAll","totalRewards","onHarvestAll","useRef","open","setOpen","totalRewardsUSD","canHarvestAll","useOnClickOutside","prev","show","setShow","Modal","formattedNum","wrapped","margin","lte","useStakedBalance","contractAddress","balance","setBalance","fetchBalance","getStaked","owner","getUserInfo","fraction","Fraction","JSBI","exponentiate","BigInt","equalTo","farm","setSharedPoolAddress","toggleWalletModal","useWalletModalToggle","breakpoint","currency0","useToken","id","currency1","poolAddressChecksum","isAddressString","useTokenBalance","userTokenBalance","lpTokenDecimals","outsideFarm","OUTSIDE_FAIRLAUNCH_ADDRESSES","fairLaunchAddress","userStakedBalance","userData","stakedBalance","farmRewards","useFarmRewards","lpTokenRatio","totalStake","divide","ethers","utils","parseUnits","totalSupply","lpUserLPBalanceRatio","userToken0Balance","reserve0","userToken1Balance","reserve1","lpUserStakedTokenRatio","userStakedToken0Balance","userStakedToken1Balance","userLPBalanceUSD","reserveUSD","userStakedBalanceUSD","farmAPR","useFarmApr","tradingFee","oneDayFeeUSD","oneDayFeeUntracked","tradingFeeAPR","getTradingFeeAPR","apr","MAX_ALLOW_APY","isStakeInvalidAmount","amp","pairSymbol","depositValue","setDepositValue","withdrawValue","setWithdrawValue","pairAddressChecksum","staked","rewardUSD","amountToApprove","TokenAmount","Token","MaxUint256","useApproveCallback","approvalState","approve","err","isUnstakeInvalidAmount","isStakeDisabled","isUnstakeDisabled","isHarvestDisabled","handleStake","setYieldPoolsError","handleUnstake","handleHarvest","INDIVIDUAL_REWARD_HARVESTED","JSON","stringify","toBeExtendTime","TOBE_EXTENDED_FARMING_POOLS","tobeExtended","modalType","setModalType","modalTitle","usd","includes","formatTokenBalance","ApprovalState","UNKNOWN","NOT_APPROVED","PENDING","APPROVED","CurrencyInputPanel","onUserInput","onMax","onHalf","disableCurrencySelect","positionMax","hideLogo","customCurrencySelect","minWidth","customBalanceText","poolInfoLink","DMM_ANALYTICS_URL","getLPTokenLink","to","currencyIdFromAddress","textDecoration","time","cursor","role","align","poolAPR","vestingDuration","flexDirection","backgroundColor","as","shortenAddress","Copy","toCopy","InfoHelper","FairLaunchPools","farms","networkRoute","route","blockNumber","fairLaunchVersion","useFairLaunchVersion","sharedPoolAddress","openShareModal","useOpenModal","ApplicationModal","SHARE","isShareModalOpen","useModalOpen","addr","shareUrl","window","location","origin","handleHarvestAll","poolsHaveReward","ALL_REWARDS_HARVESTED","displayFarms","FairLaunchVersion","remainingBlocks","estimatedRemainingSeconds","formattedEstimatedRemainingTime","isSipherFarm","toLowerCase","ChainId","MAINNET","isFarmStarted","startBlock","isFarmEnded","endBlock","averageBlockTimeInSeconds","sort","a","b","justify","fontStyle","oddRow","stakeToken","ShareModal","title","url","ConfirmHarvestingModal","yieldPoolsError","_path","YieldPools","active","above1000","farmsByFairLaunch","useFarmsData","data","ended","stakedOnly","setStakedOnly","activeTab","search","qs","useLocation","debouncedSearchText","useDebounce","trim","isCheckUserStaked","setIsCheckUserStaked","doSearch","filterFarm","rewardPerSeconds","currentFarms","noFarms","Toggle","isActive","toggle","placeholder","maxLength","onChange","e","Search","AMP_HINT","paddingRight","borderBottomLeftRadius","borderBottomRightRadius","bind","SvgSprinklingBulb","svgRef","titleId","props","ForwardRef","TextContainer","ul","HighlightedText","SummaryContent","rowGap","maxHeight","transition","flexShrink","DropdownSVG","ElasticFarmSummary","warning","borderRadius","userSelect","o","Wrapper","StyledUL","Highlighted","ContentForActiveFarms","red","listStyleType","ContentForEndedFarms","FarmIssueAnnouncement","isEnded","ArrowUp","ButtonColorScheme","SharePoolContext","createContext","SORT_FIELD","SORT_DIRECTION","useUpToSmall","MEDIA_WIDTHS","BtnLight","ButtonLight","BtnPrimary","ButtonPrimary","ButtonOutlined","colorScheme","colorMap","Red","Gray","Green","mainColor","css","darken","generateButtonOutlinedCSS","DepositButton","others","buttonWidth","buttonHeight","renderButton","WithdrawButton","HarvestAllButton","whiteSpace","ConnectWalletButton","defaultStyle","mergedStyle","ForceWithdrawButton","generateActionButtonCSS","MinimalActionButton","rgba","ActionButton","ButtonGroupContainerOnMobile","FeeTargetWrapper","fullUnlock","FeeArchive","FeeTarget","percent","p","Number","maxWidth","Row","isApprovedForAll","fairlaunchAddress","farmingPool","onOpenModal","onHarvest","isUserAffectedByFarmIssue","userFarmInfo","useElasticFarms","joinedPositions","depositedPositions","poolAddress","computePoolAddress","factoryAddress","tokenA","tokenB","initCodeHashManualOverride","rewardPendings","useProMMFarmContract","targetPercent","setTargetPercent","getFeeTargetInfo","feeTarget","userJoinedPos","Promise","all","getRewardCalculationData","nftId","vestingVolume","totalLiquidity","targetLiqid","multiply","t","canStake","stakedPos","find","j","canHarvest","greaterThan","canUnstake","setSharePoolAddress","useContext","showTargetVolInfo","setShowTargetVolInfo","amountCanStaked","depositedUsd","stakedUsd","ExternalLink","ELASTIC_BASE_FEE_UNIT","tvl","opacity","FarmContent","FarmRow","ProMMFarmGroup","pools","userInfo","above768","PID","sortField","setSortField","DESC","sortDirection","setSortDirection","poolFeeLast24h","tokenAddressList","rw","tokenPrices","useTokenPrices","Set","amount0","amount1","userDepositedTokenAmounts","address0","address1","rewardAmounts","sortedPools","stakedTvl","tvlToken0","tvlToken1","totalRewardValue","total","farmDuration","poolTvl","feesUSD","STAKED_TVL","APR","END_TIME","MY_DEPOSIT","MY_REWARD","failedNFTs","useFailedNFTs","hasAffectedByFarmIssue","posManager","useFarmAction","approvalTx","setApprovalTx","isApprovalTxPending","useIsTransactionPending","handleApprove","canWithdraw","handleSortClick","field","ASC","preventDefault","stopPropagation","PositionRow","selected","token0Address","token1Address","feeAmount","unwrappedToken","usdPrices","usePool","positionSDK","Position","removed","eq","outOfRange","tickCurrent","currentTarget","checked","RangeBadge","inRange","hideText","ProMMDepositNFTModal","selectedFarmAddress","checkboxGroupRef","selectedFarm","poolAddresses","selectedNFTs","setSeletedNFTs","usePositionFilter","filterOptions","activeFilter","setActiveFilter","eligiblePositions","showMenu","setShowMenu","current","indeterminate","handleDeposit","ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED","token_1","token_2","filterComponent","code","overflowY","minHeight","generateCommonCSS","isUnstake","ScrollContainer","StakeTableHeader","StakeTableRow","available","token0Price","token1Price","availableUSD","noArrow","StakeModal","stake","unstake","selectedPool","eligibleNfts","stakedLiquidity","availableLiquidity","NFTPosition","handleClick","ELASTIC_STAKE_LIQUIDITY_COMPLETED","ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED","HarvestInfo","RewardRow","HarvestModal","farmsAddress","nftIds","poolIds","ELASTIC_ALLS_REWARD_HARVESTED","ELASTIC_INDIVIDUAL_REWARD_HARVESTED","rewardAddress","usdValue","forced","disableCheckbox","WithdrawModal","userDepositedNFTs","withDrawableNFTs","emergencyWithdraw","handleWithdraw","ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED","ElasticFarms","handleSearch","filteredFarms","searchAddress","stakedPools","setSeletedFarm","selectedModal","setSeletedModal","selectedPoolId","setSeletedPoolId","sharePoolAddress","Provider","DepositModal","endedFarms","nft","renderAnnouncement","CLASSIC","ElasticFarmGroup","_pid","isNaN","Eye","IconWrapper","Highlight","guideStepByVersion","FarmGuide","isMobile","guideSteps","numOfSteps","step","textTransform","Farm","isInEnum","vestingLoading","useSyncNetworkParamWithStore","below768","below1500","elasticFarms","tokenMap","rewardPriceAndTutorial","RewardTokenPrices","ClassicElasticTab","FARMS_ACTIVE_VIEWED","newQs","FARMS_ENDING_VIEWED","FARMS_UPCOMING_VIEWED","FARMS_MYVESTING_VIEWED","Tutorial","TutorialType","CLASSIC_FARMS","ELASTIC_FARMS","renderTabContent","SwitchLocaleLink","ClickableText","Dots","showDetail","unit","second","estimatedRemainingMinutes","minute","estimatedRemainingHours","hour","estimatedRemainingDays","showSecond","trunc"],"mappings":"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","file":"static/js/yield-page.5ba3d6d1.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Clock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 6 12 12 16 14\"\n  }));\n});\nClock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nClock.displayName = 'Clock';\nexport default Clock;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar DollarSign = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"1\",\n    x2: \"12\",\n    y2: \"23\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"\n  }));\n});\nDollarSign.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDollarSign.displayName = 'DollarSign';\nexport default DollarSign;","import styled from 'styled-components'\r\n\r\nconst Checkbox = styled.input`\r\n  position: relative;\r\n  transform: scale(1.35);\r\n  accent-color: ${({ theme }) => theme.primary};\r\n\r\n  :indeterminate::before {\r\n    content: '';\r\n    display: block;\r\n    color: ${({ theme }) => theme.textReverse};\r\n    width: 13px;\r\n    height: 13px;\r\n    background-color: ${({ theme }) => theme.primary};\r\n    border-radius: 2px;\r\n  }\r\n  :indeterminate::after {\r\n    content: '';\r\n    display: block;\r\n    width: 7px;\r\n    height: 7px;\r\n    border: solid ${({ theme }) => theme.textReverse};\r\n    border-width: 2px 0 0 0;\r\n    position: absolute;\r\n    top: 5.5px;\r\n    left: 3px;\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${({ theme }) => theme.disableText};\r\n  }\r\n`\r\n\r\nexport default Checkbox\r\n","const Deposit = ({ width, height }: { width?: number; height?: number }) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || 16} height={height || 16} viewBox=\"0 0 16 16\">\r\n      <path\r\n        d=\"M11.06 6H10V2.66667C10 2.3 9.70004 2 9.33337 2H6.66671C6.30004 2 6.00004 2.3 6.00004 2.66667V6H4.94004C4.34671 6 4.04671 6.72 4.46671 7.14L7.52671 10.2C7.78671 10.46 8.20671 10.46 8.46671 10.2L11.5267 7.14C11.9467 6.72 11.6534 6 11.06 6ZM3.33337 12.6667C3.33337 13.0333 3.63337 13.3333 4.00004 13.3333H12C12.3667 13.3333 12.6667 13.0333 12.6667 12.6667C12.6667 12.3 12.3667 12 12 12H4.00004C3.63337 12 3.33337 12.3 3.33337 12.6667Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Deposit\r\n","const Withdraw = ({ width, height }: { width?: number; height?: number }) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || 16} height={height || 16} viewBox=\"0 0 16 16\">\r\n      <path\r\n        d=\"M3.33337 3.33317C3.33337 3.69984 3.63337 3.99984 4.00004 3.99984H12C12.3667 3.99984 12.6667 3.69984 12.6667 3.33317C12.6667 2.9665 12.3667 2.6665 12 2.6665H4.00004C3.63337 2.6665 3.33337 2.9665 3.33337 3.33317ZM4.94004 9.33317H6.00004V12.6665C6.00004 13.0332 6.30004 13.3332 6.66671 13.3332H9.33337C9.70004 13.3332 10 13.0332 10 12.6665V9.33317H11.06C11.6534 9.33317 11.9534 8.61317 11.5334 8.19317L8.47337 5.13317C8.21337 4.87317 7.79337 4.87317 7.53337 5.13317L4.47337 8.19317C4.05337 8.61317 4.34671 9.33317 4.94004 9.33317Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Withdraw\r\n","import { defaultAbiCoder } from '@ethersproject/abi'\r\nimport { getCreate2Address } from '@ethersproject/address'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { keccak256 } from '@ethersproject/solidity'\r\nimport { useMemo } from 'react'\r\n\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { Result, useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks'\r\nimport { PositionDetails } from 'types/position'\r\n\r\nimport { useProAmmNFTPositionManagerContract } from './useContract'\r\n\r\n//           { \"internalType\": \"uint96\", \"name\": \"nonce\", \"type\": \"uint96\" },\r\n//           { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" },\r\n//           { \"internalType\": \"uint80\", \"name\": \"poolId\", \"type\": \"uint80\" },\r\n//           { \"internalType\": \"int24\", \"name\": \"tickLower\", \"type\": \"int24\" },\r\n//           { \"internalType\": \"int24\", \"name\": \"tickUpper\", \"type\": \"int24\" },\r\n//           { \"internalType\": \"uint128\", \"name\": \"liquidity\", \"type\": \"uint128\" },\r\n//           { \"internalType\": \"uint256\", \"name\": \"rTokenOwed\", \"type\": \"uint256\" },\r\n//           { \"internalType\": \"uint256\", \"name\": \"feeGrowthInsideLast\", \"type\": \"uint256\" }\r\ninterface UseProAmmPositionsResults {\r\n  loading: boolean\r\n  positions: PositionDetails[] | undefined\r\n}\r\n\r\nexport function useProAmmPositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseProAmmPositionsResults {\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const { isEVM, networkInfo } = useActiveWeb3React()\r\n\r\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map(tokenId => [tokenId]) : []), [tokenIds])\r\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\r\n\r\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\r\n  const error = useMemo(() => results.some(({ error }) => error), [results])\r\n\r\n  const positions = useMemo(() => {\r\n    if (!loading && !error && tokenIds && isEVM) {\r\n      return results.map((call, i) => {\r\n        const tokenId = tokenIds[i]\r\n        const result = call.result as Result\r\n\r\n        return {\r\n          tokenId: tokenId,\r\n          poolId: getCreate2Address(\r\n            (networkInfo as EVMNetworkInfo).elastic.coreFactory,\r\n            keccak256(\r\n              ['bytes'],\r\n              [\r\n                defaultAbiCoder.encode(\r\n                  ['address', 'address', 'uint24'],\r\n                  [result.info.token0, result.info.token1, result.info.fee],\r\n                ),\r\n              ],\r\n            ),\r\n            (networkInfo as EVMNetworkInfo).elastic.initCodeHash,\r\n          ),\r\n          feeGrowthInsideLast: result.pos.feeGrowthInsideLast,\r\n          nonce: result.pos.nonce,\r\n          liquidity: result.pos.liquidity,\r\n          operator: result.pos.operator,\r\n          tickLower: result.pos.tickLower,\r\n          tickUpper: result.pos.tickUpper,\r\n          rTokenOwed: result.pos.rTokenOwed,\r\n          fee: result.info.fee,\r\n          token0: result.info.token0,\r\n          token1: result.info.token1,\r\n        }\r\n      })\r\n    }\r\n    return undefined\r\n  }, [loading, error, results, tokenIds, networkInfo, isEVM])\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      loading,\r\n      positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\r\n    }\r\n  }, [loading, positions, inputs])\r\n}\r\n\r\ninterface UseProAmmPositionResults {\r\n  loading: boolean\r\n  position: PositionDetails | undefined\r\n}\r\n\r\nexport function useProAmmPositionsFromTokenId(tokenId: BigNumber | undefined): UseProAmmPositionResults {\r\n  const position = useProAmmPositionsFromTokenIds(tokenId ? [tokenId] : undefined)\r\n  return {\r\n    loading: position.loading,\r\n    position: position.positions?.[0],\r\n  }\r\n}\r\n\r\nexport const useTokenIdsOwnedByAddress = (address: string): { loading: boolean; tokenIds: BigNumber[] } => {\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\r\n    address ?? undefined,\r\n  ])\r\n\r\n  // we don't expect any account balance to ever exceed the bounds of max safe int\r\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\r\n\r\n  const tokenIdsArgs = useMemo(() => {\r\n    if (accountBalance && address) {\r\n      const tokenRequests = []\r\n      for (let i = 0; i < accountBalance; i++) {\r\n        tokenRequests.push([address, i])\r\n      }\r\n      return tokenRequests\r\n    }\r\n    return []\r\n  }, [address, accountBalance])\r\n\r\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\r\n\r\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\r\n  const tokenIds = useMemo(() => {\r\n    if (address) {\r\n      return tokenIdResults\r\n        .map(({ result }) => result)\r\n        .filter((result): result is Result => !!result)\r\n        .map(result => BigNumber.from(result[0]))\r\n    }\r\n    return []\r\n  }, [address, tokenIdResults])\r\n\r\n  return {\r\n    loading: balanceLoading || someTokenIdsLoading,\r\n    tokenIds,\r\n  }\r\n}\r\n\r\nexport function useProAmmPositions(account: string | null | undefined): UseProAmmPositionsResults {\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\r\n    account ?? undefined,\r\n  ])\r\n\r\n  // we don't expect any account balance to ever exceed the bounds of max safe int\r\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\r\n\r\n  const tokenIdsArgs = useMemo(() => {\r\n    if (accountBalance && account) {\r\n      const tokenRequests = []\r\n      for (let i = 0; i < accountBalance; i++) {\r\n        tokenRequests.push([account, i])\r\n      }\r\n      return tokenRequests\r\n    }\r\n    return []\r\n  }, [account, accountBalance])\r\n\r\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\r\n\r\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\r\n  const tokenIds = useMemo(() => {\r\n    if (account) {\r\n      return tokenIdResults\r\n        .map(({ result }) => result)\r\n        .filter((result): result is Result => !!result)\r\n        .map(result => BigNumber.from(result[0]))\r\n    }\r\n    return []\r\n  }, [account, tokenIdResults])\r\n\r\n  const { positions, loading: positionsLoading } = useProAmmPositionsFromTokenIds(tokenIds)\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      loading: someTokenIdsLoading || balanceLoading || positionsLoading,\r\n      positions,\r\n    }\r\n  }, [someTokenIdsLoading, balanceLoading, positionsLoading, positions])\r\n}\r\n","import { ChainId } from '@kyberswap/ks-sdk-core'\r\n\r\ninterface Reward {\r\n  symbol: string\r\n  logo: string\r\n}\r\n\r\nexport interface UpcomingPool {\r\n  poolToken1Symbol: string\r\n  poolToken1Logo: string\r\n  poolToken2Symbol: string\r\n  poolToken2Logo: string\r\n  startingIn?: string\r\n  network: ChainId\r\n  rewards: Reward[]\r\n  information: string\r\n}\r\n\r\nexport const UPCOMING_POOLS: UpcomingPool[] = []\r\n","import styled from 'styled-components'\r\n\r\nexport const TableWrapper = styled.div`\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 8px;\r\n`\r\n\r\nexport const TableHeader = styled.div<{ fade?: boolean; oddRow?: boolean }>`\r\n  display: grid;\r\n  grid-gap: 3rem;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-areas: 'pools startingIn network rewards information';\r\n  padding: 18px 24px 18px 24px;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  height: fit-content;\r\n  position: relative;\r\n  opacity: ${({ fade }) => (fade ? '0.6' : '1')};\r\n  background-color: ${({ theme }) => theme.tableHeader};\r\n  border-radius: 8px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    grid-gap: 1rem;\r\n  `};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    grid-gap: 1.5rem;\r\n  `};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToLarge`\r\n    grid-gap: 1.5rem;\r\n  `};\r\n`\r\n\r\nexport const RowsWrapper = styled.div`\r\n  padding: 24px 20px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    padding: 0 24px;\r\n  }\r\n`\r\n\r\nexport const TableRow = styled.div<{ isLastItem?: boolean }>`\r\n  display: grid;\r\n  grid-gap: 3rem;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-areas: 'pools startingIn network rewards information';\r\n  padding: 16px 0;\r\n  font-size: 14px;\r\n  align-items: center;\r\n  height: fit-content;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: 1px solid transparent;\r\n  border-bottom: ${({ theme, isLastItem }) => (isLastItem ? 'none' : `1px solid ${theme.border}`)};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    grid-gap: 1rem;\r\n  `};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    grid-gap: 1.5rem;\r\n  `};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToLarge`\r\n    grid-gap: 1.5rem;\r\n  `};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const StyledImg = styled.img`\r\n  margin-right: 8px;\r\n  border-radius: 50%;\r\n  object-fit: contain;\r\n`\r\n\r\nexport const HigherLogo = styled(StyledImg)`\r\n  z-index: 2;\r\n`\r\nexport const CoveredLogo = styled(StyledImg)`\r\n  position: absolute;\r\n  left: 12px !important;\r\n`\r\n\r\nexport const PoolTokensWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n`\r\n\r\nexport const PoolTokensText = styled.div`\r\n  margin-left: 12px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nexport const NetworkLabel = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const NoFarmsWrapper = styled.div`\r\n  text-align: center;\r\n  padding-top: 20px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    padding-top: 32px;\r\n  }\r\n`\r\n\r\nexport const NoFarmsMessage = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.subText};\r\n  margin-bottom: 40px;\r\n\r\n  @media only screen and (min-width: 1000px) {\r\n    font-size: 24px;\r\n  }\r\n`\r\n\r\nexport const StyledItemCard = styled.div<{ isLastItem?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 4px;\r\n  border: ${({ theme }) => `1px solid ${theme.border}`};\r\n  border-radius: 8px;\r\n  margin-bottom: ${({ isLastItem }) => (isLastItem ? '0' : '24px')};\r\n  padding: 8px 20px 4px 20px;\r\n  background-color: ${({ theme }) => theme.background};\r\n  box-shadow: 0px 0px 8px 2px rgba(0, 0, 0, 0.06);\r\n`\r\n","import { UpcomingPool } from 'constants/upcoming-pools'\r\n\r\nimport { CoveredLogo, HigherLogo, PoolTokensText, PoolTokensWrapper } from './styled'\r\n\r\nconst PoolTokens = ({ pool }: { pool: UpcomingPool }) => {\r\n  return (\r\n    <PoolTokensWrapper>\r\n      <HigherLogo src={pool.poolToken1Logo} alt=\"poolToken1Logo\" width=\"16px\" height=\"16px\" />\r\n      <CoveredLogo src={pool.poolToken2Logo} alt=\"poolToken2Logo\" width=\"16px\" height=\"16px\" />\r\n      <PoolTokensText>{`${pool.poolToken1Symbol}-${pool.poolToken2Symbol}`}</PoolTokensText>\r\n    </PoolTokensWrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTokens\r\n","import { Trans } from '@lingui/macro'\r\nimport { Text } from 'rebass'\r\n\r\nimport useTheme from 'hooks/useTheme'\r\nimport { getFormattedTimeFromSecond } from 'utils/formatTime'\r\n\r\nconst StartingIn = ({ startingIn }: { startingIn?: string }) => {\r\n  const theme = useTheme()\r\n\r\n  if (!startingIn) {\r\n    return (\r\n      <Text color={theme.text}>\r\n        <Trans>Coming soon</Trans>\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const timeDiff = new Date(startingIn).getTime() - Date.now()\r\n\r\n  if (timeDiff < 0) {\r\n    return null\r\n  }\r\n\r\n  const seconds = Math.abs(timeDiff) / 1000\r\n\r\n  return <Text color={theme.text}>{getFormattedTimeFromSecond(seconds)}</Text>\r\n}\r\n\r\nexport default StartingIn\r\n","import { Trans } from '@lingui/macro'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex } from 'rebass'\r\n\r\nimport { DataText, DataTitle, GridItem } from 'components/YieldPools/styleds'\r\nimport { NETWORKS_INFO } from 'constants/networks'\r\nimport { UpcomingPool } from 'constants/upcoming-pools'\r\nimport { ExternalLink } from 'theme'\r\n\r\nimport PoolTokens from './PoolTokens'\r\nimport StartingIn from './StartingIn'\r\nimport { NetworkLabel, StyledImg, StyledItemCard, TableRow } from './styled'\r\n\r\nconst ListItem = ({ pool, isLastItem }: { pool: UpcomingPool; isLastItem: boolean }) => {\r\n  const breakpoint = useMedia('(min-width: 1000px)')\r\n\r\n  if (breakpoint) {\r\n    return (\r\n      <TableRow key={`${pool.poolToken1Symbol}_${pool.poolToken2Symbol}`} isLastItem={isLastItem}>\r\n        <Flex grid-area=\"pools\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <PoolTokens pool={pool} />\r\n        </Flex>\r\n        <Flex grid-area=\"startingIn\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <StartingIn startingIn={pool.startingIn} />\r\n        </Flex>\r\n        <Flex grid-area=\"network\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <img\r\n            src={NETWORKS_INFO[pool.network].icon}\r\n            alt=\"Network Logo\"\r\n            style={{ width: '16px', marginRight: '4px' }}\r\n          />\r\n          <NetworkLabel>{NETWORKS_INFO[pool.network].name}</NetworkLabel>\r\n        </Flex>\r\n        <Flex grid-area=\"rewards\" alignItems=\"right\" justifyContent=\"flex-end\">\r\n          {pool.rewards.map((reward, index) => (\r\n            <StyledImg key={index} src={reward.logo} alt=\"logo\" width=\"16px\" height=\"16px\" />\r\n          ))}\r\n        </Flex>\r\n        <Flex grid-area=\"information\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n          {pool.information && (\r\n            <ExternalLink href={pool.information}>\r\n              <Trans>Learn more</Trans> ↗\r\n            </ExternalLink>\r\n          )}\r\n        </Flex>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledItemCard isLastItem={isLastItem}>\r\n      <GridItem>\r\n        <DataTitle>\r\n          <span>\r\n            <Trans>Pools</Trans>\r\n          </span>\r\n        </DataTitle>\r\n        <DataText>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <PoolTokens pool={pool} />\r\n          </div>\r\n        </DataText>\r\n      </GridItem>\r\n\r\n      <GridItem>\r\n        <DataTitle>\r\n          <span>\r\n            <Trans>Network</Trans>\r\n          </span>\r\n        </DataTitle>\r\n        <DataText>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <img\r\n              src={NETWORKS_INFO[pool.network].icon}\r\n              alt=\"Network Logo\"\r\n              style={{ width: '16px', marginRight: '4px' }}\r\n            />\r\n            <NetworkLabel>{NETWORKS_INFO[pool.network].name}</NetworkLabel>\r\n          </div>\r\n        </DataText>\r\n      </GridItem>\r\n\r\n      <GridItem>\r\n        <DataTitle>\r\n          <span>\r\n            <Trans>Rewards</Trans>\r\n          </span>\r\n        </DataTitle>\r\n        <DataText>\r\n          {pool.rewards.map((reward, index) => (\r\n            <StyledImg key={index} src={reward.logo} alt=\"logo\" width=\"16px\" height=\"16px\" />\r\n          ))}\r\n        </DataText>\r\n      </GridItem>\r\n\r\n      <GridItem>\r\n        <DataTitle>\r\n          <span>\r\n            <Trans>Starting In</Trans>\r\n          </span>\r\n        </DataTitle>\r\n        <DataText>\r\n          <StartingIn startingIn={pool.startingIn} />\r\n        </DataText>\r\n      </GridItem>\r\n\r\n      <GridItem noBorder>\r\n        <DataTitle style={{ marginBottom: 0, display: 'flex', alignItems: 'center' }}>\r\n          <span>\r\n            <Trans>Information</Trans>\r\n          </span>\r\n        </DataTitle>\r\n      </GridItem>\r\n\r\n      <GridItem noBorder>\r\n        {!!pool.information && (\r\n          <DataText>\r\n            <ExternalLink href={pool.information}>\r\n              <span style={{ fontWeight: 600 }}>\r\n                <Trans>Learn more</Trans> ↗\r\n              </span>\r\n            </ExternalLink>\r\n          </DataText>\r\n        )}\r\n      </GridItem>\r\n    </StyledItemCard>\r\n  )\r\n}\r\n\r\nexport default ListItem\r\n","import { Trans } from '@lingui/macro'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport { VERSION } from 'constants/v2'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nimport { NoFarmsMessage, NoFarmsWrapper } from './styled'\r\n\r\nconst NoFarms = () => {\r\n  const history = useHistory()\r\n  const { tab: farmType = VERSION.ELASTIC } = useParsedQueryString<{ tab: string }>()\r\n  const theme = useTheme()\r\n  return (\r\n    <NoFarmsWrapper>\r\n      <NoFarmsMessage>Currently there are no Upcoming Farms.</NoFarmsMessage>\r\n      <Text color={theme.subText}>\r\n        <Trans>\r\n          Please check the{' '}\r\n          <ButtonEmpty\r\n            width=\"fit-content\"\r\n            padding=\"0\"\r\n            style={{ display: 'inline' }}\r\n            onClick={() => history.replace(`/farms?type=active&tab=${farmType}`)}\r\n          >\r\n            Active Farms\r\n          </ButtonEmpty>{' '}\r\n          or come back later.\r\n        </Trans>\r\n      </Text>\r\n    </NoFarmsWrapper>\r\n  )\r\n}\r\n\r\nexport default NoFarms\r\n","import { Trans } from '@lingui/macro'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex } from 'rebass'\r\n\r\nimport { ClickableText } from 'components/YieldPools/styleds'\r\nimport { UPCOMING_POOLS } from 'constants/upcoming-pools'\r\n\r\nimport ListItem from './ListItem'\r\nimport NoFarms from './NoFarms'\r\nimport { RowsWrapper, TableHeader, TableWrapper } from './styled'\r\n\r\nconst UpcomingFarms = () => {\r\n  const lgBreakpoint = useMedia('(min-width: 1000px)')\r\n\r\n  const renderHeader = () => {\r\n    if (!lgBreakpoint) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <TableHeader>\r\n        <Flex grid-area=\"pools\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText>\r\n            <Trans>Pools</Trans>\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"startingIn\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText>\r\n            <Trans>Starting In</Trans>\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"network\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText>\r\n            <Trans>Network</Trans>\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"rewards\" alignItems=\"right\" justifyContent=\"flex-end\">\r\n          <ClickableText>\r\n            <Trans>Rewards</Trans>\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"information\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n          <ClickableText>\r\n            <Trans>Information</Trans>\r\n          </ClickableText>\r\n        </Flex>\r\n      </TableHeader>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {UPCOMING_POOLS.length > 0 ? (\r\n        <TableWrapper>\r\n          {renderHeader()}\r\n          <RowsWrapper>\r\n            {UPCOMING_POOLS.map((pool, index) => (\r\n              <ListItem key={index} pool={pool} isLastItem={index === UPCOMING_POOLS.length - 1} />\r\n            ))}\r\n          </RowsWrapper>\r\n        </TableWrapper>\r\n      ) : (\r\n        <NoFarms />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpcomingFarms\r\n","import { useCallback } from 'react'\r\n\r\nimport { CONTRACT_NOT_FOUND_MSG } from 'constants/messages'\r\nimport { useRewardLockerContract } from 'hooks/useContract'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { calculateGasMargin } from 'utils'\r\n\r\nconst useVesting = (rewardLockerAddress: string) => {\r\n  const addTransactionWithType = useTransactionAdder()\r\n  const lockerContract = useRewardLockerContract(rewardLockerAddress)\r\n\r\n  const vestAtIndex = useCallback(\r\n    async (token: string, index: number[]) => {\r\n      if (!lockerContract) {\r\n        throw new Error(CONTRACT_NOT_FOUND_MSG)\r\n      }\r\n\r\n      const estimateGas = await lockerContract.estimateGas.vestScheduleAtIndices(token, index)\r\n      const tx = await lockerContract.vestScheduleAtIndices(token, index, {\r\n        gasLimit: calculateGasMargin(estimateGas),\r\n      })\r\n      addTransactionWithType({ hash: tx.hash, type: TRANSACTION_TYPE.CLAIM, summary: 'reward' })\r\n\r\n      return tx.hash\r\n    },\r\n    [lockerContract, addTransactionWithType],\r\n  )\r\n\r\n  const vestMultipleTokensAtIndices = useCallback(\r\n    async (tokens: string[], indices: number[][]) => {\r\n      if (!lockerContract) {\r\n        throw new Error(CONTRACT_NOT_FOUND_MSG)\r\n      }\r\n\r\n      const estimateGas = await lockerContract.estimateGas.vestScheduleForMultipleTokensAtIndices(tokens, indices)\r\n      const tx = await lockerContract.vestScheduleForMultipleTokensAtIndices(tokens, indices, {\r\n        gasLimit: calculateGasMargin(estimateGas),\r\n      })\r\n      addTransactionWithType({ hash: tx.hash, type: TRANSACTION_TYPE.CLAIM, summary: 'all rewards' })\r\n\r\n      return tx.hash\r\n    },\r\n    [lockerContract, addTransactionWithType],\r\n  )\r\n\r\n  return { vestAtIndex, vestMultipleTokensAtIndices }\r\n}\r\n\r\nexport default useVesting\r\n","import React, { CSSProperties, ReactNode } from 'react'\r\nimport { Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as DownSvg } from 'assets/svg/down.svg'\r\n\r\nconst Dropdown = styled.div<{ placement?: string }>`\r\n  display: none;\r\n  position: absolute;\r\n  background: ${({ theme }) => theme.tableHeader};\r\n  filter: drop-shadow(0px 4px 12px rgba(0, 0, 0, 0.36));\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 16px;\r\n  padding: 12px;\r\n  width: max-content;\r\n  z-index: 13;\r\n  top: 28px;\r\n\r\n  ${({ placement }) =>\r\n    placement === 'center'\r\n      ? `\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n    `\r\n      : placement === 'right'\r\n      ? `left: 100%;\r\n        transform: translate(-100%, 0);\r\n    `\r\n      : ''}\r\n`\r\nconst DropdownIcon = styled(DownSvg)`\r\n  margin-left: 4px;\r\n\r\n  transition: transform 300ms;\r\n`\r\n\r\nconst HoverDropdownWrapper = styled.div<{ disabledHover: boolean; padding?: string }>`\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n\r\n  width: fit-content;\r\n  padding: ${({ padding }) => padding || '8px 12px'};\r\n\r\n  :hover {\r\n    ${Dropdown} {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    ${DropdownIcon} {\r\n      transform: rotate(${({ disabledHover }) => (disabledHover ? '0' : '-180deg')});\r\n    }\r\n  }\r\n`\r\n\r\nconst HoverDropdown = ({\r\n  hideIcon = false,\r\n  content,\r\n  dropdownContent,\r\n  padding,\r\n  placement,\r\n  style = {},\r\n}: {\r\n  hideIcon?: boolean\r\n  content: string | ReactNode\r\n  dropdownContent: ReactNode\r\n  padding?: string\r\n  placement?: 'left' | 'center' | 'right'\r\n  style?: CSSProperties\r\n}) => {\r\n  return (\r\n    <HoverDropdownWrapper disabledHover={!dropdownContent} padding={padding} style={style}>\r\n      <Flex alignItems=\"center\">\r\n        {content}\r\n        {!hideIcon && <DropdownIcon />}\r\n      </Flex>\r\n\r\n      {dropdownContent && <Dropdown placement={placement}>{dropdownContent}</Dropdown>}\r\n    </HoverDropdownWrapper>\r\n  )\r\n}\r\n\r\nexport default HoverDropdown\r\n","import { CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport dayjs from 'dayjs'\r\nimport { BigNumber } from 'ethers'\r\nimport React from 'react'\r\nimport { ChevronDown } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonLight } from 'components/Button'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Divider from 'components/Divider'\r\nimport HoverDropdown from 'components/HoverDropdown'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nconst formatRemainTime = (numberOfSeconds: number) => {\r\n  if (numberOfSeconds < 0) return t`Full unlocked`\r\n  const days = numberOfSeconds / 60 / 60 / 24\r\n  if (days > 1) return days + ' Days left'\r\n\r\n  const hours = numberOfSeconds / 60 / 60\r\n  if (hours < 24 && hours > 1) return hours.toFixed(0) + ' Hours left'\r\n  const minutes = numberOfSeconds / 60\r\n  return minutes.toFixed(0) + ' Minutes left'\r\n}\r\n\r\nconst ScheduleCardWrapper = styled.div`\r\n  padding: 20px 24px;\r\n  border-radius: 20px;\r\n  background: ${({ theme }) => theme.background};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 20px 16px;\r\n  `}\r\n`\r\n\r\nconst ProgressBar = styled.div`\r\n  border-radius: 999px;\r\n  height: 12px;\r\n  margin-top: 8px;\r\n  background: ${({ theme }) => theme.buttonGray};\r\n  position: relative;\r\n`\r\nconst Claimed = styled.div<{ width: string }>`\r\n  border-radius: 999px;\r\n  height: 12px;\r\n  background: ${({ theme }) => theme.primary};\r\n  width: ${({ width }) => width};\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 1;\r\n`\r\n\r\nconst Unlocked = styled(Claimed)`\r\n  background: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst Dot = styled.div<{ color: string }>`\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  background: ${({ color }) => color};\r\n`\r\n\r\nconst RewardBackground = styled.div`\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  margin-top: 8px;\r\n`\r\n\r\nconst InfoCard = styled.div`\r\n  margin-top: 20px;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n`\r\n\r\nfunction VestingCard({\r\n  info,\r\n  endTime,\r\n  remainTime,\r\n  onClaimAll,\r\n}: {\r\n  endTime: number\r\n  remainTime: number\r\n  onClaimAll: () => void\r\n  info: {\r\n    [tokenAddress: string]: {\r\n      vestableIndexes: number[]\r\n      vestableAmount: BigNumber\r\n      /* fullyIndexes: number[] */\r\n      /* fullyAmount: BigNumber */\r\n      totalAmount: BigNumber\r\n      unlockedAmount: BigNumber\r\n      vestedAmount: BigNumber\r\n      token: Token\r\n      tokenPrice: number\r\n    }\r\n  }\r\n}) {\r\n  const theme = useTheme()\r\n\r\n  const unlockedUSD = Object.values(info).reduce((res, item) => {\r\n    const vestableAmount = CurrencyAmount.fromRawAmount(item.token, item.vestableAmount.toString())\r\n    return res + item.tokenPrice * parseFloat(vestableAmount.toExact())\r\n  }, 0)\r\n\r\n  const harvestedUSD = Object.values(info).reduce((res, item) => {\r\n    const harvestedAmount = CurrencyAmount.fromRawAmount(item.token, item.totalAmount.toString())\r\n    return res + item.tokenPrice * parseFloat(harvestedAmount.toExact())\r\n  }, 0)\r\n\r\n  const claimedUSD = Object.values(info).reduce((res, item) => {\r\n    const vestedAmount = CurrencyAmount.fromRawAmount(item.token, item.vestedAmount.toString())\r\n    return res + item.tokenPrice * parseFloat(vestedAmount.toExact())\r\n  }, 0)\r\n\r\n  const claimable = Object.values(info).some(item => item.vestableAmount.gt(0))\r\n\r\n  const claimedPercent = (harvestedUSD ? claimedUSD / harvestedUSD : 0) * 100\r\n  const unlockedPercent = (harvestedUSD ? unlockedUSD / harvestedUSD : 0) * 100\r\n\r\n  return (\r\n    <ScheduleCardWrapper>\r\n      <Text fontWeight=\"500\" fontSize={20}>\r\n        GROUP\r\n      </Text>\r\n\r\n      <Flex fontSize={12} marginTop=\"1rem\" justifyContent=\"space-between\">\r\n        <Text color={theme.subText}>\r\n          <Trans>Full unlock</Trans>{' '}\r\n        </Text>\r\n        <Text>\r\n          {dayjs(endTime * 1000).format('DD-MM-YYYY')} ({formatRemainTime(remainTime)})\r\n        </Text>\r\n      </Flex>\r\n\r\n      <ProgressBar>\r\n        <Unlocked width={`${claimedPercent + unlockedPercent}%`} />\r\n        <Claimed width={claimedPercent + '%'} />\r\n      </ProgressBar>\r\n\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" fontSize=\"12px\" color={theme.subText} marginTop=\"12px\">\r\n        <Flex>\r\n          <Dot color={theme.primary} />\r\n          <Text marginLeft=\"4px\" lineHeight=\"16px\">\r\n            <Trans>{claimedPercent.toFixed(0)}% Claimed</Trans>\r\n          </Text>\r\n        </Flex>\r\n        <Flex>\r\n          <Dot color={theme.text} />\r\n          <Text marginLeft=\"4px\" lineHeight=\"16px\">\r\n            <Trans>{unlockedPercent.toFixed(0)}% Unlocked</Trans>\r\n          </Text>\r\n        </Flex>\r\n        <Flex>\r\n          <Dot color={theme.buttonGray} />\r\n          <Text marginLeft=\"4px\" lineHeight=\"16px\">\r\n            <Trans>{Math.abs(100 - unlockedPercent - claimedPercent).toFixed(0)}% Locked</Trans>\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Flex marginTop=\"20px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color={theme.subText} fontSize=\"12px\" width=\"max-content\">\r\n          <Trans>Unlocked Rewards</Trans>\r\n        </Text>\r\n        <Text fontSize=\"14px\" overflow=\"hidden\">\r\n          <HoverInlineText maxCharacters={12} text={formatDollarAmount(unlockedUSD)}></HoverInlineText>\r\n        </Text>\r\n      </Flex>\r\n\r\n      <RewardBackground>\r\n        <Flex sx={{ gap: '12px' }} marginBottom=\"8px\" alignItems=\"center\" justifyContent=\"center\">\r\n          {Object.keys(info).map((key, index) => {\r\n            const item = info[key]\r\n            return (\r\n              <React.Fragment key={key}>\r\n                <Flex sx={{ gap: '4px' }} fontSize=\"12px\" alignItems=\"center\">\r\n                  <CurrencyLogo currency={item.token} size=\"16px\" />\r\n                  <HoverInlineText\r\n                    maxCharacters={10}\r\n                    text={CurrencyAmount.fromRawAmount(item.token, item.vestableAmount.toString()).toSignificant(10)}\r\n                  />\r\n                </Flex>\r\n                {index !== Object.keys(info).length - 1 && <Text color={theme.subText}>|</Text>}\r\n              </React.Fragment>\r\n            )\r\n          })}\r\n        </Flex>\r\n        <ButtonLight style={{ height: '32px', fontSize: '14px' }} onClick={onClaimAll} disabled={!claimable}>\r\n          <Trans>Claim</Trans>\r\n        </ButtonLight>\r\n      </RewardBackground>\r\n\r\n      <InfoCard>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" marginBottom=\"4px\">\r\n          <Text color={theme.subText} fontSize={12}>\r\n            <Trans>Total Harvested Rewards</Trans>\r\n          </Text>\r\n          <HoverDropdown\r\n            hideIcon\r\n            placement=\"right\"\r\n            content={\r\n              <Flex alignItems=\"center\" fontSize=\"14px\">\r\n                <HoverInlineText maxCharacters={12} text={formatDollarAmount(harvestedUSD)} />\r\n                <ChevronDown size={16} />\r\n              </Flex>\r\n            }\r\n            dropdownContent={\r\n              Object.values(info).length\r\n                ? Object.values(info).map(amount => (\r\n                    <Flex alignItems=\"center\" key={amount.token.address} paddingY=\"4px\">\r\n                      <CurrencyLogo size=\"16px\" currency={amount.token} />\r\n                      <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                        {CurrencyAmount.fromRawAmount(amount.token, amount.totalAmount.toString()).toSignificant(8)}{' '}\r\n                        {amount.token.symbol}\r\n                      </Text>\r\n                    </Flex>\r\n                  ))\r\n                : ''\r\n            }\r\n          />\r\n        </Flex>\r\n        <Divider />\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"4px\">\r\n          <Text color={theme.subText} fontSize={12}>\r\n            <Trans>Claimed Rewards</Trans>\r\n          </Text>\r\n\r\n          <HoverDropdown\r\n            hideIcon\r\n            placement=\"right\"\r\n            content={\r\n              <Flex alignItems=\"center\" fontSize=\"14px\">\r\n                <HoverInlineText maxCharacters={12} text={formatDollarAmount(claimedUSD)} />\r\n                <ChevronDown size={16} />\r\n              </Flex>\r\n            }\r\n            dropdownContent={\r\n              Object.values(info).length\r\n                ? Object.values(info).map(amount => (\r\n                    <Flex alignItems=\"center\" key={amount.token.address} paddingY=\"4px\">\r\n                      <CurrencyLogo size=\"16px\" currency={amount.token} />\r\n                      <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                        {CurrencyAmount.fromRawAmount(amount.token, amount.vestedAmount.toString()).toSignificant(8)}{' '}\r\n                        {amount.token.symbol}\r\n                      </Text>\r\n                    </Flex>\r\n                  ))\r\n                : ''\r\n            }\r\n          />\r\n        </Flex>\r\n      </InfoCard>\r\n    </ScheduleCardWrapper>\r\n  )\r\n}\r\n\r\nexport default VestingCard\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { ZERO_ADDRESS } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { useTimestampFromBlock } from 'hooks/useTimestampFromBlock'\r\nimport useVesting from 'hooks/useVesting'\r\nimport { useBlockNumber, useTokensPrice } from 'state/application/hooks'\r\nimport { RewardLockerVersion } from 'state/farms/types'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setVestingError } from 'state/vesting/actions'\r\nimport { fixedFormatting } from 'utils/formatBalance'\r\n\r\nimport VestingCard from './VestingCard'\r\n\r\nconst RewardLockerSchedules = ({\r\n  rewardLockerAddress,\r\n  schedules,\r\n  rewardLockerVersion,\r\n}: {\r\n  rewardLockerAddress: string\r\n  schedules: [BigNumber, BigNumber, BigNumber, BigNumber, Token, number, RewardLockerVersion][]\r\n  rewardLockerVersion: RewardLockerVersion\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const currentBlockNumber = useBlockNumber()\r\n  const currentTimestamp = Math.round(Date.now() / 1000)\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const { vestMultipleTokensAtIndices } = useVesting(rewardLockerAddress)\r\n  const { mixpanelHandler } = useMixpanel()\r\n  if (!schedules) {\r\n    schedules = []\r\n  }\r\n\r\n  const rewardTokenMap: { [address: string]: Token } = {}\r\n  schedules.forEach(schedule => {\r\n    const address = (schedule[4] as Token).isNative ? ZERO_ADDRESS : schedule[4].address\r\n    if (!rewardTokenMap[address]) {\r\n      rewardTokenMap[address] = schedule[4]\r\n    }\r\n  })\r\n\r\n  const rewardTokens = Object.values(rewardTokenMap)\r\n\r\n  const rewardPrices = useTokensPrice(rewardTokens)\r\n  const rewardPriceMap = rewardTokens.reduce((acc, token, index) => {\r\n    const address = token.isNative ? ZERO_ADDRESS : token.address\r\n    return {\r\n      ...acc,\r\n      [address]: rewardPrices[index],\r\n    }\r\n  }, {} as { [address: string]: number })\r\n\r\n  const info = schedules.reduce<{\r\n    [key: string]: {\r\n      vestableIndexes: number[]\r\n      vestableAmount: BigNumber\r\n      // fullyIndexes: number[]\r\n      // fullyAmount: BigNumber\r\n      totalAmount: BigNumber\r\n      unlockedAmount: BigNumber\r\n      vestedAmount: BigNumber\r\n      token: Token\r\n      tokenPrice: number\r\n    }\r\n  }>((result, schedule) => {\r\n    if (!currentBlockNumber) return result\r\n    const address = (schedule[4] as Token).isNative ? ZERO_ADDRESS : schedule[4].address\r\n\r\n    if (!result[address]) {\r\n      result[address] = {\r\n        vestableIndexes: [],\r\n        vestableAmount: BigNumber.from(0),\r\n        // fullyIndexes: [],\r\n        // fullyAmount: BigNumber.from(0),\r\n        totalAmount: BigNumber.from(0),\r\n        unlockedAmount: BigNumber.from(0),\r\n        vestedAmount: BigNumber.from(0),\r\n        token: schedule[4] as Token,\r\n        tokenPrice: rewardPriceMap[address],\r\n      }\r\n    }\r\n\r\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule[2]))\r\n\r\n    result[address].vestedAmount = result[address].vestedAmount.add(BigNumber.from(schedule[3]))\r\n    /**\r\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\r\n     */\r\n    const fullyVestedAlready = schedule[2].sub(schedule[3]).isZero()\r\n\r\n    /**\r\n     * v1: isEnd = schedule.endBlock < currentBlock\r\n     * v2: isEnd = schedule.endTime < currentTimestamp\r\n     */\r\n    const isEnd =\r\n      rewardLockerVersion === RewardLockerVersion.V1\r\n        ? schedule[1].lt(currentBlockNumber)\r\n        : schedule[1].lt(currentTimestamp)\r\n    // const vestedAndVestablePercent = BigNumber.from(currentBlockNumber)\r\n    //   .sub(BigNumber.from(s[1]))\r\n    //   .isNegative()\r\n    //   ? BigNumber.from(currentBlockNumber)\r\n    //       .sub(BigNumber.from(s[0]))\r\n    //       .mul(100)\r\n    //       .div(BigNumber.from(s[1]).sub(BigNumber.from(s[0])))\r\n    //   : 100\r\n    // const unlockedAmount = BigNumber.from(s[2])\r\n    //   .mul(vestedAndVestablePercent)\r\n    //   .div(100)\r\n    const unlockedAmount = isEnd\r\n      ? schedule[2]\r\n      : rewardLockerVersion === RewardLockerVersion.V1\r\n      ? schedule[2].mul(BigNumber.from(currentBlockNumber).sub(schedule[0])).div(schedule[1].sub(schedule[0]))\r\n      : schedule[2].mul(BigNumber.from(currentTimestamp).sub(schedule[0])).div(schedule[1].sub(schedule[0]))\r\n    const vestableAmount = unlockedAmount.sub(BigNumber.from(schedule[3])) // vestableAmount = unlock - vestedQuanitty\r\n    if (!fullyVestedAlready) {\r\n      result[address].vestableIndexes.push(schedule[5])\r\n    }\r\n    result[address].vestableAmount = result[address].vestableAmount.add(\r\n      vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount,\r\n    )\r\n    // if (!fullyVestedAlready && (rewardLockerVersion === RewardLockerVersion.V2 || !!currentBlockNumber) && isEnd) {\r\n    //   result[address].fullyIndexes.push(schedule[5])\r\n    //   result[address].fullyAmount = result[address].fullyAmount.add(schedule[2])\r\n    // }\r\n\r\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount)\r\n    return result\r\n  }, {})\r\n\r\n  const onClaimAll = async () => {\r\n    if (!chainId || !account) {\r\n      return\r\n    }\r\n\r\n    dispatch(setShowConfirm(true))\r\n    dispatch(setAttemptingTxn(true))\r\n    dispatch(setTxHash(''))\r\n\r\n    try {\r\n      const addresses = Object.values(info)\r\n        .filter(item => item.vestableIndexes.length > 0)\r\n        .map(item => item.token.address)\r\n      const indices = Object.keys(info).reduce<number[][]>((acc, k) => {\r\n        if (info[k].vestableIndexes.length > 0) acc.push(info[k].vestableIndexes)\r\n        return acc\r\n      }, [])\r\n      const txHash = await vestMultipleTokensAtIndices(addresses, indices)\r\n      if (txHash) {\r\n        mixpanelHandler(MIXPANEL_TYPE.ALL_REWARDS_CLAIMED, {\r\n          reward_tokens_and_amounts: Object.assign(\r\n            {},\r\n            ...Object.keys(info).map(k => {\r\n              return { [k]: fixedFormatting(info[k].vestableAmount, info[k].token.decimals) }\r\n            }),\r\n          ),\r\n        })\r\n      }\r\n      dispatch(setTxHash(txHash))\r\n    } catch (err) {\r\n      console.error(err)\r\n      dispatch(setVestingError(err as Error))\r\n    }\r\n\r\n    dispatch(setAttemptingTxn(false))\r\n  }\r\n\r\n  const maxEndBlock = schedules.reduce((acc, cur) => {\r\n    // timestapm or blockNumber version\r\n    const version = cur[6]\r\n    if (version === RewardLockerVersion.V1) {\r\n      return acc && acc < cur[1].toNumber() ? cur[1].toNumber() : acc\r\n    }\r\n\r\n    return acc\r\n  }, currentBlockNumber)\r\n\r\n  const endTimestampFromBlock = useTimestampFromBlock(maxEndBlock)\r\n\r\n  const endTime = schedules.reduce((acc, cur) => {\r\n    // timestapm or blockNumber version\r\n    const version = cur[6]\r\n    if (version === RewardLockerVersion.V2) {\r\n      return acc && acc < cur[1].toNumber() ? cur[1].toNumber() : acc\r\n    }\r\n\r\n    return acc\r\n  }, endTimestampFromBlock || 0)\r\n\r\n  return <VestingCard info={info} endTime={endTime} remainTime={endTime - currentTimestamp} onClaimAll={onClaimAll} />\r\n}\r\n\r\nexport default RewardLockerSchedules\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useWeb3React } from 'hooks'\r\n\r\nexport function useTimestampFromBlock(block: number | undefined): number | undefined {\r\n  const { library } = useWeb3React()\r\n  const [timestamp, setTimestamp] = useState<number>()\r\n  useEffect(() => {\r\n    async function fetchTimestamp() {\r\n      if (block) {\r\n        const blockData = await library?.getBlock(block)\r\n        blockData && setTimestamp(blockData.timestamp)\r\n      }\r\n    }\r\n    if (!timestamp) {\r\n      fetchTimestamp()\r\n    }\r\n  }, [block, library, timestamp])\r\n  return timestamp\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const ScheduleGrid = styled.div`\r\n  display: grid;\r\n  gap: 24px;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    grid-template-columns: 1fr 1fr;\r\n  `}\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    grid-template-columns: 1fr;\r\n  `}\r\n`\r\n","import React, { useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport TransactionConfirmationModal, { TransactionErrorContent } from 'components/TransactionConfirmationModal'\r\nimport { AppState } from 'state'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setVestingError } from 'state/vesting/actions'\r\n\r\nexport default function ConfirmVestingModal() {\r\n  const showConfirm = useSelector<AppState, boolean>(state => state.vesting.showConfirm)\r\n  const attemptingTxn = useSelector<AppState, boolean>(state => state.vesting.attemptingTxn)\r\n  const txHash = useSelector<AppState, string>(state => state.vesting.txHash)\r\n  const vestingError = useSelector<AppState, string>(state => state.vesting.error)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    dispatch(setShowConfirm(false))\r\n    dispatch(setAttemptingTxn(false))\r\n    dispatch(setTxHash(''))\r\n    dispatch(setVestingError(null))\r\n  }, [dispatch])\r\n\r\n  const confirmationContent = useCallback(\r\n    () => (vestingError ? <TransactionErrorContent onDismiss={handleConfirmDismiss} message={vestingError} /> : null),\r\n    [handleConfirmDismiss, vestingError],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      hash={txHash ? txHash : ''}\r\n      isOpen={showConfirm}\r\n      onDismiss={handleConfirmDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      content={confirmationContent}\r\n      pendingText=\"\"\r\n    />\r\n  )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Lock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"11\",\n    width: \"18\",\n    height: \"11\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 11V7a5 5 0 0 1 10 0v4\"\n  }));\n});\nLock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nLock.displayName = 'Lock';\nexport default Lock;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Unlock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"11\",\n    width: \"18\",\n    height: \"11\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 11V7a5 5 0 0 1 9.9-1\"\n  }));\n});\nUnlock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nUnlock.displayName = 'Unlock';\nexport default Unlock;","const AgriCulture = ({ width, height, color }: { color?: string; width?: number; height?: number }) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || 24} height={height || 24} viewBox=\"0 0 24 24\">\r\n      <path\r\n        d=\"M19.5 11.9702C20.43 11.9702 21.28 12.2502 22 12.7302V7.97023C22 6.87023 21.1 5.97023 20 5.97023H13.71L12.65 4.91023L13.71 3.85023C13.91 3.65023 13.91 3.34023 13.71 3.14023C13.51 2.94023 13.2 2.94023 13 3.14023L10.17 5.97023C9.97002 6.17023 9.97002 6.48023 10.17 6.68023C10.37 6.88023 10.68 6.88023 10.88 6.68023L11.94 5.62023L13 6.68023V8.97023C13 10.0702 12.1 10.9702 11 10.9702H10.46C11.41 12.0302 12 13.4302 12 14.9702C12 15.3102 11.96 15.6402 11.91 15.9702H15.05C15.3 13.7302 17.19 11.9702 19.5 11.9702Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n      <path\r\n        d=\"M19.5 12.9707C17.57 12.9707 16 14.5407 16 16.4707C16 18.4007 17.57 19.9707 19.5 19.9707C21.43 19.9707 23 18.4007 23 16.4707C23 14.5407 21.43 12.9707 19.5 12.9707ZM19.5 17.9707C18.67 17.9707 18 17.3007 18 16.4707C18 15.6407 18.67 14.9707 19.5 14.9707C20.33 14.9707 21 15.6407 21 16.4707C21 17.3007 20.33 17.9707 19.5 17.9707Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n      <path\r\n        d=\"M4 8.9707H9C9 7.8707 8.1 6.9707 7 6.9707H4C3.45 6.9707 3 7.4207 3 7.9707C3 8.5307 3.45 8.9707 4 8.9707Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n      <path\r\n        d=\"M9.83 13.7907L9.65 13.3207L10.58 12.9707C10.12 11.9107 9.3 11.0607 8.27 10.5407L7.87 11.4307L7.41 11.2207L7.81 10.3207C7.26 10.1107 6.64 9.9707 6 9.9707C5.47 9.9707 4.96 10.0807 4.48 10.2307L4.82 11.1407L4.35 11.3207L4 10.4007C2.94 10.8607 2.09 11.6807 1.57 12.7107L2.46 13.1107L2.25 13.5707L1.35 13.1707C1.13 13.7207 1 14.3307 1 14.9707C1 15.5007 1.11 16.0107 1.26 16.4907L2.17 16.1507L2.35 16.6207L1.42 16.9707C1.88 18.0307 2.7 18.8807 3.73 19.4007L4.13 18.5107L4.59 18.7207L4.19 19.6207C4.76 19.8407 5.37 19.9707 6.01 19.9707C6.54 19.9707 7.05 19.8607 7.53 19.7107L7.18 18.8007L7.65 18.6207L8 19.5507C9.06 19.0907 9.91 18.2707 10.43 17.2407L9.54 16.8407L9.75 16.3807L10.65 16.7807C10.87 16.2107 11 15.6007 11 14.9607C11 14.4307 10.89 13.9207 10.74 13.4407L9.83 13.7907ZM7.15 17.7507C5.62 18.3807 3.86 17.6607 3.23 16.1307C2.6 14.6007 3.32 12.8407 4.85 12.2107C6.38 11.5807 8.14 12.3007 8.77 13.8307C9.41 15.3607 8.68 17.1107 7.15 17.7507Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default AgriCulture\r\n","import { CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { ChevronDown, DollarSign, Lock, Unlock } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport HoverDropdown from 'components/HoverDropdown'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\nimport AgriCulture from 'components/Icons/AgriCulture'\r\nimport Loader from 'components/Loader'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nconst SummaryWrapper = styled.div`\r\n  display: grid;\r\n  gap: 24px;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  margin-top: 32px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    grid-template-columns: 1fr 1fr;\r\n  `}\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n    grid-template-columns: 1fr;\r\n  `}\r\n`\r\n\r\nconst SummaryItem = styled.div`\r\n  border-radius: 20px;\r\n  background: ${({ theme }) => theme.background};\r\n  padding: 20px 20px 24px;\r\n`\r\nconst SummaryItemTitle = styled.div`\r\n  border-bottom: 1px dashed ${({ theme }) => theme.border};\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-weight: 500;\r\n`\r\n\r\ntype Formatted = { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } }\r\n\r\nfunction VestingSummary({\r\n  loading,\r\n  totalHarvested,\r\n  locked,\r\n  unlocked,\r\n  claimed,\r\n}: {\r\n  loading: boolean\r\n  totalHarvested: Formatted\r\n  locked: Formatted\r\n  unlocked: Formatted\r\n  claimed: Formatted\r\n}) {\r\n  const theme = useTheme()\r\n  return (\r\n    <>\r\n      <Text fontWeight={500} fontSize=\"1rem\">\r\n        <Trans>Summary</Trans>\r\n      </Text>\r\n\r\n      <SummaryWrapper>\r\n        <SummaryItem>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <MouseoverTooltip\r\n              text={t`The total amount of rewards you have harvested from the farms. Harvested rewards are locked initially and vested linearly over a short period.`}\r\n            >\r\n              <SummaryItemTitle>\r\n                <Trans>Total Harvested Rewards</Trans>\r\n              </SummaryItemTitle>\r\n            </MouseoverTooltip>\r\n            <AgriCulture color={theme.subText} />\r\n          </Flex>\r\n\r\n          <Flex marginTop=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text fontWeight={500} fontSize={24}>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : (\r\n                <HoverInlineText maxCharacters={12} text={formatDollarAmount(totalHarvested.value)} />\r\n              )}\r\n            </Text>\r\n\r\n            <HoverDropdown\r\n              placement=\"right\"\r\n              hideIcon\r\n              content={\r\n                <Flex alignItems=\"center\" color={theme.subText} fontSize=\"14px\">\r\n                  <Text>\r\n                    <Trans>Details</Trans>\r\n                  </Text>\r\n                  <ChevronDown size={16} />\r\n                </Flex>\r\n              }\r\n              dropdownContent={\r\n                Object.values(totalHarvested.amountByAddress).length\r\n                  ? Object.values(totalHarvested.amountByAddress).map(amount => (\r\n                      <Flex alignItems=\"center\" key={amount.currency.address} paddingY=\"4px\">\r\n                        <CurrencyLogo size=\"16px\" currency={amount.currency} />\r\n                        <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                          {amount.toSignificant(8)} {amount.currency.symbol}\r\n                        </Text>\r\n                      </Flex>\r\n                    ))\r\n                  : ''\r\n              }\r\n            />\r\n          </Flex>\r\n        </SummaryItem>\r\n\r\n        <SummaryItem>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <MouseoverTooltip text={t`The amount of rewards that are locked as they are currently vesting`}>\r\n              <SummaryItemTitle>\r\n                <Trans>Locked Rewards</Trans>\r\n              </SummaryItemTitle>\r\n            </MouseoverTooltip>\r\n            <Lock size={20} color={theme.subText} />\r\n          </Flex>\r\n\r\n          <Flex marginTop=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text fontWeight={500} fontSize={24}>\r\n              {loading ? <Loader /> : <HoverInlineText maxCharacters={12} text={formatDollarAmount(locked.value)} />}\r\n            </Text>\r\n\r\n            <HoverDropdown\r\n              hideIcon\r\n              placement=\"right\"\r\n              content={\r\n                <Flex alignItems=\"center\" color={theme.subText} fontSize=\"14px\">\r\n                  <Text>\r\n                    <Trans>Details</Trans>\r\n                  </Text>\r\n                  <ChevronDown size={16} />\r\n                </Flex>\r\n              }\r\n              dropdownContent={\r\n                Object.values(locked.amountByAddress).length\r\n                  ? Object.values(locked.amountByAddress).map(amount => (\r\n                      <Flex alignItems=\"center\" key={amount.currency.address} paddingY=\"4px\">\r\n                        <CurrencyLogo size=\"16px\" currency={amount.currency} />\r\n                        <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                          {amount.toSignificant(8)} {amount.currency.symbol}\r\n                        </Text>\r\n                      </Flex>\r\n                    ))\r\n                  : ''\r\n              }\r\n            />\r\n          </Flex>\r\n        </SummaryItem>\r\n\r\n        <SummaryItem>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <MouseoverTooltip\r\n              text={t`The amount of rewards that are unlocked and can be claimed instantly as their vesting is over`}\r\n            >\r\n              <SummaryItemTitle>\r\n                <Trans>Unlocked Rewards</Trans>\r\n              </SummaryItemTitle>\r\n            </MouseoverTooltip>\r\n            <Unlock size={20} color={theme.subText} />\r\n          </Flex>\r\n\r\n          <Flex marginTop=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text fontWeight={500} fontSize={24} flex={1} overflow=\"hidden\">\r\n              {loading ? (\r\n                <Loader />\r\n              ) : (\r\n                <HoverInlineText maxCharacters={12} text={formatDollarAmount(unlocked.value)}></HoverInlineText>\r\n              )}\r\n            </Text>\r\n\r\n            <HoverDropdown\r\n              hideIcon\r\n              placement=\"right\"\r\n              content={\r\n                <Flex alignItems=\"center\" color={theme.subText} fontSize=\"14px\">\r\n                  <Text>\r\n                    <Trans>Details</Trans>\r\n                  </Text>\r\n                  <ChevronDown size={16} />\r\n                </Flex>\r\n              }\r\n              dropdownContent={\r\n                Object.values(unlocked.amountByAddress).length\r\n                  ? Object.values(unlocked.amountByAddress).map(amount => (\r\n                      <Flex alignItems=\"center\" key={amount.currency.address} paddingY=\"4px\">\r\n                        <CurrencyLogo size=\"16px\" currency={amount.currency} />\r\n                        <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                          {amount.toSignificant(8)} {amount.currency.symbol}\r\n                        </Text>\r\n                      </Flex>\r\n                    ))\r\n                  : ''\r\n              }\r\n            />\r\n          </Flex>\r\n        </SummaryItem>\r\n\r\n        <SummaryItem>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <MouseoverTooltip text={t`The amount of rewards you have already claimed`}>\r\n              <SummaryItemTitle>\r\n                <Trans>Claimed Rewards</Trans>\r\n              </SummaryItemTitle>\r\n            </MouseoverTooltip>\r\n            <DollarSign size={20} color={theme.subText} />\r\n          </Flex>\r\n\r\n          <Flex marginTop=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text fontWeight={500} fontSize={24}>\r\n              {loading ? <Loader /> : <HoverInlineText maxCharacters={12} text={formatDollarAmount(claimed.value)} />}\r\n            </Text>\r\n\r\n            <HoverDropdown\r\n              hideIcon\r\n              placement=\"right\"\r\n              content={\r\n                <Flex alignItems=\"center\" color={theme.subText} fontSize=\"14px\">\r\n                  <Text>\r\n                    <Trans>Details</Trans>\r\n                  </Text>\r\n                  <ChevronDown size={16} />\r\n                </Flex>\r\n              }\r\n              dropdownContent={\r\n                Object.values(claimed.amountByAddress).length\r\n                  ? Object.values(claimed.amountByAddress).map(amount => (\r\n                      <Flex alignItems=\"center\" key={amount.currency.address} paddingY=\"4px\">\r\n                        <CurrencyLogo size=\"16px\" currency={amount.currency} />\r\n                        <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                          {amount.toSignificant(8)} {amount.currency.symbol}\r\n                        </Text>\r\n                      </Flex>\r\n                    ))\r\n                  : ''\r\n              }\r\n            />\r\n          </Flex>\r\n        </SummaryItem>\r\n      </SummaryWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VestingSummary\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport { Text } from 'rebass'\r\n\r\nimport LocalLoader from 'components/LocalLoader'\r\nimport RewardLockerSchedules from 'components/Vesting/RewardLockerSchedules'\r\nimport { ScheduleGrid } from 'components/Vesting/styleds'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useBlockNumber } from 'state/application/hooks'\r\nimport { Reward, RewardLockerVersion } from 'state/farms/types'\r\nimport { useRewardLockerAddressesWithVersion, useSchedules } from 'state/vesting/hooks'\r\nimport { useFarmRewardsUSD } from 'utils/dmm'\r\n\r\nimport ConfirmVestingModal from './ConfirmVestingModal'\r\nimport VestingSummary from './VestingSummary'\r\n\r\nconst Vesting = ({ loading }: { loading: boolean }) => {\r\n  const { schedulesByRewardLocker } = useSchedules()\r\n  const rewardLockerAddressesWithVersion = useRewardLockerAddressesWithVersion()\r\n  const theme = useTheme()\r\n  const currentBlockNumber = useBlockNumber()\r\n  const currentTimestamp = Math.round(Date.now() / 1000)\r\n\r\n  const schedules = Object.values(schedulesByRewardLocker).flat()\r\n\r\n  const info = schedules.reduce<{\r\n    [key: string]: {\r\n      vestableIndexes: number[]\r\n      vestableAmount: BigNumber\r\n      fullyIndexes: number[]\r\n      fullyAmount: BigNumber\r\n      totalAmount: BigNumber\r\n      unlockedAmount: BigNumber\r\n      token: Token\r\n    }\r\n  }>((result, schedule) => {\r\n    if (!currentBlockNumber) return result\r\n    const address = (schedule[4] as Token).symbol as string\r\n    if (!result[address]) {\r\n      result[address] = {\r\n        vestableIndexes: [],\r\n        vestableAmount: BigNumber.from(0),\r\n        fullyIndexes: [],\r\n        fullyAmount: BigNumber.from(0),\r\n        totalAmount: BigNumber.from(0),\r\n        unlockedAmount: BigNumber.from(0),\r\n        token: schedule[4] as Token,\r\n      }\r\n    }\r\n\r\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule[2]))\r\n    /**\r\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\r\n     */\r\n    const fullyVestedAlready = BigNumber.from(schedule[2]).sub(BigNumber.from(schedule[3])).isZero()\r\n    const rewardLockerVersion = schedule[6]\r\n    /**\r\n     * v1: isEnd = schedule.endBlock < currentBlock\r\n     * v2: isEnd = schedule.endTime < now\r\n     */\r\n    const isEnd =\r\n      rewardLockerVersion === RewardLockerVersion.V1\r\n        ? schedule[1].lt(currentBlockNumber)\r\n        : schedule[1].lt(currentTimestamp)\r\n    // const vestedAndVestablePercent = BigNumber.from(currentBlockNumber)\r\n    //   .sub(BigNumber.from(s[1]))\r\n    //   .isNegative()\r\n    //   ? BigNumber.from(currentBlockNumber)\r\n    //       .sub(BigNumber.from(s[0]))\r\n    //       .mul(100)\r\n    //       .div(BigNumber.from(s[1]).sub(BigNumber.from(s[0])))\r\n    //   : 100\r\n    // const unlockedAmount = BigNumber.from(s[2])\r\n    //   .mul(vestedAndVestablePercent)\r\n    //   .div(100)\r\n    const unlockedAmount = isEnd\r\n      ? schedule[2]\r\n      : rewardLockerVersion === RewardLockerVersion.V1\r\n      ? schedule[2].mul(BigNumber.from(currentBlockNumber).sub(schedule[0])).div(schedule[1].sub(schedule[0]))\r\n      : schedule[2].mul(BigNumber.from(currentTimestamp).sub(schedule[0])).div(schedule[1].sub(schedule[0]))\r\n    const vestableAmount = unlockedAmount.sub(BigNumber.from(schedule[3])) // vestableAmount = unlock - vestedQuanitty\r\n    if (!fullyVestedAlready) {\r\n      result[address].vestableIndexes.push(schedule[5])\r\n    }\r\n    result[address].vestableAmount = result[address].vestableAmount.add(\r\n      vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount,\r\n    )\r\n\r\n    if (!fullyVestedAlready && !!currentBlockNumber && BigNumber.from(currentBlockNumber).gt(schedule[1])) {\r\n      result[address].fullyIndexes.push(schedule[5])\r\n      result[address].fullyAmount = result[address].fullyAmount.add(BigNumber.from(schedule[2]))\r\n    }\r\n\r\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount)\r\n    return result\r\n  }, {})\r\n\r\n  const totalUSD = useFarmRewardsUSD(\r\n    Object.keys(info).map(k => {\r\n      return { token: info[k].token, amount: info[k].totalAmount } as Reward\r\n    }),\r\n  )\r\n\r\n  const totalHarvested = {\r\n    value: totalUSD,\r\n    amountByAddress: Object.values(info).reduce((acc, item) => {\r\n      const address = (item.token.isNative ? item.token.symbol : item.token.address) as string\r\n      return {\r\n        ...acc,\r\n        [address]: CurrencyAmount.fromRawAmount(item.token, item.totalAmount.toString()),\r\n      }\r\n    }, {}),\r\n  }\r\n\r\n  const lockedUSD = useFarmRewardsUSD(\r\n    Object.keys(info).map(k => {\r\n      return { token: info[k].token, amount: info[k].totalAmount.sub(info[k].unlockedAmount) } as Reward\r\n    }),\r\n  )\r\n\r\n  const locked = {\r\n    value: lockedUSD,\r\n    amountByAddress: Object.values(info).reduce((acc, item) => {\r\n      const address = (item.token.isNative ? item.token.symbol : item.token.address) as string\r\n      return {\r\n        ...acc,\r\n        [address]: CurrencyAmount.fromRawAmount(item.token, item.totalAmount.sub(item.unlockedAmount).toString()),\r\n      }\r\n    }, {}),\r\n  }\r\n\r\n  const claimedUSD = useFarmRewardsUSD(\r\n    Object.keys(info).map(k => {\r\n      return { token: info[k].token, amount: info[k].unlockedAmount.sub(info[k].vestableAmount) } as Reward\r\n    }),\r\n  )\r\n\r\n  const claimed = {\r\n    value: claimedUSD,\r\n    amountByAddress: Object.values(info).reduce((acc, item) => {\r\n      const address = (item.token.isNative ? item.token.symbol : item.token.address) as string\r\n      return {\r\n        ...acc,\r\n        [address]: CurrencyAmount.fromRawAmount(item.token, item.unlockedAmount.sub(item.vestableAmount).toString()),\r\n      }\r\n    }, {}),\r\n  }\r\n  const unlockedUSD = useFarmRewardsUSD(\r\n    Object.keys(info).map(k => {\r\n      return { token: info[k].token, amount: info[k].vestableAmount } as Reward\r\n    }),\r\n  )\r\n\r\n  const unlocked = {\r\n    value: unlockedUSD,\r\n    amountByAddress: Object.values(info).reduce((acc, item) => {\r\n      const address = (item.token.isNative ? item.token.symbol : item.token.address) as string\r\n      return {\r\n        ...acc,\r\n        [address]: CurrencyAmount.fromRawAmount(item.token, item.vestableAmount.toString()),\r\n      }\r\n    }, {}),\r\n  }\r\n\r\n  const noVesting = Object.keys(rewardLockerAddressesWithVersion).every(\r\n    rewardLockerAddress => !schedulesByRewardLocker[rewardLockerAddress]?.length,\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <ConfirmVestingModal />\r\n      <VestingSummary\r\n        loading={loading}\r\n        totalHarvested={totalHarvested}\r\n        locked={locked}\r\n        unlocked={unlocked}\r\n        claimed={claimed}\r\n      />\r\n\r\n      <Text fontSize={16} fontWeight=\"500\" marginTop=\"24px\">\r\n        <Trans>Vesting Schedules</Trans>\r\n      </Text>\r\n\r\n      {noVesting ? (\r\n        loading ? (\r\n          <LocalLoader />\r\n        ) : (\r\n          <Text textAlign=\"center\" color={theme.subText} marginTop=\"24px\">\r\n            <Trans>No vesting schedule!</Trans>\r\n          </Text>\r\n        )\r\n      ) : (\r\n        <ScheduleGrid>\r\n          {Object.keys(rewardLockerAddressesWithVersion)\r\n            .filter(rewardLockerAddress => !!schedulesByRewardLocker[rewardLockerAddress]?.length)\r\n            .map((rewardLockerAddress, index) => (\r\n              <RewardLockerSchedules\r\n                key={rewardLockerAddress}\r\n                rewardLockerAddress={rewardLockerAddress}\r\n                schedules={schedulesByRewardLocker[rewardLockerAddress]}\r\n                rewardLockerVersion={rewardLockerAddressesWithVersion[rewardLockerAddress]}\r\n              />\r\n            ))}\r\n        </ScheduleGrid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Vesting\r\n","import { Token } from '@kyberswap/ks-sdk-core'\r\nimport { BigNumber } from 'ethers'\r\n\r\nimport { ZERO_ADDRESS } from 'constants/index'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { Schedule } from 'state/vesting/hooks'\r\nimport { calculateGasMargin } from 'utils'\r\nimport { fixedFormatting } from 'utils/formatBalance'\r\n\r\nimport VestingCard from './VestingCard'\r\n\r\nconst ScheduleCard = ({ schedules }: { schedules: Schedule[] }) => {\r\n  const endTime = schedules.reduce((max, schedule) => (max < schedule.endTime ? schedule.endTime : max), 0)\r\n  const currentTimestamp = Math.floor(+new Date() / 1000)\r\n  const remainTime = endTime - currentTimestamp\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const info = schedules.reduce<{\r\n    [tokenAddress: string]: {\r\n      vestableIndexes: number[]\r\n      vestableAmount: BigNumber\r\n      /* fullyIndexes: number[] */\r\n      /* fullyAmount: BigNumber */\r\n      totalAmount: BigNumber\r\n      unlockedAmount: BigNumber\r\n      vestedAmount: BigNumber\r\n      token: Token\r\n      tokenPrice: number\r\n    }\r\n  }>((result, schedule, index) => {\r\n    const address = (schedule.token.isNative ? ZERO_ADDRESS : schedule.token.address) as string\r\n\r\n    if (!result[address]) {\r\n      result[address] = {\r\n        vestableIndexes: [],\r\n        vestableAmount: BigNumber.from(0),\r\n        /* fullyIndexes: [], */\r\n        /* fullyAmount: BigNumber.from(0), */\r\n        totalAmount: BigNumber.from(0),\r\n        unlockedAmount: BigNumber.from(0),\r\n        vestedAmount: BigNumber.from(0),\r\n        token: schedule.token,\r\n        tokenPrice: schedule.tokenPrice,\r\n      }\r\n    }\r\n\r\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule.quantity))\r\n    result[address].vestedAmount = result[address].vestedAmount.add(BigNumber.from(schedule.vestedQuantity))\r\n    /**\r\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\r\n     */\r\n    const fullyVestedAlready = schedule.quantity.sub(schedule.vestedQuantity).isZero()\r\n    const isEnd = currentTimestamp > schedule.endTime\r\n\r\n    const timePeriod = BigNumber.from(schedule.endTime - schedule.startTime)\r\n\r\n    const unlockedAmount = isEnd\r\n      ? schedule.quantity\r\n      : schedule.quantity.mul(BigNumber.from(currentTimestamp).sub(BigNumber.from(schedule.startTime))).div(timePeriod)\r\n\r\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount)\r\n    const vestableAmount = unlockedAmount.sub(BigNumber.from(schedule.vestedQuantity)) // vestableAmount = unlock - vestedQuanitty\r\n\r\n    result[address].vestableAmount = result[address].vestableAmount.add(\r\n      vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount,\r\n    )\r\n\r\n    if (!fullyVestedAlready) {\r\n      result[address].vestableIndexes.push(schedule.index)\r\n    }\r\n\r\n    /* if (!fullyVestedAlready && isEnd) { */\r\n    /*   result[address].fullyIndexes.push(schedule.index) */\r\n    /*   result[address].fullyAmount = result[address].fullyAmount.add(schedule.quantity) */\r\n    /* } */\r\n\r\n    return result\r\n  }, {})\r\n\r\n  const addTransactionWithType = useTransactionAdder()\r\n\r\n  const handleClaimAll = async () => {\r\n    const contract = schedules?.[0].contract\r\n    if (!contract) return\r\n    let tokens = Object.keys(info)\r\n    let indices = tokens.map(key => info[key].vestableIndexes)\r\n\r\n    tokens = tokens.filter((_token, index) => !!indices[index].length)\r\n    indices = indices.filter(ind => !!ind.length)\r\n\r\n    const estimateGas = await contract.estimateGas.vestScheduleForMultipleTokensAtIndices(tokens, indices)\r\n    const tx = await contract.vestScheduleForMultipleTokensAtIndices(tokens, indices, {\r\n      gasLimit: calculateGasMargin(estimateGas),\r\n    })\r\n    if (tx) {\r\n      addTransactionWithType({ hash: tx.hash, type: TRANSACTION_TYPE.CLAIM, summary: 'all rewards' })\r\n      mixpanelHandler(MIXPANEL_TYPE.ELASTIC_ALL_REWARD_CLAIMED, {\r\n        reward_tokens_and_qty: Object.assign(\r\n          {},\r\n          ...Object.keys(info).map(k => {\r\n            return { [k]: fixedFormatting(info[k].vestableAmount, info[k].token.decimals) }\r\n          }),\r\n        ),\r\n      })\r\n    }\r\n  }\r\n\r\n  return <VestingCard info={info} endTime={endTime} remainTime={remainTime} onClaimAll={handleClaimAll} />\r\n}\r\n\r\nexport default ScheduleCard\r\n","import { CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { Text } from 'rebass'\r\n\r\nimport LocalLoader from 'components/LocalLoader'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePrommSchedules } from 'state/vesting/hooks'\r\n\r\nimport ScheduleCard from './ScheduleCard'\r\nimport VestingSummary from './VestingSummary'\r\nimport { ScheduleGrid } from './styleds'\r\n\r\nconst ProMMVesting = () => {\r\n  const theme = useTheme()\r\n  const { loading, schedulesByRewardLocker } = usePrommSchedules()\r\n\r\n  const totalHarvested: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\r\n    value: 0,\r\n    amountByAddress: {},\r\n  }\r\n  const locked: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\r\n    value: 0,\r\n    amountByAddress: {},\r\n  }\r\n  const unlocked: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\r\n    value: 0,\r\n    amountByAddress: {},\r\n  }\r\n  const claimed: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\r\n    value: 0,\r\n    amountByAddress: {},\r\n  }\r\n\r\n  const currentTimestamp = Math.floor(+new Date() / 1000)\r\n  Object.values(schedulesByRewardLocker).forEach(schedule => {\r\n    schedule.forEach(item => {\r\n      const address = (item.token.isNative ? item.token.symbol : item.token.address) as string\r\n      // total\r\n      const harvested = CurrencyAmount.fromRawAmount(item.token, item.quantity.toString())\r\n      const harvestedUsd = item.tokenPrice * parseFloat(harvested.toExact())\r\n      totalHarvested.value += harvestedUsd\r\n      if (!totalHarvested.amountByAddress[address]) totalHarvested.amountByAddress[address] = harvested\r\n      else totalHarvested.amountByAddress[address] = totalHarvested.amountByAddress[address].add(harvested)\r\n\r\n      // claimed\r\n      const vested = CurrencyAmount.fromRawAmount(item.token, item.vestedQuantity.toString())\r\n      const vestedUsd = item.tokenPrice * parseFloat(vested.toExact())\r\n      claimed.value += vestedUsd\r\n      if (!claimed.amountByAddress[address]) claimed.amountByAddress[address] = vested\r\n      else claimed.amountByAddress[address] = claimed.amountByAddress[address].add(vested)\r\n\r\n      const isEnd = currentTimestamp > item.endTime\r\n      const timePeriod = BigNumber.from(item.endTime - item.startTime)\r\n      const unlockedBigint = isEnd\r\n        ? item.quantity\r\n        : item.quantity.mul(BigNumber.from(currentTimestamp).sub(BigNumber.from(item.startTime)).div(timePeriod))\r\n      // unlocked\r\n      const vestableAmount = CurrencyAmount.fromRawAmount(\r\n        item.token,\r\n        unlockedBigint.sub(BigNumber.from(item.vestedQuantity)).toString(),\r\n      ) // vestableAmount = unlock - vestedQuanitty\r\n      const unlockedUsd = item.tokenPrice * parseFloat(vestableAmount.toExact())\r\n      unlocked.value += unlockedUsd\r\n      if (!unlocked.amountByAddress[address]) unlocked.amountByAddress[address] = vestableAmount\r\n      else unlocked.amountByAddress[address] = unlocked.amountByAddress[address].add(vestableAmount)\r\n\r\n      // locked = total - unlocked\r\n      const lockedAmount = CurrencyAmount.fromRawAmount(item.token, item.quantity.sub(unlockedBigint).toString())\r\n      locked.value += item.tokenPrice * parseFloat(lockedAmount.toExact())\r\n      if (!locked.amountByAddress[address]) locked.amountByAddress[address] = lockedAmount\r\n      else locked.amountByAddress[address] = locked.amountByAddress[address].add(lockedAmount)\r\n    })\r\n  })\r\n\r\n  const noVesting = Object.keys(schedulesByRewardLocker).every(\r\n    rewardLockerAddress => !schedulesByRewardLocker[rewardLockerAddress]?.length,\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <VestingSummary\r\n        loading={loading}\r\n        totalHarvested={totalHarvested}\r\n        locked={locked}\r\n        unlocked={unlocked}\r\n        claimed={claimed}\r\n      />\r\n\r\n      <Text fontSize={16} fontWeight=\"500\" marginTop=\"24px\">\r\n        <Trans>Vesting Schedules</Trans>\r\n      </Text>\r\n\r\n      {noVesting ? (\r\n        loading ? (\r\n          <LocalLoader />\r\n        ) : (\r\n          <Text textAlign=\"center\" color={theme.subText} marginTop=\"24px\">\r\n            <Trans>No vesting schedule!</Trans>\r\n          </Text>\r\n        )\r\n      ) : (\r\n        <ScheduleGrid>\r\n          {Object.keys(schedulesByRewardLocker).map(rewardLocker => {\r\n            if (schedulesByRewardLocker[rewardLocker].length)\r\n              return <ScheduleCard key={rewardLocker} schedules={schedulesByRewardLocker[rewardLocker]} />\r\n            return null\r\n          })}\r\n        </ScheduleGrid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProMMVesting\r\n","import { BigNumber } from 'ethers'\r\nimport { useCallback } from 'react'\r\n\r\nimport { CONTRACT_NOT_FOUND_MSG } from 'constants/messages'\r\nimport { useFairLaunchContract } from 'hooks/useContract'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { calculateGasMargin } from 'utils'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\nconst useFairLaunch = (address: string) => {\r\n  const addTransactionWithType = useTransactionAdder()\r\n  const fairLaunchContract = useFairLaunchContract(address) // withSigner\r\n\r\n  const getPoolLength = useCallback(async () => {\r\n    try {\r\n      const poolLength = await fairLaunchContract?.poolLength()\r\n\r\n      return poolLength\r\n    } catch (err) {\r\n      console.error(err)\r\n      return err\r\n    }\r\n  }, [fairLaunchContract])\r\n\r\n  const getPoolInfo = useCallback(\r\n    async (pid: number) => {\r\n      try {\r\n        const poolInfo = await fairLaunchContract?.getPoolInfo(pid)\r\n\r\n        return poolInfo\r\n      } catch (err) {\r\n        console.error(err)\r\n        return err\r\n      }\r\n    },\r\n    [fairLaunchContract],\r\n  )\r\n\r\n  const getRewardTokens = useCallback(async (): Promise<string[]> => {\r\n    try {\r\n      const rewardTokens = await fairLaunchContract?.getRewardTokens()\r\n\r\n      return rewardTokens\r\n    } catch (err) {\r\n      console.error(err)\r\n      return []\r\n    }\r\n  }, [fairLaunchContract])\r\n\r\n  // Deposit\r\n  const deposit = useCallback(\r\n    async (pid: number, amount: BigNumber, name: string, shouldHaverst = false) => {\r\n      if (!fairLaunchContract) {\r\n        throw new Error(CONTRACT_NOT_FOUND_MSG)\r\n      }\r\n\r\n      const estimateGas = await fairLaunchContract.estimateGas.deposit(pid, amount, shouldHaverst)\r\n      const tx = await fairLaunchContract.deposit(pid, amount, shouldHaverst, {\r\n        gasLimit: calculateGasMargin(estimateGas),\r\n      })\r\n      addTransactionWithType({\r\n        hash: tx.hash,\r\n        type: TRANSACTION_TYPE.STAKE,\r\n        summary: `${getFullDisplayBalance(amount)} ${name} Tokens`,\r\n      })\r\n\r\n      return tx.hash\r\n    },\r\n    [addTransactionWithType, fairLaunchContract],\r\n  )\r\n\r\n  // Withdraw\r\n  const withdraw = useCallback(\r\n    async (pid: number, amount: BigNumber, name: string) => {\r\n      if (!fairLaunchContract) {\r\n        throw new Error(CONTRACT_NOT_FOUND_MSG)\r\n      }\r\n\r\n      const estimateGas = await fairLaunchContract.estimateGas.withdraw(pid, amount)\r\n      const tx = await fairLaunchContract.withdraw(pid, amount, {\r\n        gasLimit: calculateGasMargin(estimateGas),\r\n      })\r\n      addTransactionWithType({\r\n        hash: tx.hash,\r\n        type: TRANSACTION_TYPE.UNSTAKE,\r\n        summary: `${getFullDisplayBalance(amount)} ${name} Tokens`,\r\n      })\r\n\r\n      return tx.hash\r\n    },\r\n    [addTransactionWithType, fairLaunchContract],\r\n  )\r\n\r\n  const harvest = useCallback(\r\n    async (pid: number, _name: string) => {\r\n      if (!fairLaunchContract) {\r\n        throw new Error(CONTRACT_NOT_FOUND_MSG)\r\n      }\r\n\r\n      const estimateGas = await fairLaunchContract.estimateGas.harvest(pid)\r\n      const tx = await fairLaunchContract.harvest(pid, {\r\n        gasLimit: calculateGasMargin(estimateGas),\r\n      })\r\n      addTransactionWithType({ hash: tx.hash, type: TRANSACTION_TYPE.HARVEST })\r\n\r\n      return tx.hash\r\n    },\r\n    [addTransactionWithType, fairLaunchContract],\r\n  )\r\n\r\n  const harvestMultiplePools = useCallback(\r\n    async (pids: number[]) => {\r\n      if (!fairLaunchContract) {\r\n        throw new Error(CONTRACT_NOT_FOUND_MSG)\r\n      }\r\n\r\n      const estimateGas = await fairLaunchContract.estimateGas.harvestMultiplePools(pids)\r\n      const tx = await fairLaunchContract.harvestMultiplePools(pids, {\r\n        gasLimit: calculateGasMargin(estimateGas),\r\n      })\r\n      addTransactionWithType({ hash: tx.hash, type: TRANSACTION_TYPE.HARVEST })\r\n\r\n      return tx.hash\r\n    },\r\n    [addTransactionWithType, fairLaunchContract],\r\n  )\r\n\r\n  return {\r\n    masterChefContract: fairLaunchContract,\r\n    getPoolLength,\r\n    getPoolInfo,\r\n    getRewardTokens,\r\n    deposit,\r\n    withdraw,\r\n    harvest,\r\n    harvestMultiplePools,\r\n  }\r\n}\r\n\r\nexport default useFairLaunch\r\n","const Harvest = ({ width, height, color }: { color?: string; width?: number; height?: number }) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || 16} height={height || 16} viewBox=\"0 0 16 16\">\r\n      <path\r\n        d=\"M10.5912 3.05122L8.23457 5.40789C8.10441 5.53804 8.10441 5.74907 8.23457 5.87922L10.1199 7.76456C10.2501 7.89471 10.4611 7.89471 10.5912 7.76456L12.9479 5.40789C13.0781 5.27773 13.0781 5.06671 12.9479 4.93655L11.0626 3.05122C10.9324 2.92106 10.7214 2.92106 10.5912 3.05122Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n      <path\r\n        d=\"M9.85967 2.84091C7.5575 0.834737 5.7628 0.607004 5.68003 0.597737C5.61138 0.590119 5.54206 0.604016 5.48165 0.637505C5.42124 0.670995 5.37273 0.722424 5.34282 0.784683C5.3129 0.846941 5.30307 0.916954 5.31468 0.985044C5.32628 1.05313 5.35875 1.11594 5.4076 1.16477L8.47173 4.22891L9.85967 2.84091Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n      <path\r\n        d=\"M15.4022 10.3203C15.3929 10.2375 15.1652 8.44301 13.1594 6.14111L11.7715 7.52908L14.8351 10.5927C14.884 10.6416 14.9468 10.6741 15.0149 10.6857C15.083 10.6973 15.153 10.6874 15.2152 10.6575C15.2775 10.6276 15.3289 10.5791 15.3624 10.5187C15.3959 10.4583 15.4098 10.389 15.4022 10.3203Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n      <path\r\n        d=\"M8.00024 6.58594L0.693332 13.8927C0.630821 13.9552 0.595703 14.04 0.595703 14.1284C0.595703 14.2168 0.630821 14.3016 0.693332 14.3641L1.63627 15.3068C1.69878 15.3693 1.78356 15.4044 1.87197 15.4044C1.96037 15.4044 2.04515 15.3693 2.10767 15.3068L9.41444 8.00014L8.00024 6.58594Z\"\r\n        fill={color || 'currentColor'}\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Harvest\r\n","import { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const ModalContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 24px 20px;\r\n  background-color: ${({ theme }) => theme.background};\r\n`\r\n\r\nexport const Title = styled(Text)<{ border?: boolean }>`\r\n  font-size: 20px;\r\n  line-height: 32px;\r\n  font-weight: 500;\r\n  border-bottom: 0.5px dashed ${({ theme, border }) => (border ? theme.subText : 'transparent')};\r\n`\r\n\r\nexport const TableHeader = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 18px 90px 1.5fr repeat(3, 1fr);\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  background: ${({ theme }) => theme.tableHeader};\r\n  gap: 16px;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.subText};\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    grid-template-columns: 18px 1fr 1fr;\r\n   `}\r\n`\r\n\r\nexport const TableRow = styled(TableHeader)`\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 0;\r\n  text-transform: none;\r\n  margin-top: 0;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n`\r\n\r\nexport const Select = styled.div`\r\n  cursor: pointer;\r\n  width: 180px;\r\n  border-radius: 4px;\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    width: 100%;\r\n    margin-top: 16px;\r\n  `}\r\n`\r\n\r\nexport const SelectMenu = styled.div`\r\n  position: absolute;\r\n  top: 40px;\r\n  left: 0;\r\n  width: 180px;\r\n  border-radius: 8px;\r\n  filter: drop-shadow(0px 4px 12px rgba(0, 0, 0, 0.36));\r\n  z-index: 10;\r\n  background: ${({ theme }) => theme.background};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    width: 100%;\r\n  `}\r\n`\r\n\r\nexport const SelectOption = styled.div`\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nexport const DropdownIcon = styled.div<{ rotate?: boolean }>`\r\n  transform: rotate(${({ rotate }) => (rotate ? '-180deg' : '0')});\r\n  height: 0;\r\n  border-left: 4px solid transparent;\r\n  border-right: 4px solid transparent;\r\n  border-top: 4px solid ${({ theme }) => theme.text};\r\n\r\n  transition: transform 300ms;\r\n  transform: rotate(${({ rotate }) => (rotate ? '-180deg' : '0')});\r\n`\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Trans } from '@lingui/macro'\r\nimport { Fragment, useRef, useState } from 'react'\r\nimport { X } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { ButtonEmpty, ButtonPrimary } from 'components/Button'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport HoverDropdown from 'components/HoverDropdown'\r\nimport Harvest from 'components/Icons/Harvest'\r\nimport Modal from 'components/Modal'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { Reward } from 'state/farms/types'\r\nimport { formattedNum } from 'utils'\r\nimport { useFarmRewardsUSD } from 'utils/dmm'\r\nimport { fixedFormatting, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nimport { ModalContentWrapper } from './ElasticFarmModals/styled'\r\nimport { RewardBalanceWrapper } from './styleds'\r\n\r\nconst HarvestAll = ({ totalRewards, onHarvestAll }: { totalRewards: Reward[]; onHarvestAll?: () => void }) => {\r\n  const theme = useTheme()\r\n  const ref = useRef<HTMLDivElement>()\r\n  const [open, setOpen] = useState<boolean>(false)\r\n  const totalRewardsUSD = useFarmRewardsUSD(totalRewards)\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n  const canHarvestAll = totalRewards.some(reward => reward?.amount.gt(BigNumber.from('0')))\r\n\r\n  const toggleRewardDetail = () => {\r\n    if (canHarvestAll) {\r\n      setOpen(prev => !prev)\r\n    }\r\n  }\r\n  useOnClickOutside(ref, open ? toggleRewardDetail : undefined)\r\n\r\n  const upToSmall = useMedia('(max-width: 768px)')\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={show} onDismiss={() => setShow(false)}>\r\n        <ModalContentWrapper>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" marginBottom=\"1rem\">\r\n            <Text fontSize=\"20px\" fontWeight=\"500\">\r\n              Harvest All\r\n            </Text>\r\n            <ButtonEmpty onClick={() => setShow(false)} width=\"36px\" height=\"36px\" padding=\"0\">\r\n              <X color={theme.text} />\r\n            </ButtonEmpty>\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" marginTop=\"1rem\">\r\n            <Text color={theme.subText} fontSize=\"0.75rem\">\r\n              <Trans>My Rewards</Trans>\r\n            </Text>\r\n            <Text fontSize=\"0.75rem\" fontWeight=\"500\">\r\n              {formattedNum(totalRewardsUSD.toString(), true)}\r\n            </Text>\r\n          </Flex>\r\n\r\n          <RewardBalanceWrapper>\r\n            {totalRewards.map((reward, index) => {\r\n              return (\r\n                <Fragment key={reward.token.wrapped.address}>\r\n                  <Flex alignItems=\"center\" fontSize=\"12px\" sx={{ gap: '4px' }}>\r\n                    {chainId && reward.token.wrapped.address && <CurrencyLogo currency={reward.token} size=\"16px\" />}\r\n                    {getFullDisplayBalance(reward.amount, reward.token.decimals)}\r\n                  </Flex>\r\n                  {index !== totalRewards.length - 1 && <Text color={theme.subText}>|</Text>}\r\n                </Fragment>\r\n              )\r\n            })}\r\n          </RewardBalanceWrapper>\r\n\r\n          <ButtonPrimary\r\n            margin=\"8px 0 0\"\r\n            onClick={() => {\r\n              onHarvestAll && onHarvestAll()\r\n              setShow(false)\r\n            }}\r\n          >\r\n            Harvest\r\n          </ButtonPrimary>\r\n        </ModalContentWrapper>\r\n      </Modal>\r\n\r\n      <Flex\r\n        alignItems=\"center\"\r\n        sx={{ gap: '24px' }}\r\n        justifyContent={!upToSmall ? 'flex-start' : 'space-between'}\r\n        width={!upToSmall ? undefined : '100%'}\r\n      >\r\n        <div>\r\n          <Text fontSize=\"12px\" color={theme.subText} width=\"max-content\">\r\n            <Trans>My Total Rewards</Trans>\r\n          </Text>\r\n\r\n          <HoverDropdown\r\n            padding=\"4px 0\"\r\n            content={formatDollarAmount(totalRewardsUSD)}\r\n            dropdownContent={\r\n              totalRewards.some(reward => reward?.amount?.gt(0))\r\n                ? totalRewards.map((reward, index) => {\r\n                    if (!reward || !reward.amount || reward.amount.lte(0)) {\r\n                      return null\r\n                    }\r\n\r\n                    return (\r\n                      <Flex alignItems=\"center\" key={reward.token.address} marginTop={index === 0 ? 0 : '8px'}>\r\n                        <CurrencyLogo currency={reward.token} size=\"16px\" />\r\n                        <Text marginLeft=\"4px\" fontSize=\"12px\">\r\n                          {fixedFormatting(reward.amount, reward.token.decimals)} {reward.token.symbol}\r\n                        </Text>\r\n                      </Flex>\r\n                    )\r\n                  })\r\n                : ''\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <ButtonPrimary\r\n          width=\"fit-content\"\r\n          onClick={() => setShow(true)}\r\n          disabled={!canHarvestAll}\r\n          padding=\"10px 12px\"\r\n          height=\"fit-content\"\r\n        >\r\n          <Harvest />\r\n          <Text marginLeft=\"4px\">\r\n            <Trans>Harvest All</Trans>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HarvestAll\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useBlockNumber } from 'state/application/hooks'\r\n\r\nimport { useFairLaunchContract } from './useContract'\r\n\r\ninterface BalanceProps {\r\n  value: BigNumber\r\n  decimals: number\r\n}\r\n\r\nconst useStakedBalance = (contractAddress: string, pid: number, decimals = 18) => {\r\n  // SLP is usually 18, KMP is 6\r\n  const [balance, setBalance] = useState<BalanceProps>({ value: BigNumber.from(0), decimals: 18 })\r\n  const { account } = useActiveWeb3React()\r\n  const currentBlockNumber = useBlockNumber()\r\n  const fairLaunchContract = useFairLaunchContract(contractAddress)\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const getStaked = async (pid: number, owner: string | null | undefined): Promise<BalanceProps> => {\r\n      try {\r\n        const { amount } = await fairLaunchContract?.getUserInfo(pid, owner)\r\n        return { value: BigNumber.from(amount), decimals: decimals }\r\n      } catch (e) {\r\n        return { value: BigNumber.from(0), decimals: decimals }\r\n      }\r\n    }\r\n    const balance = await getStaked(pid, account)\r\n    setBalance(balance)\r\n  }, [account, decimals, fairLaunchContract, pid])\r\n\r\n  useEffect(() => {\r\n    if (account && fairLaunchContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, setBalance, currentBlockNumber, fetchBalance, fairLaunchContract])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useStakedBalance\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { MaxUint256 } from '@ethersproject/constants'\r\nimport { Fraction, Token, TokenAmount } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { ethers } from 'ethers'\r\nimport JSBI from 'jsbi'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Clock, Minus, Plus, Share2, X } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { ButtonEmpty, ButtonLight, ButtonOutlined, ButtonPrimary } from 'components/Button'\r\nimport CopyHelper from 'components/Copy'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Divider from 'components/Divider'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { MoneyBag } from 'components/Icons'\r\nimport Harvest from 'components/Icons/Harvest'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport Modal from 'components/Modal'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { Dots } from 'components/swap/styleds'\r\nimport {\r\n  DMM_ANALYTICS_URL,\r\n  MAX_ALLOW_APY,\r\n  OUTSIDE_FAIRLAUNCH_ADDRESSES,\r\n  TOBE_EXTENDED_FARMING_POOLS,\r\n} from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\r\nimport useFairLaunch from 'hooks/useFairLaunch'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useStakedBalance from 'hooks/useStakedBalance'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useWalletModalToggle } from 'state/application/hooks'\r\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setYieldPoolsError } from 'state/farms/actions'\r\nimport { Farm, Reward } from 'state/farms/types'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { ExternalLink } from 'theme'\r\nimport { formattedNum, isAddressString, shortenAddress } from 'utils'\r\nimport { currencyIdFromAddress } from 'utils/currencyId'\r\nimport { getTradingFeeAPR, useFarmApr, useFarmRewards, useFarmRewardsUSD } from 'utils/dmm'\r\nimport { formatTokenBalance, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getFormattedTimeFromSecond } from 'utils/formatTime'\r\n\r\nimport { ModalContentWrapper } from './ElasticFarmModals/styled'\r\nimport { APRTooltipContent } from './FarmingPoolAPRCell'\r\nimport { ActionButton, DataText, GetLP, RewardBalanceWrapper, StyledItemCard, TableRow } from './styleds'\r\n\r\nconst fixedFormatting = (value: BigNumber, decimals: number) => {\r\n  const fraction = new Fraction(value.toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals)))\r\n\r\n  if (fraction.equalTo(JSBI.BigInt(0))) {\r\n    return '0'\r\n  }\r\n\r\n  return fraction.toFixed(18).replace(/\\.?0+$/, '')\r\n}\r\n\r\ninterface ListItemProps {\r\n  farm: Farm\r\n  oddRow?: boolean\r\n  setSharedPoolAddress: (addr: string) => void\r\n}\r\n\r\nconst ListItem = ({ farm, setSharedPoolAddress }: ListItemProps) => {\r\n  const { account, chainId, isEVM } = useActiveWeb3React()\r\n  const toggleWalletModal = useWalletModalToggle()\r\n  const currentTimestamp = Math.floor(Date.now() / 1000)\r\n\r\n  const { type = 'active' } = useParsedQueryString<{ type: string }>()\r\n  const breakpoint = useMedia('(min-width: 992px)')\r\n  const dispatch = useAppDispatch()\r\n\r\n  const currency0 = useToken(farm.token0?.id) as Token\r\n  const currency1 = useToken(farm.token1?.id) as Token\r\n\r\n  const poolAddressChecksum = isAddressString(chainId, farm.id)\r\n  const { value: userTokenBalance, decimals: lpTokenDecimals } = useTokenBalance(poolAddressChecksum)\r\n\r\n  const outsideFarm = OUTSIDE_FAIRLAUNCH_ADDRESSES[farm.fairLaunchAddress]\r\n\r\n  const userStakedBalance = farm.userData?.stakedBalance\r\n    ? BigNumber.from(farm.userData?.stakedBalance)\r\n    : BigNumber.from(0)\r\n\r\n  const farmRewards = useFarmRewards([farm])\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new Fraction(\r\n    farm.totalStake.toString(),\r\n    JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\r\n  ).divide(\r\n    new Fraction(\r\n      ethers.utils.parseUnits(farm.totalSupply, lpTokenDecimals).toString(),\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\r\n    ),\r\n  )\r\n\r\n  // Ratio in % of user's LP tokens balance, vs the total number in circulation\r\n  const lpUserLPBalanceRatio = new Fraction(\r\n    userTokenBalance.toString(),\r\n    JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\r\n  ).divide(\r\n    new Fraction(\r\n      ethers.utils.parseUnits(farm.totalSupply, lpTokenDecimals).toString(),\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\r\n    ),\r\n  )\r\n\r\n  const userToken0Balance = parseFloat(lpUserLPBalanceRatio.toSignificant(6)) * parseFloat(farm.reserve0)\r\n  const userToken1Balance = parseFloat(lpUserLPBalanceRatio.toSignificant(6)) * parseFloat(farm.reserve1)\r\n\r\n  // Ratio in % of LP tokens that user staked, vs the total number in circulation\r\n  const lpUserStakedTokenRatio = new Fraction(\r\n    userStakedBalance.toString(),\r\n    JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\r\n  ).divide(\r\n    new Fraction(\r\n      ethers.utils.parseUnits(farm.totalSupply, lpTokenDecimals).toString(),\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\r\n    ),\r\n  )\r\n\r\n  const userStakedToken0Balance = parseFloat(lpUserStakedTokenRatio.toSignificant(6)) * parseFloat(farm.reserve0)\r\n  const userStakedToken1Balance = parseFloat(lpUserStakedTokenRatio.toSignificant(6)) * parseFloat(farm.reserve1)\r\n\r\n  const userLPBalanceUSD = parseFloat(lpUserLPBalanceRatio.toSignificant(6)) * parseFloat(farm.reserveUSD)\r\n  const userStakedBalanceUSD = parseFloat(lpUserStakedTokenRatio.toSignificant(6)) * parseFloat(farm.reserveUSD)\r\n\r\n  const liquidity = parseFloat(lpTokenRatio.toSignificant(6)) * parseFloat(farm.reserveUSD)\r\n\r\n  const farmAPR = useFarmApr(farm, liquidity.toString())\r\n\r\n  const tradingFee = farm?.oneDayFeeUSD ? farm?.oneDayFeeUSD : farm?.oneDayFeeUntracked\r\n\r\n  const tradingFeeAPR = getTradingFeeAPR(farm?.reserveUSD, tradingFee)\r\n\r\n  let apr = farmAPR\r\n  if (tradingFeeAPR < MAX_ALLOW_APY) apr += tradingFeeAPR\r\n\r\n  const amp = farm.amp / 10000\r\n\r\n  const pairSymbol = `${farm.token0.symbol}-${farm.token1.symbol} LP`\r\n  const [depositValue, setDepositValue] = useState('')\r\n  const [withdrawValue, setWithdrawValue] = useState('')\r\n  const pairAddressChecksum = isAddressString(chainId, farm.id)\r\n  const balance = useTokenBalance(pairAddressChecksum)\r\n  const staked = useStakedBalance(farm.fairLaunchAddress, farm.pid)\r\n  const rewardUSD = useFarmRewardsUSD(farmRewards)\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const amountToApprove = useMemo(\r\n    () =>\r\n      TokenAmount.fromRawAmount(\r\n        new Token(chainId, pairAddressChecksum, balance.decimals, pairSymbol, ''),\r\n        MaxUint256.toString(),\r\n      ),\r\n    [balance.decimals, chainId, pairAddressChecksum, pairSymbol],\r\n  )\r\n  const [approvalState, approve] = useApproveCallback(amountToApprove, isEVM ? farm.fairLaunchAddress : undefined)\r\n\r\n  let isStakeInvalidAmount\r\n\r\n  try {\r\n    isStakeInvalidAmount =\r\n      depositValue === '' ||\r\n      parseFloat(depositValue) === 0 ||\r\n      ethers.utils.parseUnits(depositValue || '0', balance.decimals).gt(balance.value) // This causes error if number of decimals > 18\r\n  } catch (err) {\r\n    isStakeInvalidAmount = true\r\n  }\r\n\r\n  const isStakeDisabled = isStakeInvalidAmount\r\n\r\n  let isUnstakeInvalidAmount\r\n\r\n  try {\r\n    isUnstakeInvalidAmount =\r\n      withdrawValue === '' ||\r\n      parseFloat(withdrawValue) === 0 ||\r\n      ethers.utils.parseUnits(withdrawValue || '0', staked.decimals).gt(staked.value) // This causes error if number of decimals > 18\r\n  } catch (err) {\r\n    isUnstakeInvalidAmount = true\r\n  }\r\n\r\n  const isUnstakeDisabled = isUnstakeInvalidAmount\r\n\r\n  const canHarvest = (rewards: Reward[]): boolean => {\r\n    return rewards.some(reward => reward?.amount.gt(BigNumber.from('0')))\r\n  }\r\n\r\n  const isHarvestDisabled = !canHarvest(farmRewards)\r\n\r\n  const { deposit, withdraw, harvest } = useFairLaunch(farm.fairLaunchAddress)\r\n\r\n  const handleStake = async (pid: number) => {\r\n    if (!chainId || !account) {\r\n      return\r\n    }\r\n\r\n    dispatch(setShowConfirm(true))\r\n    dispatch(setAttemptingTxn(true))\r\n    dispatch(setTxHash(''))\r\n\r\n    try {\r\n      const txHash = await deposit(pid, ethers.utils.parseUnits(depositValue, balance.decimals), pairSymbol, false)\r\n      dispatch(setTxHash(txHash))\r\n    } catch (err) {\r\n      console.error(err)\r\n      dispatch(setYieldPoolsError(err as Error))\r\n    }\r\n\r\n    dispatch(setAttemptingTxn(false))\r\n  }\r\n\r\n  const handleUnstake = async (pid: number) => {\r\n    if (!chainId || !account) {\r\n      return\r\n    }\r\n\r\n    dispatch(setShowConfirm(true))\r\n    dispatch(setAttemptingTxn(true))\r\n    dispatch(setTxHash(''))\r\n\r\n    try {\r\n      const txHash = await withdraw(pid, ethers.utils.parseUnits(withdrawValue, staked.decimals), pairSymbol)\r\n      dispatch(setTxHash(txHash))\r\n    } catch (err) {\r\n      console.error(err)\r\n      dispatch(setYieldPoolsError(err as Error))\r\n    }\r\n\r\n    dispatch(setAttemptingTxn(false))\r\n  }\r\n\r\n  const handleHarvest = async (pid: number) => {\r\n    if (!chainId || !account) {\r\n      return\r\n    }\r\n\r\n    dispatch(setShowConfirm(true))\r\n    dispatch(setAttemptingTxn(true))\r\n    dispatch(setTxHash(''))\r\n\r\n    try {\r\n      const txHash = await harvest(pid, pairSymbol)\r\n      if (txHash) {\r\n        mixpanelHandler(MIXPANEL_TYPE.INDIVIDUAL_REWARD_HARVESTED, {\r\n          reward_tokens_and_amounts: JSON.stringify(\r\n            farmRewards &&\r\n              Object.assign(\r\n                {},\r\n                ...farmRewards.map(\r\n                  reward =>\r\n                    reward?.token?.symbol && {\r\n                      [reward.token.symbol]: getFullDisplayBalance(reward.amount, reward.token.decimals),\r\n                    },\r\n                ),\r\n              ),\r\n          ),\r\n        })\r\n      }\r\n      dispatch(setTxHash(txHash))\r\n    } catch (err) {\r\n      console.error(err)\r\n      dispatch(setYieldPoolsError(err as Error))\r\n    }\r\n\r\n    dispatch(setAttemptingTxn(false))\r\n  }\r\n\r\n  const theme = useTheme()\r\n\r\n  const now = +new Date() / 1000\r\n  const toBeExtendTime = TOBE_EXTENDED_FARMING_POOLS[isAddressString(chainId, farm.id)]\r\n  // only show if it will be ended less than 2 day\r\n  const tobeExtended = toBeExtendTime && farm.endTime - now < 172800 && farm.endTime < toBeExtendTime\r\n\r\n  const [modalType, setModalType] = useState<'stake' | 'unstake' | 'harvest' | null>(null)\r\n  const modalTitle = () => {\r\n    switch (modalType) {\r\n      case 'stake':\r\n        return <Trans>Stake</Trans>\r\n      case 'unstake':\r\n        return <Trans>Unstake</Trans>\r\n\r\n      default:\r\n        return <Trans>Harvest</Trans>\r\n    }\r\n  }\r\n\r\n  const usd = () => {\r\n    switch (modalType) {\r\n      case 'stake':\r\n        return formattedNum(userLPBalanceUSD.toString(), true)\r\n      case 'unstake':\r\n        return formattedNum(userStakedBalanceUSD.toString(), true)\r\n      default:\r\n        return formattedNum(rewardUSD.toString(), true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={!!modalType} onDismiss={() => setModalType(null)}>\r\n        <ModalContentWrapper>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" marginBottom=\"1rem\">\r\n            <Flex>\r\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={24} />\r\n              <Text fontSize=\"20px\" fontWeight=\"500\">\r\n                {modalTitle()}\r\n              </Text>\r\n            </Flex>\r\n            <ButtonEmpty onClick={() => setModalType(null)} width=\"36px\" height=\"36px\" padding=\"0\">\r\n              <X color={theme.text} />\r\n            </ButtonEmpty>\r\n          </Flex>\r\n\r\n          {modalType !== 'harvest' && <Divider />}\r\n\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" marginTop=\"1rem\">\r\n            <Text color={theme.subText} fontSize=\"0.75rem\">\r\n              {modalType === 'harvest' ? <Trans>My Rewards</Trans> : <Trans>Available Balance</Trans>}\r\n            </Text>\r\n            <Text fontSize=\"0.75rem\" fontWeight=\"500\">\r\n              {usd()}\r\n            </Text>\r\n          </Flex>\r\n\r\n          <RewardBalanceWrapper>\r\n            {modalType === 'harvest' &&\r\n              farmRewards.map((reward, index) => {\r\n                return (\r\n                  <React.Fragment key={reward.token.wrapped.address}>\r\n                    <Flex alignItems=\"center\" fontSize=\"12px\" sx={{ gap: '4px' }}>\r\n                      {chainId && reward.token.wrapped.address && <CurrencyLogo currency={reward.token} size=\"16px\" />}\r\n                      {getFullDisplayBalance(reward.amount, reward.token.decimals)}\r\n                    </Flex>\r\n                    {index !== farmRewards.length - 1 && <Text color={theme.subText}>|</Text>}\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n\r\n            {modalType && ['stake', 'unstake'].includes(modalType) && (\r\n              <>\r\n                <Flex alignItems=\"center\" fontSize=\"12px\" sx={{ gap: '4px' }}>\r\n                  <CurrencyLogo currency={currency0} size=\"16px\" />\r\n                  <Text textAlign=\"right\" fontSize=\"0.75rem\" color={theme.subText}>\r\n                    {formatTokenBalance(modalType === 'stake' ? userToken0Balance : userStakedToken0Balance)}\r\n                  </Text>\r\n                </Flex>\r\n                <Text color={theme.subText}>|</Text>\r\n\r\n                <Flex alignItems=\"center\" fontSize=\"12px\" sx={{ gap: '4px' }}>\r\n                  <CurrencyLogo currency={currency1} size=\"16px\" />\r\n                  <Text textAlign=\"right\" fontSize=\"0.75rem\" color={theme.subText}>\r\n                    {formatTokenBalance(modalType === 'stake' ? userToken1Balance : userStakedToken1Balance)}\r\n                  </Text>\r\n                </Flex>\r\n              </>\r\n            )}\r\n          </RewardBalanceWrapper>\r\n\r\n          {modalType !== 'harvest' && <Divider />}\r\n\r\n          {modalType === 'harvest' ? (\r\n            <ButtonPrimary\r\n              margin=\"8px 0 0\"\r\n              onClick={() => {\r\n                handleHarvest(farm.pid)\r\n                setModalType(null)\r\n              }}\r\n            >\r\n              Harvest\r\n            </ButtonPrimary>\r\n          ) : (\r\n            <>\r\n              <Flex marginTop=\"20px\">\r\n                {!account ? (\r\n                  <ButtonLight onClick={toggleWalletModal}>\r\n                    <Trans>Connect Wallet</Trans>\r\n                  </ButtonLight>\r\n                ) : (\r\n                  approvalState === ApprovalState.UNKNOWN && <Dots></Dots>\r\n                )}\r\n                {(approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING) && (\r\n                  <ButtonPrimary\r\n                    color=\"blue\"\r\n                    disabled={approvalState === ApprovalState.PENDING}\r\n                    onClick={approve}\r\n                    padding=\"12px\"\r\n                  >\r\n                    {approvalState === ApprovalState.PENDING ? (\r\n                      <Dots>\r\n                        <Trans>Approving </Trans>\r\n                      </Dots>\r\n                    ) : (\r\n                      <Trans>Approve</Trans>\r\n                    )}\r\n                  </ButtonPrimary>\r\n                )}\r\n                {approvalState === ApprovalState.APPROVED && chainId && (\r\n                  <>\r\n                    {modalType === 'stake' ? (\r\n                      <CurrencyInputPanel\r\n                        value={depositValue}\r\n                        onUserInput={value => {\r\n                          setDepositValue(value)\r\n                        }}\r\n                        onMax={() => {\r\n                          setDepositValue(fixedFormatting(balance.value, balance.decimals))\r\n                        }}\r\n                        onHalf={() => {\r\n                          setDepositValue(fixedFormatting(balance.value.div(2), balance.decimals))\r\n                        }}\r\n                        currency={new Token(chainId, farm.id, balance.decimals, `${pairSymbol}`, `${pairSymbol}`)}\r\n                        id=\"stake-lp-input\"\r\n                        disableCurrencySelect\r\n                        positionMax=\"top\"\r\n                        hideLogo={true}\r\n                        fontSize=\"14px\"\r\n                        customCurrencySelect={\r\n                          <ButtonPrimary\r\n                            disabled={isStakeDisabled}\r\n                            padding=\"8px 12px\"\r\n                            width=\"max-content\"\r\n                            style={{ minWidth: '80px' }}\r\n                            onClick={() => handleStake(farm.pid)}\r\n                          >\r\n                            {depositValue && isStakeInvalidAmount ? 'Invalid Amount' : 'Stake'}\r\n                          </ButtonPrimary>\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <CurrencyInputPanel\r\n                        value={withdrawValue}\r\n                        onUserInput={value => {\r\n                          setWithdrawValue(value)\r\n                        }}\r\n                        onMax={() => {\r\n                          setWithdrawValue(fixedFormatting(staked.value, staked.decimals))\r\n                        }}\r\n                        onHalf={() => {\r\n                          setWithdrawValue(fixedFormatting(staked.value.div(2), staked.decimals))\r\n                        }}\r\n                        currency={new Token(chainId, farm.id, balance.decimals, `${pairSymbol}`, `${pairSymbol}`)}\r\n                        id=\"unstake-lp-input\"\r\n                        disableCurrencySelect\r\n                        customBalanceText={`${fixedFormatting(staked.value, staked.decimals)}`}\r\n                        positionMax=\"top\"\r\n                        hideLogo={true}\r\n                        fontSize=\"14px\"\r\n                        customCurrencySelect={\r\n                          <ButtonPrimary\r\n                            disabled={isUnstakeDisabled}\r\n                            padding=\"8px 12px\"\r\n                            width=\"max-content\"\r\n                            style={{ minWidth: '80px' }}\r\n                            onClick={() => handleUnstake(farm.pid)}\r\n                          >\r\n                            {withdrawValue && isUnstakeInvalidAmount ? 'Invalid Amount' : 'Unstake'}\r\n                          </ButtonPrimary>\r\n                        }\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Flex>\r\n              <Flex justifyContent=\"space-between\" sx={{ gap: '8px' }} alignItems=\"center\" marginTop=\"20px\">\r\n                <ExternalLink\r\n                  href={outsideFarm ? outsideFarm.poolInfoLink : `${DMM_ANALYTICS_URL[chainId]}/pool/${farm.id}`}\r\n                >\r\n                  <GetLP>\r\n                    <Trans>Get pool {outsideFarm ? `(${outsideFarm.name})` : ''} info</Trans> ↗\r\n                  </GetLP>\r\n                </ExternalLink>\r\n                {outsideFarm ? (\r\n                  <ExternalLink href={outsideFarm.getLPTokenLink}>\r\n                    <GetLP>\r\n                      <Trans>\r\n                        Get {farm.token0?.symbol}-{farm.token1?.symbol} {outsideFarm ? `(${outsideFarm.name})` : ''} LP\r\n                        ↗\r\n                      </Trans>\r\n                    </GetLP>\r\n                  </ExternalLink>\r\n                ) : (\r\n                  <Link\r\n                    to={`/add/${currencyIdFromAddress(farm.token0?.id, chainId)}/${currencyIdFromAddress(\r\n                      farm.token1?.id,\r\n                      chainId,\r\n                    )}/${farm.id}`}\r\n                    style={{ textDecoration: 'none' }}\r\n                  >\r\n                    <GetLP style={{ textAlign: 'right' }}>\r\n                      <Trans>\r\n                        Get {farm.token0?.symbol}-{farm.token1?.symbol} LP ↗\r\n                      </Trans>\r\n                    </GetLP>\r\n                  </Link>\r\n                )}\r\n              </Flex>\r\n            </>\r\n          )}\r\n        </ModalContentWrapper>\r\n      </Modal>\r\n\r\n      {breakpoint ? (\r\n        <>\r\n          <TableRow>\r\n            <DataText grid-area=\"pools\">\r\n              <div>\r\n                <Flex alignItems=\"center\">\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={16} margin={true} />\r\n                  <Link\r\n                    to={`/add/${currencyIdFromAddress(farm.token0?.id, chainId)}/${currencyIdFromAddress(\r\n                      farm.token1?.id,\r\n                      chainId,\r\n                    )}/${farm.id}`}\r\n                    style={{ textDecoration: 'none' }}\r\n                  >\r\n                    {farm.token0?.symbol} - {farm.token1?.symbol}\r\n                  </Link>\r\n\r\n                  {(tobeExtended || farm.startTime > currentTimestamp) && (\r\n                    <MouseoverTooltip\r\n                      text={tobeExtended ? t`To be extended` : farm.time}\r\n                      width=\"fit-content\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <Clock size={14} style={{ marginLeft: '6px' }} />\r\n                    </MouseoverTooltip>\r\n                  )}\r\n\r\n                  <Flex\r\n                    onClick={() => {\r\n                      setSharedPoolAddress(farm.id)\r\n                    }}\r\n                    sx={{\r\n                      marginLeft: '8px',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    role=\"button\"\r\n                  >\r\n                    <Share2 size=\"14px\" color={theme.subText} />\r\n                  </Flex>\r\n                </Flex>\r\n                <Text marginLeft=\"36px\" marginTop=\"4px\" color={theme.subText} fontSize={12}>\r\n                  AMP = {amp}\r\n                </Text>\r\n              </div>\r\n            </DataText>\r\n            <DataText grid-area=\"liq\">{formattedNum(liquidity.toString(), true)}</DataText>\r\n            <DataText\r\n              grid-area=\"apy\"\r\n              align=\"right\"\r\n              style={{\r\n                color: theme.apr,\r\n              }}\r\n            >\r\n              <Flex\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  gap: '4px',\r\n                }}\r\n              >\r\n                {apr.toFixed(2)}%\r\n                <Flex\r\n                  sx={{\r\n                    width: '16px',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  {apr !== 0 && (\r\n                    <MouseoverTooltip\r\n                      width=\"fit-content\"\r\n                      placement=\"right\"\r\n                      text={\r\n                        <APRTooltipContent\r\n                          farmAPR={farmAPR}\r\n                          poolAPR={tradingFeeAPR < MAX_ALLOW_APY ? tradingFeeAPR : 0}\r\n                        />\r\n                      }\r\n                    >\r\n                      <MoneyBag size={16} color={theme.apr} />\r\n                    </MouseoverTooltip>\r\n                  )}\r\n                </Flex>\r\n              </Flex>\r\n            </DataText>\r\n            <DataText grid-area=\"vesting_duration\" align=\"right\">\r\n              {getFormattedTimeFromSecond(farm.vestingDuration, true)}\r\n            </DataText>\r\n\r\n            <DataText grid-area=\"staked_balance\" align=\"right\">\r\n              {formattedNum(userStakedBalanceUSD.toString(), true)}\r\n            </DataText>\r\n\r\n            <DataText\r\n              grid-area=\"reward\"\r\n              align=\"right\"\r\n              style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}\r\n            >\r\n              {farmRewards.map(reward => {\r\n                return (\r\n                  <div key={reward.token.wrapped.address} style={{ marginTop: '2px' }}>\r\n                    <Flex alignItems=\"center\">\r\n                      {getFullDisplayBalance(reward.amount, reward.token.decimals)}\r\n                      {chainId && reward.token.wrapped.address && (\r\n                        <CurrencyLogo currency={reward.token} size=\"16px\" style={{ marginLeft: '3px' }} />\r\n                      )}\r\n                    </Flex>\r\n                  </div>\r\n                )\r\n              })}\r\n            </DataText>\r\n\r\n            <Flex grid-area=\"action\" justifyContent=\"flex-end\" sx={{ gap: '4px' }}>\r\n              <ActionButton\r\n                disabled={type === 'ended'}\r\n                onClick={() => {\r\n                  setModalType('stake')\r\n                }}\r\n              >\r\n                <MouseoverTooltip text={t`Stake`} placement=\"top\" width=\"fit-content\">\r\n                  <Plus color={type !== 'ended' ? theme.primary : theme.subText} size={16} />\r\n                </MouseoverTooltip>\r\n              </ActionButton>\r\n\r\n              <ActionButton\r\n                backgroundColor={theme.subText + '33'}\r\n                onClick={() => {\r\n                  setModalType('unstake')\r\n                }}\r\n              >\r\n                <MouseoverTooltip text={t`Unstake`} placement=\"top\" width=\"fit-content\">\r\n                  <Minus color={theme.subText} size={16} />\r\n                </MouseoverTooltip>\r\n              </ActionButton>\r\n\r\n              <ActionButton\r\n                backgroundColor={theme.subText + '33'}\r\n                disabled={isHarvestDisabled}\r\n                onClick={() => {\r\n                  setModalType('harvest')\r\n                }}\r\n              >\r\n                <MouseoverTooltip text={t`Harvest`} placement=\"top\" width=\"fit-content\">\r\n                  <Harvest color={theme.subText} />\r\n                </MouseoverTooltip>\r\n              </ActionButton>\r\n            </Flex>\r\n          </TableRow>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <StyledItemCard>\r\n            <Flex alignItems=\"center\">\r\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} margin={true} />\r\n              <Link\r\n                to={`/add/${currencyIdFromAddress(farm.token0?.id, chainId)}/${currencyIdFromAddress(\r\n                  farm.token1?.id,\r\n                  chainId,\r\n                )}/${farm.id}`}\r\n              >\r\n                <Text as=\"span\" fontSize={16} fontWeight={500}>\r\n                  {farm.token0?.symbol} - {farm.token1?.symbol}\r\n                </Text>\r\n              </Link>\r\n\r\n              {(tobeExtended || farm.startTime > currentTimestamp) && (\r\n                <MouseoverTooltip\r\n                  text={tobeExtended ? t`To be extended` : farm.time}\r\n                  width=\"fit-content\"\r\n                  placement=\"top\"\r\n                >\r\n                  <Clock size={14} style={{ marginLeft: '6px' }} />\r\n                </MouseoverTooltip>\r\n              )}\r\n            </Flex>\r\n\r\n            <Flex marginTop=\"8px\" marginBottom=\"16px\" fontSize={12} color={theme.subText}>\r\n              AMP = {amp} | {shortenAddress(chainId, farm.id)} <CopyHelper toCopy={farm.id} />\r\n            </Flex>\r\n\r\n            <Divider />\r\n\r\n            <Flex justifyContent=\"space-between\" fontSize={12} marginTop=\"16px\">\r\n              <Text color={theme.subText}>\r\n                <Trans>Staked TVL</Trans>\r\n              </Text>\r\n\r\n              <Text fontWeight=\"500\">{formattedNum(liquidity.toString(), true)}</Text>\r\n            </Flex>\r\n\r\n            {/* <Flex justifyContent=\"space-between\" fontSize={12} marginTop=\"12px\">\r\n              <Text color={theme.subText}>\r\n                <Trans>Ending In</Trans>\r\n              </Text>\r\n\r\n              <Text fontSize=\"12px\">\r\n                {farm.time}\r\n                {tobeExtended && (\r\n                  <Text color={theme.subText} fontSize=\"12px\" marginTop=\"6px\">\r\n                    <Trans>To be extended</Trans>\r\n                  </Text>\r\n                )}\r\n              </Text>\r\n            </Flex>\r\n            */}\r\n\r\n            <Flex justifyContent=\"space-between\" fontSize={12} marginTop=\"12px\">\r\n              <Text color={theme.subText}>\r\n                <Trans>APR</Trans>\r\n                <InfoHelper\r\n                  text={'Once a farm has ended, you will continue to receive returns through LP Fees'}\r\n                  size={12}\r\n                />\r\n              </Text>\r\n\r\n              <Flex alignItems={'center'} sx={{ gap: '4px' }} color={theme.apr} fontWeight=\"500\">\r\n                <Text as=\"span\">{(tradingFeeAPR + farmAPR).toFixed(2)}%</Text>\r\n                <MouseoverTooltip\r\n                  width=\"fit-content\"\r\n                  placement=\"top\"\r\n                  text={<APRTooltipContent farmAPR={farmAPR} poolAPR={tradingFeeAPR} />}\r\n                >\r\n                  <MoneyBag size={16} color={theme.apr} />\r\n                </MouseoverTooltip>\r\n              </Flex>\r\n            </Flex>\r\n\r\n            <Flex justifyContent=\"space-between\" fontSize={12} marginTop=\"12px\">\r\n              <Text color={theme.subText}>\r\n                <Trans>Vesting</Trans>\r\n                <InfoHelper\r\n                  text={t`After harvesting, your rewards will unlock linearly over the indicated time period`}\r\n                  size={12}\r\n                />\r\n              </Text>\r\n\r\n              <Text fontSize=\"12px\" fontWeight=\"500\">\r\n                {getFormattedTimeFromSecond(farm.vestingDuration, true)}\r\n              </Text>\r\n            </Flex>\r\n\r\n            <Flex justifyContent=\"space-between\" fontSize={12} marginTop=\"12px\">\r\n              <Text color={theme.subText}>\r\n                <Trans>My Deposit</Trans>\r\n              </Text>\r\n\r\n              <Text fontSize=\"12px\" fontWeight=\"500\">\r\n                {formattedNum(userStakedBalanceUSD.toString(), true)}\r\n              </Text>\r\n            </Flex>\r\n\r\n            <Flex justifyContent=\"space-between\" fontSize={12} marginTop=\"12px\">\r\n              <Text color={theme.subText}>\r\n                <Trans>My Rewards</Trans>\r\n              </Text>\r\n\r\n              <Text fontSize=\"12px\" fontWeight=\"500\">\r\n                {formattedNum(rewardUSD.toString(), true)}\r\n              </Text>\r\n            </Flex>\r\n\r\n            <RewardBalanceWrapper>\r\n              {farmRewards.map((reward, index) => {\r\n                return (\r\n                  <React.Fragment key={reward.token.wrapped.address}>\r\n                    <Flex alignItems=\"center\" fontSize=\"12px\" sx={{ gap: '4px' }}>\r\n                      {chainId && reward.token.wrapped.address && <CurrencyLogo currency={reward.token} size=\"16px\" />}\r\n                      {getFullDisplayBalance(reward.amount, reward.token.decimals)}\r\n                    </Flex>\r\n                    {index !== farmRewards.length - 1 && <Text color={theme.subText}>|</Text>}\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n\r\n              <ButtonLight\r\n                margin=\"8px 0 0\"\r\n                disabled={isHarvestDisabled}\r\n                onClick={() => {\r\n                  handleHarvest(farm.pid)\r\n                }}\r\n              >\r\n                <Harvest />\r\n                <Text marginLeft=\"8px\">Harvest</Text>\r\n              </ButtonLight>\r\n            </RewardBalanceWrapper>\r\n\r\n            <Flex sx={{ gap: '1rem' }} marginTop=\"16px\">\r\n              <ButtonOutlined onClick={() => setModalType('unstake')} flex={1}>\r\n                <Trans>Unstake</Trans>\r\n              </ButtonOutlined>\r\n              <ButtonPrimary onClick={() => setModalType('stake')} flex={1}>\r\n                <Trans>Stake</Trans>\r\n              </ButtonPrimary>\r\n            </Flex>\r\n          </StyledItemCard>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListItem\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { ChainId } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\n\r\nimport ShareModal from 'components/ShareModal'\r\nimport { OUTSIDE_FAIRLAUNCH_ADDRESSES } from 'constants/index'\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useFairLaunchVersion } from 'hooks/useContract'\r\nimport useFairLaunch from 'hooks/useFairLaunch'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ApplicationModal } from 'state/application/actions'\r\nimport { useBlockNumber, useModalOpen, useOpenModal } from 'state/application/hooks'\r\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setYieldPoolsError } from 'state/farms/actions'\r\nimport { FairLaunchVersion, Farm } from 'state/farms/types'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { ExternalLink } from 'theme'\r\nimport { useFarmRewards } from 'utils/dmm'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getFormattedTimeFromSecond } from 'utils/formatTime'\r\n\r\nimport HarvestAll from './HarvestAll'\r\nimport ListItem from './ListItem'\r\nimport { FairLaunchPoolsTitle, FairLaunchPoolsWrapper, ListItemWrapper } from './styleds'\r\n\r\ninterface FarmsListProps {\r\n  fairLaunchAddress: string\r\n  farms?: Farm[]\r\n}\r\n\r\nconst FairLaunchPools = ({ fairLaunchAddress, farms }: FarmsListProps) => {\r\n  const dispatch = useAppDispatch()\r\n  const { chainId, account, isEVM, networkInfo } = useActiveWeb3React()\r\n  const networkRoute = networkInfo.route || undefined\r\n  const theme = useTheme()\r\n  const blockNumber = useBlockNumber()\r\n  const totalRewards = useFarmRewards(farms)\r\n  const fairLaunchVersion = useFairLaunchVersion(fairLaunchAddress)\r\n  const { harvestMultiplePools } = useFairLaunch(fairLaunchAddress)\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const [sharedPoolAddress, setSharedPoolAddress] = useState('')\r\n  const openShareModal = useOpenModal(ApplicationModal.SHARE)\r\n  const isShareModalOpen = useModalOpen(ApplicationModal.SHARE)\r\n\r\n  useEffect(() => {\r\n    if (sharedPoolAddress) {\r\n      openShareModal()\r\n    }\r\n  }, [openShareModal, sharedPoolAddress])\r\n\r\n  useEffect(() => {\r\n    setSharedPoolAddress(addr => {\r\n      if (!isShareModalOpen) {\r\n        return ''\r\n      }\r\n\r\n      return addr\r\n    })\r\n  }, [isShareModalOpen, setSharedPoolAddress])\r\n\r\n  if (!isEVM) return <Redirect to=\"/\" />\r\n  const shareUrl = sharedPoolAddress\r\n    ? window.location.origin + `/farms/${networkRoute}?search=` + sharedPoolAddress + '&tab=classic'\r\n    : undefined\r\n\r\n  const handleHarvestAll = async () => {\r\n    if (!chainId || !account) {\r\n      return\r\n    }\r\n\r\n    dispatch(setShowConfirm(true))\r\n    dispatch(setAttemptingTxn(true))\r\n    dispatch(setTxHash(''))\r\n\r\n    try {\r\n      const poolsHaveReward = (farms || []).filter(farm => {\r\n        if (!farm.userData?.rewards) {\r\n          return false\r\n        }\r\n\r\n        const hasReward = farm.userData?.rewards?.some(value => BigNumber.from(value).gt(0))\r\n\r\n        return hasReward\r\n      })\r\n\r\n      const txHash = await harvestMultiplePools(poolsHaveReward.map(farm => farm.pid))\r\n      if (txHash) {\r\n        mixpanelHandler(MIXPANEL_TYPE.ALL_REWARDS_HARVESTED, {\r\n          reward_tokens_and_amounts:\r\n            totalRewards &&\r\n            Object.assign(\r\n              {},\r\n              ...totalRewards.map(reward => {\r\n                if (reward?.token?.symbol)\r\n                  return { [reward.token.symbol]: getFullDisplayBalance(reward.amount, reward.token.decimals) }\r\n                return {}\r\n              }),\r\n            ),\r\n        })\r\n      }\r\n      dispatch(setTxHash(txHash))\r\n    } catch (err) {\r\n      console.error(err)\r\n      dispatch(setYieldPoolsError(err as Error))\r\n    }\r\n\r\n    dispatch(setAttemptingTxn(false))\r\n  }\r\n\r\n  const currentTimestamp = Math.floor(Date.now() / 1000)\r\n\r\n  const farmsList =\r\n    fairLaunchVersion === FairLaunchVersion.V1\r\n      ? (farms || []).map(farm => {\r\n          // TODO: hard code for SIPHER. Need to be remove later\r\n          const isSipherFarm =\r\n            farm.fairLaunchAddress.toLowerCase() === '0xc0601973451d9369252Aee01397c0270CD2Ecd60'.toLowerCase() &&\r\n            chainId === ChainId.MAINNET\r\n\r\n          const isFarmStarted = farm && blockNumber && farm.startBlock < blockNumber\r\n          const isFarmEnded = farm && blockNumber && farm.endBlock < blockNumber\r\n\r\n          let remainingBlocks: number | false | undefined\r\n          let estimatedRemainingSeconds: number | false | undefined\r\n          let formattedEstimatedRemainingTime: string | false | 0 | undefined\r\n\r\n          if (!isFarmStarted) {\r\n            remainingBlocks = farm && blockNumber && farm.startBlock - blockNumber\r\n            estimatedRemainingSeconds =\r\n              remainingBlocks && remainingBlocks * (networkInfo as EVMNetworkInfo).averageBlockTimeInSeconds\r\n            formattedEstimatedRemainingTime =\r\n              estimatedRemainingSeconds && getFormattedTimeFromSecond(estimatedRemainingSeconds)\r\n          } else {\r\n            remainingBlocks = farm && blockNumber && farm.endBlock - blockNumber\r\n            estimatedRemainingSeconds =\r\n              remainingBlocks && remainingBlocks * (networkInfo as EVMNetworkInfo).averageBlockTimeInSeconds\r\n            formattedEstimatedRemainingTime =\r\n              estimatedRemainingSeconds && getFormattedTimeFromSecond(estimatedRemainingSeconds)\r\n          }\r\n\r\n          return {\r\n            ...farm,\r\n            time: `${\r\n              isSipherFarm\r\n                ? ''\r\n                : isFarmEnded\r\n                ? 'Ended'\r\n                : (isFarmStarted ? '' : 'Starting in ') + formattedEstimatedRemainingTime\r\n            }`,\r\n          }\r\n        })\r\n      : (farms || []).map(farm => {\r\n          const isFarmStarted = farm && currentTimestamp && farm.startTime < currentTimestamp\r\n          const isFarmEnded = farm && currentTimestamp && farm.endTime < currentTimestamp\r\n\r\n          let formattedEstimatedRemainingTime: string\r\n\r\n          if (!isFarmStarted) {\r\n            formattedEstimatedRemainingTime = getFormattedTimeFromSecond(farm.startTime - currentTimestamp)\r\n          } else {\r\n            formattedEstimatedRemainingTime = getFormattedTimeFromSecond(farm.endTime - currentTimestamp)\r\n          }\r\n\r\n          return {\r\n            ...farm,\r\n            time: `${isFarmEnded ? 'Ended' : (isFarmStarted ? '' : 'Starting in ') + formattedEstimatedRemainingTime}`,\r\n          }\r\n        })\r\n\r\n  const displayFarms = farmsList.sort((a, b) => b.endBlock - a.endBlock)\r\n\r\n  const outsideFarm = OUTSIDE_FAIRLAUNCH_ADDRESSES[fairLaunchAddress]\r\n\r\n  return (\r\n    <FairLaunchPoolsWrapper>\r\n      {!!displayFarms.length && (\r\n        <>\r\n          <FairLaunchPoolsTitle justify={outsideFarm ? 'space-between' : 'flex-end'}>\r\n            {outsideFarm && (\r\n              <Text fontSize={14} fontStyle=\"italic\" color={theme.subText}>\r\n                <Trans>\r\n                  This pool require {outsideFarm.name} LP Tokens. Get the LP Tokens{' '}\r\n                  <ExternalLink href={outsideFarm.getLPTokenLink}>here ↗</ExternalLink>{' '}\r\n                </Trans>\r\n              </Text>\r\n            )}\r\n\r\n            <HarvestAll totalRewards={totalRewards} onHarvestAll={handleHarvestAll} />\r\n          </FairLaunchPoolsTitle>\r\n\r\n          <ListItemWrapper>\r\n            {displayFarms.map((farm, index) => {\r\n              return (\r\n                <ListItem\r\n                  key={`${farm.fairLaunchAddress}_${farm.stakeToken}`}\r\n                  farm={farm}\r\n                  oddRow={(index + 1) % 2 !== 0}\r\n                  setSharedPoolAddress={setSharedPoolAddress}\r\n                />\r\n              )\r\n            })}\r\n          </ListItemWrapper>\r\n        </>\r\n      )}\r\n\r\n      <ShareModal title={t`Share this farm with your friends!`} url={shareUrl} />\r\n    </FairLaunchPoolsWrapper>\r\n  )\r\n}\r\n\r\nexport default FairLaunchPools\r\n","import React, { useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport TransactionConfirmationModal, { TransactionErrorContent } from 'components/TransactionConfirmationModal'\r\nimport { AppState } from 'state'\r\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setYieldPoolsError } from 'state/farms/actions'\r\nimport { useAppDispatch } from 'state/hooks'\r\n\r\nexport default function ConfirmHarvestingModal() {\r\n  const showConfirm = useSelector<AppState, boolean>(state => state.farms.showConfirm)\r\n  const attemptingTxn = useSelector<AppState, boolean>(state => state.farms.attemptingTxn)\r\n  const txHash = useSelector<AppState, string>(state => state.farms.txHash)\r\n  const yieldPoolsError = useSelector<AppState, string>(state => state.farms.error)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    dispatch(setShowConfirm(false))\r\n    dispatch(setAttemptingTxn(false))\r\n    dispatch(setTxHash(''))\r\n    dispatch(setYieldPoolsError(null))\r\n  }, [dispatch])\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      yieldPoolsError ? <TransactionErrorContent onDismiss={handleConfirmDismiss} message={yieldPoolsError} /> : null,\r\n    [handleConfirmDismiss, yieldPoolsError],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      hash={txHash ? txHash : ''}\r\n      isOpen={showConfirm}\r\n      onDismiss={handleConfirmDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      content={confirmationContent}\r\n      pendingText=\"\"\r\n    />\r\n  )\r\n}\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprinklingBulb(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 19,\n    viewBox: \"0 0 19 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.83333 16.6667H8.16667C8.16667 17.5833 7.41667 18.3333 6.5 18.3333C5.58333 18.3333 4.83333 17.5833 4.83333 16.6667ZM3.16667 15C3.16667 15.4583 3.54167 15.8333 4 15.8333H9C9.45833 15.8333 9.83333 15.4583 9.83333 15C9.83333 14.5417 9.45833 14.1667 9 14.1667H4C3.54167 14.1667 3.16667 14.5417 3.16667 15ZM12.75 7.91667C12.75 11.1 10.5333 12.8 9.60833 13.3333H3.39167C2.46667 12.8 0.25 11.1 0.25 7.91667C0.25 4.46667 3.05 1.66667 6.5 1.66667C9.95 1.66667 12.75 4.46667 12.75 7.91667ZM16.8083 6.14167L15.6667 6.66667L16.8083 7.19167L17.3333 8.33333L17.8583 7.19167L19 6.66667L17.8583 6.14167L17.3333 5L16.8083 6.14167ZM14.8333 5L15.6167 3.28333L17.3333 2.5L15.6167 1.71667L14.8333 0L14.05 1.71667L12.3333 2.5L14.05 3.28333L14.8333 5Z\",\n    fill: \"#FF9901\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprinklingBulb);\nexport default __webpack_public_path__ + \"static/media/sprinkling_bulb.2d84aec8.svg\";\nexport { ForwardRef as ReactComponent };","import { ChainId } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { stringify } from 'querystring'\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport Search from 'components/Icons/Search'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport LocalLoader from 'components/LocalLoader'\r\nimport Toggle from 'components/Toggle'\r\nimport FairLaunchPools from 'components/YieldPools/FairLaunchPools'\r\nimport { AMP_HINT, TOBE_EXTENDED_FARMING_POOLS } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useBlockNumber } from 'state/application/hooks'\r\nimport { useFarmsData } from 'state/farms/hooks'\r\nimport { Farm } from 'state/farms/types'\r\nimport { isAddressString } from 'utils'\r\n\r\nimport ConfirmHarvestingModal from './ConfirmHarvestingModal'\r\nimport {\r\n  ClickableText,\r\n  HeadingContainer,\r\n  HeadingRight,\r\n  SearchContainer,\r\n  SearchInput,\r\n  StakedOnlyToggleText,\r\n  StakedOnlyToggleWrapper,\r\n  TableHeader,\r\n} from './styleds'\r\n\r\nconst YieldPools = ({ loading, active }: { loading: boolean; active?: boolean }) => {\r\n  const theme = useTheme()\r\n  const { chainId } = useActiveWeb3React()\r\n  const above1000 = useMedia('(min-width: 1000px)')\r\n  const { data: farmsByFairLaunch } = useFarmsData()\r\n  const [stakedOnly, setStakedOnly] = useState({\r\n    active: false,\r\n    ended: false,\r\n  })\r\n\r\n  const activeTab = active ? 'active' : 'ended'\r\n\r\n  const blockNumber = useBlockNumber()\r\n  const currentTimestamp = Math.floor(Date.now() / 1000)\r\n\r\n  const ref = useRef<HTMLDivElement>()\r\n  const [open, setOpen] = useState(false)\r\n  useOnClickOutside(ref, open ? () => setOpen(prev => !prev) : undefined)\r\n  const { search = '', ...qs } = useParsedQueryString<{ search: string }>()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const debouncedSearchText = useDebounce(search.trim().toLowerCase(), 200)\r\n  const [isCheckUserStaked, setIsCheckUserStaked] = useState(false)\r\n\r\n  const doSearch = useCallback(\r\n    (search: string) => {\r\n      const target = {\r\n        ...location,\r\n        search: stringify({ ...qs, search }),\r\n      }\r\n\r\n      history.replace(target)\r\n    },\r\n    [history, location, qs],\r\n  )\r\n\r\n  const filterFarm = useCallback(\r\n    (farm: Farm) => {\r\n      // TODO: hard code for SIPHER. Need to be remove later\r\n      const isSipherFarm =\r\n        farm.fairLaunchAddress.toLowerCase() === '0xc0601973451d9369252Aee01397c0270CD2Ecd60'.toLowerCase() &&\r\n        chainId === ChainId.MAINNET\r\n\r\n      // Keep to be extended farm in active tab\r\n      const now = +new Date() / 1000\r\n      const toBeExtendTime = TOBE_EXTENDED_FARMING_POOLS[isAddressString(chainId, farm.id)]\r\n      // only show if it will be ended less than 2 day\r\n      const tobeExtended = toBeExtendTime && farm.endTime - now < 172800 && farm.endTime < toBeExtendTime\r\n\r\n      if (farm.rewardPerSeconds) {\r\n        // for active/ended farms\r\n        return (\r\n          currentTimestamp &&\r\n          (active ? farm.endTime >= currentTimestamp || tobeExtended : farm.endTime < currentTimestamp) &&\r\n          // search farms\r\n          (debouncedSearchText\r\n            ? farm.token0?.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n              farm.token1?.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n              farm.id === debouncedSearchText\r\n            : true) &&\r\n          // stakedOnly\r\n          (stakedOnly[activeTab]\r\n            ? farm.userData?.stakedBalance && BigNumber.from(farm.userData.stakedBalance).gt(0)\r\n            : true)\r\n        )\r\n      } else {\r\n        // for active/ended farms\r\n        return (\r\n          blockNumber &&\r\n          (isSipherFarm\r\n            ? active\r\n            : active\r\n            ? farm.endBlock >= blockNumber || tobeExtended\r\n            : farm.endBlock < blockNumber) &&\r\n          // search farms\r\n          (debouncedSearchText\r\n            ? farm.token0?.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n              farm.token1?.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n              farm.id === debouncedSearchText\r\n            : true) &&\r\n          // stakedOnly\r\n          (stakedOnly[activeTab]\r\n            ? farm.userData?.stakedBalance && BigNumber.from(farm.userData.stakedBalance).gt(0)\r\n            : true)\r\n        )\r\n      }\r\n    },\r\n    [active, activeTab, blockNumber, debouncedSearchText, stakedOnly, currentTimestamp, chainId],\r\n  )\r\n\r\n  const farms = useMemo(\r\n    () =>\r\n      Object.keys(farmsByFairLaunch).reduce((acc: { [key: string]: Farm[] }, address) => {\r\n        const currentFarms = farmsByFairLaunch[address].filter(farm => filterFarm(farm))\r\n        if (currentFarms.length) acc[address] = currentFarms\r\n        return acc\r\n      }, {}),\r\n    [farmsByFairLaunch, filterFarm],\r\n  )\r\n\r\n  const noFarms = !Object.keys(farms).length\r\n\r\n  useEffect(() => {\r\n    // auto enable stakedOnly if user have rewards on ended farms\r\n    if (!active && !stakedOnly['ended'] && !isCheckUserStaked) {\r\n      const staked = Object.keys(farmsByFairLaunch).filter(address => {\r\n        return !!farmsByFairLaunch[address].filter(farm => {\r\n          if (farm.rewardPerSeconds) {\r\n            return (\r\n              currentTimestamp &&\r\n              farm.endTime < currentTimestamp &&\r\n              farm.userData?.stakedBalance &&\r\n              BigNumber.from(farm.userData.stakedBalance).gt(0)\r\n            )\r\n          } else {\r\n            return (\r\n              blockNumber &&\r\n              farm.endBlock < blockNumber &&\r\n              farm.userData?.stakedBalance &&\r\n              BigNumber.from(farm.userData.stakedBalance).gt(0)\r\n            )\r\n          }\r\n        }).length\r\n      })\r\n\r\n      if (staked.length) {\r\n        setIsCheckUserStaked(true)\r\n        setStakedOnly(prev => ({ ...prev, ended: true }))\r\n      }\r\n    }\r\n  }, [active, stakedOnly, farmsByFairLaunch, blockNumber, isCheckUserStaked, currentTimestamp])\r\n\r\n  return (\r\n    <>\r\n      <ConfirmHarvestingModal />\r\n      <HeadingContainer>\r\n        <StakedOnlyToggleWrapper>\r\n          <StakedOnlyToggleText>\r\n            <Trans>Staked Only</Trans>\r\n          </StakedOnlyToggleText>\r\n          <Toggle\r\n            isActive={stakedOnly[active ? 'active' : 'ended']}\r\n            toggle={() => setStakedOnly(prev => ({ ...prev, [activeTab]: !prev[activeTab] }))}\r\n          />\r\n        </StakedOnlyToggleWrapper>\r\n        <HeadingRight>\r\n          <SearchContainer>\r\n            <SearchInput\r\n              placeholder={t`Search by token name or pool address`}\r\n              maxLength={255}\r\n              value={search}\r\n              onChange={e => doSearch(e.target.value)}\r\n            />\r\n            <Search color={theme.subText} />\r\n          </SearchContainer>\r\n        </HeadingRight>\r\n      </HeadingContainer>\r\n\r\n      {above1000 && (\r\n        <TableHeader>\r\n          <Flex grid-area=\"pools\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n            <ClickableText>\r\n              <Trans>Pools | AMP</Trans>\r\n            </ClickableText>\r\n            <InfoHelper text={AMP_HINT} />\r\n          </Flex>\r\n\r\n          <Flex grid-area=\"liq\" alignItems=\"center\" justifyContent=\"flex-center\">\r\n            <ClickableText>\r\n              <Trans>Staked TVL</Trans>\r\n            </ClickableText>\r\n          </Flex>\r\n\r\n          <Flex\r\n            grid-area=\"apy\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"flex-end\"\r\n            sx={{\r\n              paddingRight: '18px', // to make the cells vertically align\r\n            }}\r\n          >\r\n            <ClickableText>\r\n              <Trans>APR</Trans>\r\n            </ClickableText>\r\n            <InfoHelper\r\n              text={\r\n                active\r\n                  ? t`Total estimated return based on yearly fees and bonus rewards of the pool`\r\n                  : t`Estimated return based on yearly fees of the pool`\r\n              }\r\n            />\r\n          </Flex>\r\n\r\n          <Flex grid-area=\"vesting_duration\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            <ClickableText>\r\n              <Trans>Vesting</Trans>\r\n            </ClickableText>\r\n            <InfoHelper text={t`After harvesting, your rewards will unlock linearly over the indicated time period`} />\r\n          </Flex>\r\n\r\n          <Flex grid-area=\"staked_balance\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            <ClickableText>\r\n              <Trans>My Deposit</Trans>\r\n            </ClickableText>\r\n          </Flex>\r\n\r\n          <Flex grid-area=\"reward\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            <ClickableText>\r\n              <Trans>My Rewards</Trans>\r\n            </ClickableText>\r\n          </Flex>\r\n        </TableHeader>\r\n      )}\r\n\r\n      {loading && noFarms ? (\r\n        <Flex backgroundColor={theme.background}>\r\n          <LocalLoader />\r\n        </Flex>\r\n      ) : noFarms ? (\r\n        <Flex\r\n          backgroundColor={theme.background}\r\n          justifyContent=\"center\"\r\n          padding=\"32px\"\r\n          style={{ borderBottomLeftRadius: '20px', borderBottomRightRadius: '20px' }}\r\n        >\r\n          <Text color={theme.subText}>\r\n            {stakedOnly[activeTab] || debouncedSearchText ? (\r\n              <Trans>No Farms found</Trans>\r\n            ) : (\r\n              <Trans>Currently there are no Farms.</Trans>\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      ) : (\r\n        Object.keys(farms).map(fairLaunchAddress => {\r\n          return (\r\n            <FairLaunchPools\r\n              key={fairLaunchAddress}\r\n              fairLaunchAddress={fairLaunchAddress}\r\n              farms={farms[fairLaunchAddress]}\r\n            />\r\n          )\r\n        })\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default YieldPools\r\n","import { Trans } from '@lingui/macro'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ExternalLink } from 'theme'\r\n\r\nconst TextContainer = styled.ul`\r\n  flex-shrink: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0;\r\n  padding-left: 24px;\r\n  padding-right: 8px;\r\n  width: 100%;\r\n  row-gap: 8px;\r\n\r\n  margin-block-start: 0;\r\n  margin-block-end: 0;\r\n\r\n  margin-inline-start: 0;\r\n  margin-inline-end: 0;\r\n\r\n  list-style-type: disc;\r\n  list-style-position: outside;\r\n\r\n  color: ${({ theme }) => theme.subText};\r\n\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n`\r\n\r\nconst HighlightedText = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 500;\r\n`\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n}\r\n\r\nconst SummaryContent: React.FC<Props> = ({ isOpen }) => {\r\n  const theme = useTheme()\r\n  return (\r\n    <>\r\n      <Flex\r\n        sx={{\r\n          width: '100%',\r\n          flexDirection: 'column',\r\n          rowGap: '12px',\r\n          maxHeight: isOpen ? '1000px' : '0',\r\n          transition: 'max-height 150ms, margin 150ms',\r\n          overflow: 'hidden',\r\n          marginTop: isOpen ? '12px' : '0px',\r\n        }}\r\n      >\r\n        <Text fontSize={14} fontWeight={500} color={theme.text}>\r\n          <Trans>Farming Mechanism 1 - Active Liquidity Time</Trans>\r\n        </Text>\r\n        <TextContainer>\r\n          <li>\r\n            <Trans>\r\n              Farms using this mechanism rely on the <HighlightedText>total time</HighlightedText> your liquidity\r\n              position is <HighlightedText>active</HighlightedText> (i.e. in range) in the pool.\r\n            </Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              Once you stake your liquidity position into a farm, your farming rewards are calculated based on the time\r\n              your liquidity position is currently <HighlightedText>active</HighlightedText> and supporting the{' '}\r\n              <HighlightedText>current market price</HighlightedText> of the pool.\r\n            </Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              If your liquidity position goes out of range (i.e. becomes inactive), you will{' '}\r\n              <HighlightedText>stop</HighlightedText> accumulating farming rewards. You have 2 options:\r\n            </Trans>\r\n\r\n            <TextContainer style={{ marginTop: '8px' }}>\r\n              <li>\r\n                <Trans>\r\n                  <HighlightedText>Option 1</HighlightedText>: Wait for the current market price of the pool to come\r\n                  back in your price range (i.e. for your liquidity position to become active again).\r\n                </Trans>\r\n              </li>\r\n\r\n              <li>\r\n                <Trans>\r\n                  <HighlightedText>Option 2</HighlightedText>: Remove your liquidity position from the pool, create a\r\n                  new liquidity position with an active price range, and stake in the farm again.\r\n                </Trans>\r\n              </li>\r\n            </TextContainer>\r\n          </li>\r\n          <li>\r\n            <Trans>You will accumulate farming rewards as long as your liquidity position is active.</Trans>\r\n          </li>\r\n        </TextContainer>\r\n      </Flex>\r\n\r\n      <Flex\r\n        sx={{\r\n          width: '100%',\r\n          flexDirection: 'column',\r\n          rowGap: '12px',\r\n          maxHeight: isOpen ? '1000px' : '0',\r\n          transition: 'max-height 150ms, margin 150ms',\r\n          overflow: 'hidden',\r\n          marginTop: isOpen ? '12px' : '0px',\r\n        }}\r\n      >\r\n        <Text fontSize={14} fontWeight={500} color={theme.text}>\r\n          <Trans>Farming Mechanism 2 - Active Liquidity Time & Target Volume</Trans>\r\n        </Text>\r\n        <TextContainer>\r\n          <li>\r\n            <Trans>Farms setup using this mechanism rely on 2 factors:</Trans>\r\n\r\n            <TextContainer style={{ marginTop: '8px' }}>\r\n              <li>\r\n                <Trans>\r\n                  The <HighlightedText>total time</HighlightedText> your liquidity position is active (aka in range) in\r\n                  the pool.\r\n                </Trans>\r\n              </li>\r\n              <li>\r\n                <Trans>\r\n                  The <HighlightedText>trade volume</HighlightedText> supported by your liquidity position.\r\n                </Trans>\r\n              </li>\r\n            </TextContainer>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              If the <HighlightedText>Target Volume</HighlightedText> column for a farm displays a{' '}\r\n              <HighlightedText>progress bar</HighlightedText>, the farm is setup with this 2nd mechanism.\r\n            </Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              Your liquidity position needs to achieve the <HighlightedText>required target volume</HighlightedText>{' '}\r\n              (represented by a progress bar). You will accumulate farming rewards even if your liquidity position\r\n              hasn&apos;t hit the required Target Volume. But as soon as your position hits the required Target Volume\r\n              (i.e. progress bar is 100%), from thereafter, you will earn 100% of the rewards for that liquidity\r\n              position.\r\n            </Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>The more trading volume your position supports, the more farming rewards you will earn.</Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              If your liquidity position goes out of range (i.e. becomes inactive), you will{' '}\r\n              <HighlightedText>stop</HighlightedText> accumulating farming rewards. You have 2 options:\r\n            </Trans>\r\n\r\n            <TextContainer style={{ marginTop: '8px' }}>\r\n              <li>\r\n                <Trans>\r\n                  <HighlightedText>Option 1:</HighlightedText> Wait for the current market price of the pool to come\r\n                  back in your price range (i.e. for your liquidity position to become active again)\r\n                </Trans>\r\n              </li>\r\n              <li>\r\n                <Trans>\r\n                  <HighlightedText>Option 2:</HighlightedText> Remove your liquidity position from the pool, create a\r\n                  new liquidity position with an active price range, and stake in the farm again\r\n                </Trans>\r\n              </li>\r\n            </TextContainer>\r\n          </li>\r\n        </TextContainer>\r\n\r\n        <Text\r\n          as=\"span\"\r\n          sx={{\r\n            fontWeight: '400',\r\n            fontSize: '14px',\r\n            lineHeight: '20px',\r\n            color: theme.subText,\r\n            flexShrink: '0',\r\n          }}\r\n        >\r\n          <Trans>\r\n            If you wish to learn more, click{' '}\r\n            <ExternalLink href=\"https://docs.kyberswap.com/guides/farming-mechanisms\">here ↗</ExternalLink>\r\n          </Trans>\r\n        </Text>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SummaryContent\r\n","import { Trans } from '@lingui/macro'\r\nimport { useState } from 'react'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as DropdownSVG } from 'assets/svg/down.svg'\r\nimport { ReactComponent as Bulb } from 'assets/svg/sprinkling_bulb.svg'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nimport SummaryContent from './SummaryContent'\r\n\r\nconst DropdownIcon = styled(DropdownSVG)`\r\n  transition: transform 300ms;\r\n  color: ${({ theme }) => theme.subText};\r\n  &[data-flip='true'] {\r\n    transform: rotate(180deg);\r\n  }\r\n`\r\n\r\nconst HighlightedText = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 500;\r\n`\r\n\r\nconst ElasticFarmSummary = () => {\r\n  const theme = useTheme()\r\n  const [isOpen, setOpen] = useState(false)\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        border: `1px solid ${theme.warning}`,\r\n        borderRadius: '26px',\r\n        padding: '16px 18px',\r\n      }}\r\n    >\r\n      <Flex\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n        }}\r\n        role=\"button\"\r\n        onClick={() => setOpen(o => !o)}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            gap: '8px',\r\n            flex: '1 1',\r\n          }}\r\n        >\r\n          <Flex\r\n            sx={{\r\n              flex: '0 0 20px',\r\n            }}\r\n          >\r\n            <Bulb />\r\n          </Flex>\r\n          <Text\r\n            sx={{\r\n              fontWeight: '400',\r\n              fontSize: '14px',\r\n              lineHeight: '20px',\r\n              color: theme.subText,\r\n              flex: '1 1',\r\n            }}\r\n          >\r\n            <Trans>\r\n              All farms are setup using one of our two innovative farming mechanisms. Read the tips below to{' '}\r\n              <HighlightedText>maximize</HighlightedText> your farming rewards!\r\n            </Trans>\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Flex\r\n          sx={{\r\n            flex: '0 0 24px',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <DropdownIcon data-flip={isOpen} />\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <SummaryContent isOpen={isOpen} />\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ElasticFarmSummary\r\n","import { Trans } from '@lingui/macro'\r\nimport { useState } from 'react'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as DropdownSVG } from 'assets/svg/down.svg'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ExternalLink } from 'theme'\r\n\r\nconst DropdownIcon = styled(DropdownSVG)`\r\n  transition: transform 300ms;\r\n  color: ${({ theme }) => theme.subText};\r\n  &[data-flip='true'] {\r\n    transform: rotate(180deg);\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 20px;\r\n  padding: 16px;\r\n  font-size: 14px;\r\n  border: 1px solid ${({ theme }) => theme.warning};\r\n  margin-bottom: 16px;\r\n  color: ${({ theme }) => theme.subText};\r\n\r\n  li {\r\n    line-height: 20px;\r\n  }\r\n`\r\n\r\nconst StyledUL = styled.ul`\r\n  flex-shrink: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0;\r\n  padding-left: 24px;\r\n  padding-right: 8px;\r\n  width: 100%;\r\n  row-gap: 8px;\r\n\r\n  margin-block-start: 0;\r\n  margin-block-end: 0;\r\n\r\n  margin-inline-start: 0;\r\n  margin-inline-end: 0;\r\n\r\n  list-style-type: disc;\r\n  list-style-position: outside;\r\n\r\n  color: ${({ theme }) => theme.subText};\r\n\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n`\r\n\r\nconst Highlighted = styled.span`\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst ContentForActiveFarms = () => {\r\n  const theme = useTheme()\r\n  return (\r\n    <StyledUL style={{ marginTop: '8px' }}>\r\n      <li>\r\n        <Trans>\r\n          We recently discovered an issue in our Elastic farming contract where you might not be able to harvest your\r\n          rewards or withdraw your liquidity positions like you <Highlighted>normally</Highlighted> would.\r\n        </Trans>\r\n      </li>\r\n      <li>\r\n        <Trans>\r\n          Don&apos;t worry, your funds are <Highlighted>100% safe</Highlighted>. And you are still earning farming\r\n          rewards.\r\n        </Trans>\r\n      </li>\r\n      <li>\r\n        <Trans>\r\n          If you still wish to withdraw your liquidity positions from the farm, you can use the{' '}\r\n          <Highlighted style={{ color: theme.red }}>Force Withdraw</Highlighted> button as an emergency option. Note:\r\n        </Trans>\r\n        <StyledUL style={{ marginTop: '8px', listStyleType: 'circle' }}>\r\n          <li>\r\n            <Trans>\r\n              If you do this, your farming rewards will <Highlighted>not</Highlighted> be automatically harvested but we\r\n              can <Highlighted>manually transfer</Highlighted> your farming rewards to you.\r\n            </Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              After force withdrawing your liquidity position from the farm, remember <Highlighted>not</Highlighted> to\r\n              re-stake this in the farm.\r\n            </Trans>\r\n          </li>\r\n          <li>\r\n            <Trans>\r\n              If you wish to continue participating in the farm, you should remove liquidity from the{' '}\r\n              <Highlighted>pool</Highlighted>, create a <Highlighted>new</Highlighted> liquidity position by adding\r\n              liquidity into the pool, and then stake this new liquidity position into the farm.\r\n            </Trans>\r\n          </li>\r\n        </StyledUL>\r\n      </li>\r\n      <li>\r\n        <Trans>\r\n          You can get in touch with us by joining our{' '}\r\n          <ExternalLink href=\"https://discord.gg/H8AQVhwBz9\">Discord channel ↗</ExternalLink> and we will assist you\r\n          with your questions or transfer of rewards.\r\n        </Trans>\r\n      </li>\r\n    </StyledUL>\r\n  )\r\n}\r\n\r\nconst ContentForEndedFarms = () => {\r\n  const theme = useTheme()\r\n  return (\r\n    <StyledUL style={{ marginTop: '8px' }}>\r\n      <li>\r\n        <Trans>\r\n          We recently discovered an issue in our Elastic farming contract where you might not be able to harvest your\r\n          rewards or withdraw your liquidity positions like you <Highlighted>normally</Highlighted> would.\r\n        </Trans>\r\n      </li>\r\n      <li>\r\n        <Trans>\r\n          Don&apos;t worry, your funds are <Highlighted>100% safe</Highlighted>.\r\n        </Trans>\r\n      </li>\r\n      <li>\r\n        <Trans>\r\n          You can use the <Highlighted style={{ color: theme.red }}>Force Withdraw</Highlighted> button as an emergency\r\n          option. If you do this, your farming rewards will <Highlighted>not</Highlighted> be automatically harvested\r\n          but we can <Highlighted>manually transfer</Highlighted> your farming rewards to you.\r\n        </Trans>\r\n      </li>\r\n      <li>\r\n        <Trans>\r\n          You can get in touch with us by joining our{' '}\r\n          <ExternalLink href=\"https://discord.gg/H8AQVhwBz9\">Discord channel ↗</ExternalLink> and we will assist you\r\n          with your questions or transfer of rewards.\r\n        </Trans>\r\n      </li>\r\n    </StyledUL>\r\n  )\r\n}\r\n\r\ntype Props = {\r\n  isEnded: boolean\r\n}\r\nconst FarmIssueAnnouncement: React.FC<Props> = ({ isEnded }) => {\r\n  const theme = useTheme()\r\n  const [show, setShow] = useState(true)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex\r\n        justifyContent=\"space-between\"\r\n        onClick={() => setShow(prev => !prev)}\r\n        sx={{\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M4.83333 16.6667H8.16667C8.16667 17.5833 7.41667 18.3333 6.5 18.3333C5.58333 18.3333 4.83333 17.5833 4.83333 16.6667ZM3.16667 15C3.16667 15.4583 3.54167 15.8333 4 15.8333H9C9.45833 15.8333 9.83333 15.4583 9.83333 15C9.83333 14.5417 9.45833 14.1667 9 14.1667H4C3.54167 14.1667 3.16667 14.5417 3.16667 15ZM12.75 7.91667C12.75 11.1 10.5333 12.8 9.60833 13.3333H3.39167C2.46667 12.8 0.25 11.1 0.25 7.91667C0.25 4.46667 3.05 1.66667 6.5 1.66667C9.95 1.66667 12.75 4.46667 12.75 7.91667ZM16.8083 6.14167L15.6667 6.66667L16.8083 7.19167L17.3333 8.33333L17.8583 7.19167L19 6.66667L17.8583 6.14167L17.3333 5L16.8083 6.14167ZM14.8333 5L15.6167 3.28333L17.3333 2.5L15.6167 1.71667L14.8333 0L14.05 1.71667L12.3333 2.5L14.05 3.28333L14.8333 5Z\"\r\n              fill=\"#FF9901\"\r\n            />\r\n          </svg>\r\n          <Text fontWeight=\"500\" color={theme.warning} marginLeft=\"8px\">\r\n            <Trans>Important Announcement</Trans>\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Flex\r\n          sx={{\r\n            flex: '0 0 24px',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <DropdownIcon data-flip={show} />\r\n        </Flex>\r\n      </Flex>\r\n\r\n      {show && (\r\n        <>\r\n          {isEnded ? <ContentForEndedFarms /> : <ContentForActiveFarms />}\r\n\r\n          <Text fontStyle=\"italic\" marginTop=\"16px\">\r\n            <Trans>We really apologize for the trouble.</Trans>\r\n          </Text>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmIssueAnnouncement\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"19\",\n    x2: \"12\",\n    y2: \"5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"5 12 12 5 19 12\"\n  }));\n});\nArrowUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowUp.displayName = 'ArrowUp';\nexport default ArrowUp;","import { Trans, t } from '@lingui/macro'\r\nimport { darken, rgba } from 'polished'\r\nimport { useMedia } from 'react-use'\r\nimport { Text } from 'rebass'\r\nimport styled, { DefaultTheme, css } from 'styled-components'\r\n\r\nimport { ButtonLight, ButtonPrimary } from 'components/Button'\r\nimport Deposit from 'components/Icons/Deposit'\r\nimport Harvest from 'components/Icons/Harvest'\r\nimport Withdraw from 'components/Icons/Withdraw'\r\nimport { MouseoverTooltipDesktopOnly } from 'components/Tooltip'\r\nimport { MEDIA_WIDTHS } from 'theme'\r\n\r\nexport enum ButtonColorScheme {\r\n  Red = 'Red',\r\n  Gray = 'Gray',\r\n  Green = 'Green',\r\n}\r\n\r\nconst useUpToSmall = () => {\r\n  return useMedia(`(max-width: ${MEDIA_WIDTHS.upToSmall}px)`)\r\n}\r\n\r\nconst BtnLight = styled(ButtonLight)`\r\n  padding: 8px 12px;\r\n  width: fit-content;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 8px;\r\n  `};\r\n`\r\n\r\nexport const BtnPrimary = styled(ButtonPrimary)`\r\n  font-size: 14px;\r\n  :disabled {\r\n    background: ${({ theme }) => theme.buttonGray};\r\n    cursor: not-allowed;\r\n    opacity: 0.4;\r\n  }\r\n`\r\n\r\nconst generateButtonOutlinedCSS = (theme: DefaultTheme, colorScheme?: ButtonColorScheme, disabled?: boolean) => {\r\n  const colorMap = {\r\n    [ButtonColorScheme.Red]: theme.red,\r\n    [ButtonColorScheme.Gray]: theme.subText,\r\n    [ButtonColorScheme.Green]: theme.primary,\r\n  }\r\n  colorScheme ||= ButtonColorScheme.Green\r\n  const mainColor = colorMap[colorScheme]\r\n\r\n  return css`\r\n    border-color: ${mainColor};\r\n    background-color: ${`${mainColor}20`};\r\n    color: ${mainColor};\r\n\r\n    &:hover {\r\n      background-color: ${!disabled ? darken(0.03, `${mainColor}20`) : undefined};\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: ${!disabled ? `0 0 0 1pt ${darken(0.05, `${mainColor}20`)}` : undefined};\r\n      background-color: ${!disabled ? darken(0.05, `${mainColor}20`) : undefined};\r\n    }\r\n  `\r\n}\r\n\r\nconst ButtonOutlined = styled(ButtonLight)<{ colorScheme?: ButtonColorScheme }>`\r\n  padding: 8px 12px;\r\n  width: fit-content;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme, colorScheme, disabled }) => generateButtonOutlinedCSS(theme, colorScheme, disabled)}\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 8px;\r\n  `};\r\n`\r\n\r\nexport const DepositButton: React.FC<React.ComponentPropsWithoutRef<'button'>> = ({\r\n  disabled,\r\n  onClick,\r\n  style,\r\n  ...others\r\n}) => {\r\n  const upToSmall = useUpToSmall()\r\n  const buttonWidth = upToSmall ? '44px' : 'max-content'\r\n  const buttonHeight = upToSmall ? '44px' : '38px'\r\n\r\n  const renderButtonBody = () => {\r\n    if (upToSmall) {\r\n      return <Deposit width={24} height={24} />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Deposit width={20} height={20} />\r\n        <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n          <Trans>Deposit</Trans>\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderButton = () => {\r\n    return (\r\n      <ButtonOutlined\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        style={{\r\n          width: buttonWidth,\r\n          height: buttonHeight,\r\n          ...style,\r\n        }}\r\n        {...others}\r\n      >\r\n        {renderButtonBody()}\r\n      </ButtonOutlined>\r\n    )\r\n  }\r\n\r\n  if (disabled) {\r\n    return renderButton()\r\n  }\r\n\r\n  return (\r\n    <MouseoverTooltipDesktopOnly\r\n      text={t`Deposit your liquidity positions (i.e. your NFT tokens) into the farming contract. Then stake them into the farm`}\r\n    >\r\n      {renderButton()}\r\n    </MouseoverTooltipDesktopOnly>\r\n  )\r\n}\r\n\r\nexport const WithdrawButton: React.FC<React.ComponentPropsWithoutRef<'button'>> = ({\r\n  disabled,\r\n  onClick,\r\n  style,\r\n  ...others\r\n}) => {\r\n  const upToSmall = useUpToSmall()\r\n  const buttonWidth = upToSmall ? '44px' : 'max-content'\r\n  const buttonHeight = upToSmall ? '44px' : '38px'\r\n\r\n  const renderButtonBody = () => {\r\n    if (upToSmall) {\r\n      return <Withdraw width={24} height={24} />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Withdraw width={20} height={20} />\r\n        <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n          <Trans>Withdraw</Trans>\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderButton = () => {\r\n    return (\r\n      <ButtonOutlined\r\n        colorScheme={ButtonColorScheme.Red}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n        style={{\r\n          width: buttonWidth,\r\n          height: buttonHeight,\r\n          ...style,\r\n        }}\r\n        {...others}\r\n      >\r\n        {renderButtonBody()}\r\n      </ButtonOutlined>\r\n    )\r\n  }\r\n\r\n  if (disabled) {\r\n    return renderButton()\r\n  }\r\n\r\n  return (\r\n    <MouseoverTooltipDesktopOnly\r\n      text={t`Withdraw your liquidity positions (i.e. your NFT tokens) from the farming contract`}\r\n    >\r\n      {renderButton()}\r\n    </MouseoverTooltipDesktopOnly>\r\n  )\r\n}\r\n\r\nexport const HarvestAllButton: React.FC<React.ComponentPropsWithoutRef<'button'>> = ({\r\n  disabled,\r\n  onClick,\r\n  style,\r\n  ...others\r\n}) => {\r\n  const upToSmall = useUpToSmall()\r\n  const buttonWidth = upToSmall ? '44px' : 'max-content'\r\n  const buttonHeight = upToSmall ? '44px' : '38px'\r\n\r\n  const renderButtonBody = () => {\r\n    if (upToSmall) {\r\n      return <Harvest width={24} height={24} />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Harvest width={20} height={20} />\r\n        <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n          <Trans>Harvest All</Trans>\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ButtonOutlined\r\n      onClick={onClick}\r\n      colorScheme={ButtonColorScheme.Gray}\r\n      disabled={disabled}\r\n      style={{\r\n        whiteSpace: 'nowrap',\r\n        width: buttonWidth,\r\n        height: buttonHeight,\r\n        ...style,\r\n      }}\r\n      {...others}\r\n    >\r\n      {renderButtonBody()}\r\n    </ButtonOutlined>\r\n  )\r\n}\r\n\r\nexport const ConnectWalletButton: React.FC<React.ComponentPropsWithoutRef<'button'>> = ({\r\n  onClick,\r\n  style,\r\n  ...others\r\n}) => {\r\n  const upToSmall = useUpToSmall()\r\n  const defaultStyle = upToSmall\r\n    ? {\r\n        flex: '1',\r\n        height: '44px',\r\n      }\r\n    : {}\r\n\r\n  const mergedStyle = {\r\n    ...defaultStyle,\r\n    ...style,\r\n  }\r\n\r\n  return (\r\n    <BtnLight style={mergedStyle} onClick={onClick} {...others}>\r\n      <Trans>Connect Wallet</Trans>\r\n    </BtnLight>\r\n  )\r\n}\r\n\r\nexport const ForceWithdrawButton: React.FC<React.ComponentPropsWithoutRef<'button'>> = ({\r\n  onClick,\r\n  style,\r\n  ...others\r\n}) => {\r\n  const mergedStyle = {\r\n    padding: '8px',\r\n    ...style,\r\n  }\r\n\r\n  return (\r\n    <ButtonOutlined colorScheme={ButtonColorScheme.Red} style={mergedStyle} onClick={onClick} {...others}>\r\n      <Withdraw width={20} height={20} />\r\n      <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n        <Trans>Force Withdraw</Trans>\r\n      </Text>\r\n    </ButtonOutlined>\r\n  )\r\n}\r\n\r\nconst generateActionButtonCSS = (theme: DefaultTheme, colorScheme?: ButtonColorScheme, disabled?: boolean) => {\r\n  const colorMap = {\r\n    [ButtonColorScheme.Red]: theme.red,\r\n    [ButtonColorScheme.Gray]: theme.subText,\r\n    [ButtonColorScheme.Green]: theme.primary,\r\n  }\r\n  colorScheme ||= ButtonColorScheme.Green\r\n  const mainColor = colorMap[colorScheme]\r\n\r\n  return css`\r\n    background-color: ${`${mainColor}20`};\r\n    color: ${mainColor};\r\n\r\n    &:hover {\r\n      background-color: ${!disabled ? darken(0.03, `${mainColor}20`) : undefined};\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: ${!disabled ? `0 0 0 1pt ${darken(0.05, `${mainColor}20`)}` : undefined};\r\n      background-color: ${!disabled ? darken(0.05, `${mainColor}20`) : undefined};\r\n    }\r\n  `\r\n}\r\n\r\nexport const MinimalActionButton = styled(ButtonLight)<{ colorScheme?: ButtonColorScheme }>`\r\n  background-color: ${({ theme }) => rgba(theme.primary, 0.2)};\r\n  width: 28px;\r\n  height: 28px;\r\n  padding: 0;\r\n\r\n  ${({ theme, colorScheme, disabled }) => generateActionButtonCSS(theme, colorScheme, disabled)}\r\n\r\n  :disabled {\r\n    background: ${({ theme }) => theme.buttonGray};\r\n    cursor: not-allowed;\r\n  }\r\n`\r\n\r\nexport const ActionButton = styled(ButtonLight)<{ colorScheme?: ButtonColorScheme }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n\r\n  width: max-content;\r\n  height: 38px;\r\n  padding: 0;\r\n  background-color: ${({ theme }) => rgba(theme.primary, 0.2)};\r\n\r\n  ${({ theme, colorScheme, disabled }) => generateActionButtonCSS(theme, colorScheme, disabled)}\r\n`\r\n","import React, { useContext } from 'react'\r\n\r\nexport type SharePoolSetter = (addr: string) => void\r\nexport const SharePoolContext = React.createContext<SharePoolSetter>(() => {\r\n  // empty\r\n})\r\nexport const useSharePoolContext = () => {\r\n  return useContext(SharePoolContext)\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\r\nimport { computePoolAddress } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport { useState } from 'react'\r\nimport { ArrowDown, ArrowUp, Info } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Divider from 'components/Divider'\r\nimport HoverDropdown from 'components/HoverDropdown'\r\nimport Withdraw from 'components/Icons/Withdraw'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport { MouseoverTooltip, MouseoverTooltipDesktopOnly } from 'components/Tooltip'\r\nimport { ZERO_ADDRESS } from 'constants/index'\r\nimport { NETWORKS_INFO, isEVM } from 'constants/networks'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useProAmmNFTPositionManagerContract } from 'hooks/useContract'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { Dots } from 'pages/Pool/styleds'\r\nimport { useWalletModalToggle } from 'state/application/hooks'\r\nimport { useElasticFarms, useFailedNFTs, useFarmAction } from 'state/farms/elastic/hooks'\r\nimport { FarmingPool, UserInfo } from 'state/farms/elastic/types'\r\nimport { useSingleCallResult } from 'state/multicall/hooks'\r\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\r\nimport { useIsTransactionPending } from 'state/transactions/hooks'\r\nimport { ExternalLink } from 'theme'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nimport { ClickableText, ProMMFarmTableHeader } from '../styleds'\r\nimport Row from './Row'\r\nimport {\r\n  BtnPrimary,\r\n  ConnectWalletButton,\r\n  DepositButton,\r\n  ForceWithdrawButton,\r\n  HarvestAllButton,\r\n  WithdrawButton,\r\n} from './buttons'\r\n\r\nconst FarmContent = styled.div`\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst FarmRow = styled.div`\r\n  height: 68px;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => rgba(theme.buttonBlack, 0.4)};\r\n  padding: 0 1rem;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    width: 100%;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    align-items: flex-start;\r\n  `}\r\n`\r\n\r\ntype Props = {\r\n  address: string\r\n  onOpenModal: (\r\n    modalType: 'forcedWithdraw' | 'harvest' | 'deposit' | 'withdraw' | 'stake' | 'unstake',\r\n    pid?: number | string,\r\n  ) => void\r\n  pools: FarmingPool[]\r\n  userInfo?: UserInfo\r\n}\r\n\r\nenum SORT_FIELD {\r\n  PID = 'pid',\r\n  STAKED_TVL = 'staked_tvl',\r\n  APR = 'apr',\r\n  END_TIME = 'end_time',\r\n  MY_DEPOSIT = 'my_deposit',\r\n  MY_REWARD = 'reward',\r\n}\r\n\r\nenum SORT_DIRECTION {\r\n  ASC = 'asc',\r\n  DESC = 'desc',\r\n}\r\n\r\nconst ProMMFarmGroup: React.FC<Props> = ({ address, onOpenModal, pools, userInfo }) => {\r\n  const theme = useTheme()\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const above768 = useMedia('(min-width: 768px)')\r\n  const above1000 = useMedia('(min-width: 1000px)')\r\n\r\n  const [sortField, setSortField] = useState(SORT_FIELD.PID)\r\n  const [sortDirection, setSortDirection] = useState(SORT_DIRECTION.DESC)\r\n\r\n  const { poolFeeLast24h } = useElasticFarms()\r\n\r\n  const tokenAddressList = pools\r\n    .map(p => [p.token0.wrapped.address, p.token1.wrapped.address, ...p.rewardTokens.map(rw => rw.wrapped.address)])\r\n    .flat()\r\n\r\n  const tokenPrices = useTokenPrices([...new Set(tokenAddressList)])\r\n\r\n  const depositedUsd =\r\n    userInfo?.depositedPositions.reduce(\r\n      (acc, cur) =>\r\n        acc +\r\n        Number(cur.amount0.toExact()) * (tokenPrices[cur.amount0.currency.wrapped.address] || 0) +\r\n        Number(cur.amount1.toExact()) * (tokenPrices[cur.amount1.currency.wrapped.address] || 0),\r\n      0,\r\n    ) || 0\r\n\r\n  const userDepositedTokenAmounts =\r\n    userInfo?.depositedPositions.reduce<{\r\n      [address: string]: CurrencyAmount<Token>\r\n    }>((result, pos) => {\r\n      const address0 = pos.amount0.currency.address\r\n      const address1 = pos.amount1.currency.address\r\n\r\n      if (!result[address0]) result[address0] = pos.amount0\r\n      else result[address0] = result[address0].add(pos.amount0)\r\n\r\n      if (!result[address1]) result[address1] = pos.amount1\r\n      else result[address1] = result[address1].add(pos.amount1)\r\n\r\n      return result\r\n    }, {}) || {}\r\n\r\n  const rewardPendings = Object.values(userInfo?.rewardPendings || {}).flat()\r\n  const rewardUSD =\r\n    rewardPendings.reduce(\r\n      (acc, cur) => acc + Number(cur.toExact()) * (tokenPrices[cur.currency.wrapped.address] || 0),\r\n      0,\r\n    ) || 0\r\n\r\n  const rewardAmounts =\r\n    rewardPendings.reduce<{\r\n      [address: string]: CurrencyAmount<Currency>\r\n    }>((result, amount) => {\r\n      const address = amount.currency.wrapped.address\r\n\r\n      if (!result[address]) result[address] = amount\r\n      else result[address] = result[address].add(amount)\r\n      return result\r\n    }, {}) || {}\r\n\r\n  const sortedPools = pools\r\n    .map(pool => {\r\n      const tvl = pool.stakedTvl\r\n        ? pool.stakedTvl\r\n        : tokenPrices[pool.token0.wrapped.address] * Number(pool.tvlToken0.toExact()) +\r\n          tokenPrices[pool.token1.wrapped.address] * Number(pool.tvlToken1.toExact())\r\n\r\n      const totalRewardValue = pool.totalRewards.reduce(\r\n        (total, rw) => total + Number(rw.toExact()) * tokenPrices[rw.currency.wrapped.address],\r\n        0,\r\n      )\r\n\r\n      const farmDuration = (pool.endTime - pool.startTime) / 86400\r\n      const farmAPR = pool.apr ? pool.apr : (365 * 100 * (totalRewardValue || 0)) / farmDuration / pool.poolTvl\r\n\r\n      let poolAPR = pool.poolAPR || 0\r\n      if (!poolAPR && pool.feesUSD && poolFeeLast24h[pool.poolAddress]) {\r\n        const pool24hFee = pool.feesUSD - poolFeeLast24h[pool.poolAddress]\r\n        poolAPR = (pool24hFee * 100 * 365) / pool.poolTvl\r\n      }\r\n\r\n      const joinedPositions = userInfo?.joinedPositions[pool.pid] || []\r\n      const depositedPositions =\r\n        userInfo?.depositedPositions.filter(pos => {\r\n          return (\r\n            pool.poolAddress.toLowerCase() ===\r\n            computePoolAddress({\r\n              factoryAddress: NETWORKS_INFO[isEVM(chainId) ? chainId : ChainId.MAINNET].elastic.coreFactory,\r\n              tokenA: pos.pool.token0,\r\n              tokenB: pos.pool.token1,\r\n              fee: pos.pool.fee,\r\n              initCodeHashManualOverride:\r\n                NETWORKS_INFO[isEVM(chainId) ? chainId : ChainId.MAINNET].elastic.initCodeHash,\r\n            }).toLowerCase()\r\n          )\r\n        }) || []\r\n\r\n      const depositedUsd = depositedPositions.reduce(\r\n        (usd, pos) =>\r\n          usd +\r\n          Number(pos.amount1.toExact()) * (tokenPrices[pos.pool.token1.address.toLowerCase()] || 0) +\r\n          Number(pos.amount0.toExact()) * (tokenPrices[pos.pool.token0.address.toLowerCase()] || 0),\r\n        0,\r\n      )\r\n\r\n      const stakedUsd = joinedPositions.reduce(\r\n        (usd, pos) =>\r\n          usd +\r\n          Number(pos.amount1.toExact()) * (tokenPrices[pos.pool.token1.address.toLowerCase()] || 0) +\r\n          Number(pos.amount0.toExact()) * (tokenPrices[pos.pool.token0.address.toLowerCase()] || 0),\r\n        0,\r\n      )\r\n\r\n      const rewardPendings =\r\n        userInfo?.rewardPendings[pool.pid] || pool.rewardTokens.map(token => CurrencyAmount.fromRawAmount(token, 0))\r\n\r\n      const rewardUSD = rewardPendings.reduce(\r\n        (acc, cur) => acc + +cur.toExact() * tokenPrices[cur.currency.wrapped.address],\r\n        0,\r\n      )\r\n\r\n      return {\r\n        tvl,\r\n        poolAPR,\r\n        farmAPR,\r\n        depositedUsd,\r\n        stakedUsd,\r\n        rewardUSD,\r\n        ...pool,\r\n      }\r\n    })\r\n    .sort((a, b) => {\r\n      switch (sortField) {\r\n        case SORT_FIELD.PID:\r\n          return sortDirection === SORT_DIRECTION.DESC ? +b.pid - +a.pid : +a.pid - +b.pid\r\n        case SORT_FIELD.STAKED_TVL:\r\n          return sortDirection === SORT_DIRECTION.DESC ? b.tvl - a.tvl : a.tvl - b.tvl\r\n        case SORT_FIELD.APR:\r\n          return sortDirection === SORT_DIRECTION.DESC\r\n            ? b.farmAPR + b.poolAPR - a.farmAPR - a.poolAPR\r\n            : a.farmAPR + a.poolAPR - b.farmAPR - b.poolAPR\r\n        case SORT_FIELD.END_TIME:\r\n          return sortDirection === SORT_DIRECTION.DESC ? b.endTime - a.endTime : a.endTime - b.endTime\r\n        case SORT_FIELD.MY_DEPOSIT:\r\n          return sortDirection === SORT_DIRECTION.DESC\r\n            ? b.depositedUsd - a.depositedUsd\r\n            : a.depositedUsd - b.depositedUsd\r\n        case SORT_FIELD.MY_REWARD:\r\n          return sortDirection === SORT_DIRECTION.DESC ? b.rewardUSD - a.rewardUSD : a.rewardUSD - b.rewardUSD\r\n        default:\r\n          return sortDirection === SORT_DIRECTION.DESC ? +b.pid - +a.pid : +a.pid - +b.pid\r\n      }\r\n    })\r\n\r\n  const failedNFTs = useFailedNFTs()\r\n  const userNFTs: string[] = userInfo?.depositedPositions.map(pos => pos.nftId.toString()) || []\r\n  const hasAffectedByFarmIssue = userNFTs.some(id => failedNFTs.includes(id))\r\n\r\n  const toggleWalletModal = useWalletModalToggle()\r\n  const posManager = useProAmmNFTPositionManagerContract()\r\n\r\n  const res = useSingleCallResult(posManager, 'isApprovedForAll', [account || ZERO_ADDRESS, address])\r\n  const isApprovedForAll = res?.result?.[0]\r\n\r\n  const { approve } = useFarmAction(address)\r\n  const [approvalTx, setApprovalTx] = useState('')\r\n\r\n  const isApprovalTxPending = useIsTransactionPending(approvalTx)\r\n\r\n  const handleApprove = async () => {\r\n    if (!isApprovedForAll) {\r\n      const tx = await approve()\r\n      setApprovalTx(tx)\r\n    }\r\n  }\r\n\r\n  const qs = useParsedQueryString()\r\n  const tab = qs.type || 'active'\r\n\r\n  if (!pools) return null\r\n\r\n  const canHarvest = Object.values(userInfo?.rewardPendings || {}).some(rw => rw.some(item => item.greaterThan('0')))\r\n  const canWithdraw = !!userInfo?.depositedPositions.length\r\n\r\n  const renderApproveButton = () => {\r\n    if (isApprovedForAll || tab === 'ended') {\r\n      return null\r\n    }\r\n\r\n    if (approvalTx && isApprovalTxPending) {\r\n      return (\r\n        <ButtonPrimary\r\n          style={{\r\n            whiteSpace: 'nowrap',\r\n            height: '38px',\r\n            padding: '0 12px',\r\n          }}\r\n          onClick={handleApprove}\r\n          disabled\r\n        >\r\n          <Info width=\"16px\" />\r\n          <Text fontSize=\"14px\" marginLeft=\"8px\">\r\n            <Dots>\r\n              <Trans>Approving</Trans>\r\n            </Dots>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <MouseoverTooltipDesktopOnly\r\n        text={\r\n          <Text color={theme.subText} as=\"span\">\r\n            <Trans>\r\n              Authorize the farming contract so it can access your liquidity positions (i.e. your NFT tokens). Then\r\n              deposit your liquidity positions using the{' '}\r\n              <Text as=\"span\" color={theme.text}>\r\n                Deposit\r\n              </Text>{' '}\r\n              button\r\n            </Trans>\r\n          </Text>\r\n        }\r\n        width=\"400px\"\r\n        placement=\"top\"\r\n      >\r\n        <ButtonPrimary\r\n          style={{\r\n            whiteSpace: 'nowrap',\r\n            height: '38px',\r\n            padding: '0 12px',\r\n          }}\r\n          onClick={handleApprove}\r\n        >\r\n          <Info width=\"16px\" />\r\n          <Text fontSize=\"14px\" marginLeft=\"8px\">\r\n            {approvalTx && isApprovalTxPending ? (\r\n              <Dots>\r\n                <Trans>Approving</Trans>\r\n              </Dots>\r\n            ) : (\r\n              <Trans>Approve Farming Contract</Trans>\r\n            )}\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </MouseoverTooltipDesktopOnly>\r\n    )\r\n  }\r\n\r\n  const renderTopButtonsOnDesktop = () => {\r\n    if (!isApprovedForAll && res?.loading) {\r\n      return <Dots />\r\n    }\r\n\r\n    return (\r\n      <Flex sx={{ gap: '12px' }} alignItems=\"center\">\r\n        {!account ? <ConnectWalletButton onClick={toggleWalletModal} /> : renderApproveButton()}\r\n        <DepositButton\r\n          disabled={!account || !isApprovedForAll || tab === 'ended'}\r\n          onClick={() => onOpenModal('deposit')}\r\n        />\r\n        <WithdrawButton\r\n          disabled={!account || !canWithdraw || !isApprovedForAll}\r\n          onClick={() => onOpenModal('withdraw')}\r\n        />\r\n\r\n        {!!hasAffectedByFarmIssue && <ForceWithdrawButton onClick={() => onOpenModal('forcedWithdraw')} />}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const renderFarmGroupHeaderOnDesktop = () => {\r\n    return (\r\n      <Flex\r\n        sx={{\r\n          alignItems: 'center',\r\n          padding: '0 1rem',\r\n          justifyContent: 'space-between',\r\n          height: '72px',\r\n        }}\r\n      >\r\n        <Text\r\n          sx={{\r\n            fontWeight: 500,\r\n            fontSize: '16px',\r\n            lineHeight: '20px',\r\n            color: theme.subText,\r\n          }}\r\n        >\r\n          <Trans>Farming Contract</Trans>\r\n        </Text>\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            gap: '16px',\r\n          }}\r\n        >\r\n          <Flex\r\n            alignItems=\"center\"\r\n            sx={{\r\n              gap: '12px',\r\n            }}\r\n          >\r\n            <Text fontSize=\"12px\" color={theme.subText}>\r\n              <Trans>Deposited Liquidity</Trans>\r\n              <InfoHelper\r\n                text={t`Total value of liquidity positions (i.e. NFT tokens) you've deposited into the farming contract`}\r\n                placement=\"top\"\r\n              />\r\n            </Text>\r\n\r\n            <HoverDropdown\r\n              style={{ padding: '8px 0' }}\r\n              content={\r\n                account ? (\r\n                  <Text\r\n                    as=\"span\"\r\n                    sx={{\r\n                      fontSize: '16px',\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    {formatDollarAmount(depositedUsd)}\r\n                  </Text>\r\n                ) : (\r\n                  '--'\r\n                )\r\n              }\r\n              hideIcon={!account}\r\n              dropdownContent={\r\n                Object.values(userDepositedTokenAmounts).some(amount => amount.greaterThan(0)) ? (\r\n                  <AutoColumn gap=\"sm\">\r\n                    {Object.values(userDepositedTokenAmounts).map(\r\n                      amount =>\r\n                        amount.greaterThan(0) && (\r\n                          <Flex alignItems=\"center\" key={amount.currency.address}>\r\n                            <CurrencyLogo currency={amount.currency} size=\"16px\" />\r\n                            <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                              {amount.toSignificant(8)}\r\n                            </Text>\r\n                          </Flex>\r\n                        ),\r\n                    )}\r\n                  </AutoColumn>\r\n                ) : (\r\n                  ''\r\n                )\r\n              }\r\n            />\r\n          </Flex>\r\n          {renderTopButtonsOnDesktop()}\r\n        </Flex>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const renderFarmGroupHeaderOnMobile = () => {\r\n    const renderDepositedLiquidity = () => {\r\n      return (\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          justifyContent={'center'}\r\n          sx={{\r\n            gap: '4px',\r\n          }}\r\n        >\r\n          <Text fontSize=\"12px\" color={theme.subText}>\r\n            <Trans>Deposited Liquidity</Trans>\r\n          </Text>\r\n\r\n          <HoverDropdown\r\n            style={{\r\n              padding: '0',\r\n            }}\r\n            content={\r\n              account ? (\r\n                <Text\r\n                  as=\"span\"\r\n                  sx={{\r\n                    fontSize: '16px',\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  {formatDollarAmount(depositedUsd)}\r\n                </Text>\r\n              ) : (\r\n                '--'\r\n              )\r\n            }\r\n            hideIcon={!account}\r\n            dropdownContent={\r\n              Object.values(userDepositedTokenAmounts).some(amount => amount.greaterThan(0)) ? (\r\n                <AutoColumn gap=\"sm\">\r\n                  {Object.values(userDepositedTokenAmounts).map(\r\n                    amount =>\r\n                      amount.greaterThan(0) && (\r\n                        <Flex alignItems=\"center\" key={amount.currency.address}>\r\n                          <CurrencyLogo currency={amount.currency} size=\"16px\" />\r\n                          <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                            {amount.toSignificant(8)}\r\n                          </Text>\r\n                        </Flex>\r\n                      ),\r\n                  )}\r\n                </AutoColumn>\r\n              ) : (\r\n                ''\r\n              )\r\n            }\r\n          />\r\n        </Flex>\r\n      )\r\n    }\r\n\r\n    const renderLeftGroup = () => {\r\n      if (!account) {\r\n        return <ConnectWalletButton onClick={toggleWalletModal} />\r\n      }\r\n\r\n      if (!isApprovedForAll) {\r\n        if (res?.loading) {\r\n          return <Dots />\r\n        }\r\n\r\n        return (\r\n          <ButtonPrimary\r\n            style={{\r\n              whiteSpace: 'nowrap',\r\n              height: '38px',\r\n              padding: '0 12px',\r\n            }}\r\n            onClick={handleApprove}\r\n          >\r\n            <MouseoverTooltip\r\n              text={\r\n                <Text color={theme.subText} as=\"span\">\r\n                  <Trans>\r\n                    Authorize the farming contract so it can access your liquidity positions (i.e. your NFT tokens).\r\n                    Then deposit your liquidity positions using the{' '}\r\n                    <Text as=\"span\" color={theme.text}>\r\n                      Deposit\r\n                    </Text>{' '}\r\n                    button\r\n                  </Trans>\r\n                </Text>\r\n              }\r\n              placement=\"top\"\r\n            >\r\n              <Flex width=\"24px\" height=\"24px\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Info\r\n                  width=\"16px\"\r\n                  height=\"16px\"\r\n                  onClick={e => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                  }}\r\n                />\r\n              </Flex>\r\n            </MouseoverTooltip>\r\n\r\n            <Text fontSize=\"14px\">\r\n              {approvalTx && isApprovalTxPending ? (\r\n                <Dots>\r\n                  <Trans>Approving</Trans>\r\n                </Dots>\r\n              ) : (\r\n                <Trans>Approve</Trans>\r\n              )}\r\n            </Text>\r\n          </ButtonPrimary>\r\n        )\r\n      }\r\n\r\n      return renderDepositedLiquidity()\r\n    }\r\n\r\n    return (\r\n      <Flex\r\n        sx={{\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          height: '72px',\r\n          gap: '8px',\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            height: '100%',\r\n            flex: '1 1',\r\n          }}\r\n        >\r\n          {renderLeftGroup()}\r\n        </Flex>\r\n        <DepositButton\r\n          disabled={!account || !isApprovedForAll || tab === 'ended'}\r\n          onClick={() => onOpenModal('deposit')}\r\n          style={{\r\n            flex: '0 0 44px',\r\n          }}\r\n        />\r\n        <WithdrawButton\r\n          disabled={!account || !canWithdraw || !isApprovedForAll}\r\n          onClick={() => onOpenModal('withdraw')}\r\n          style={{\r\n            flex: '0 0 44px',\r\n          }}\r\n        />\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const handleSortClick = (field: SORT_FIELD) => {\r\n    setSortField(field)\r\n    setSortDirection(prev =>\r\n      sortField !== field\r\n        ? SORT_DIRECTION.DESC\r\n        : prev === SORT_DIRECTION.DESC\r\n        ? SORT_DIRECTION.ASC\r\n        : SORT_DIRECTION.DESC,\r\n    )\r\n  }\r\n\r\n  const renderTableHeaderOnDesktop = () => {\r\n    return (\r\n      <ProMMFarmTableHeader>\r\n        <Flex grid-area=\"token_pairs\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText onClick={() => handleSortClick(SORT_FIELD.PID)}>\r\n            <Trans>Pool</Trans>\r\n            {sortField === SORT_FIELD.PID &&\r\n              (sortDirection === SORT_DIRECTION.DESC ? (\r\n                <ArrowDown size={12} />\r\n              ) : sortDirection === SORT_DIRECTION.ASC ? (\r\n                <ArrowUp size={12} />\r\n              ) : null)}\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"liq\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText\r\n            onClick={() => {\r\n              handleSortClick(SORT_FIELD.STAKED_TVL)\r\n            }}\r\n          >\r\n            <Trans>Staked TVL</Trans>\r\n            {sortField === SORT_FIELD.STAKED_TVL &&\r\n              (sortDirection === SORT_DIRECTION.DESC ? (\r\n                <ArrowDown size={12} />\r\n              ) : sortDirection === SORT_DIRECTION.ASC ? (\r\n                <ArrowUp size={12} />\r\n              ) : null)}\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"apy\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText onClick={() => handleSortClick(SORT_FIELD.APR)}>\r\n            <Trans>AVG APR</Trans>\r\n\r\n            {sortField === SORT_FIELD.APR &&\r\n              (sortDirection === SORT_DIRECTION.DESC ? (\r\n                <ArrowDown size={12} />\r\n              ) : sortDirection === SORT_DIRECTION.ASC ? (\r\n                <ArrowUp size={12} />\r\n              ) : null)}\r\n          </ClickableText>\r\n          <InfoHelper\r\n            text={t`Average estimated return based on yearly fees of the pool and if it's still active, plus bonus rewards of the pool`}\r\n          />\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"end\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <ClickableText onClick={() => handleSortClick(SORT_FIELD.END_TIME)}>\r\n            <Trans>Ending In</Trans>\r\n            {sortField === SORT_FIELD.END_TIME &&\r\n              (sortDirection === SORT_DIRECTION.DESC ? (\r\n                <ArrowDown size={12} />\r\n              ) : sortDirection === SORT_DIRECTION.ASC ? (\r\n                <ArrowUp size={12} />\r\n              ) : null)}\r\n          </ClickableText>\r\n          <InfoHelper text={t`Once a farm has ended, you will continue to receive returns through LP Fees`} />\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"staked_balance\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <HoverDropdown\r\n            padding=\"8px 0\"\r\n            hideIcon\r\n            content={\r\n              <ClickableText onClick={() => handleSortClick(SORT_FIELD.MY_DEPOSIT)}>\r\n                <Flex flex={1}>My Deposit | Target Volume</Flex>{' '}\r\n                {sortField === SORT_FIELD.MY_DEPOSIT &&\r\n                  (sortDirection === SORT_DIRECTION.DESC ? (\r\n                    <ArrowDown size={12} />\r\n                  ) : sortDirection === SORT_DIRECTION.ASC ? (\r\n                    <ArrowUp size={12} />\r\n                  ) : null)}\r\n                <Info size={12} style={{ marginLeft: '4px' }} />\r\n              </ClickableText>\r\n            }\r\n            dropdownContent={\r\n              <Text color={theme.subText} fontSize=\"12px\" maxWidth=\"400px\" lineHeight={1.5}>\r\n                <Trans>\r\n                  Some farms have a target trading volume (represented by the progress bar) to determine the amount of\r\n                  reward you will earn. The more trading volume your liquidity positions support, the more rewards per\r\n                  second you will make.\r\n                  <br />\r\n                  <br />\r\n                  Once you have fully unlocked the target volume, you will start earning the maximum rewards per second.\r\n                  Adjusting the staked amount will recalculate the target volume.\r\n                  <br />\r\n                  Learn more{' '}\r\n                  <ExternalLink href=\"https://docs.kyberswap.com/guides/farming-mechanisms\">here.</ExternalLink>\r\n                </Trans>\r\n              </Text>\r\n            }\r\n          />\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"reward\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n          <ClickableText onClick={() => handleSortClick(SORT_FIELD.MY_REWARD)}>\r\n            <Trans>My Rewards</Trans>\r\n            {sortField === SORT_FIELD.MY_REWARD &&\r\n              (sortDirection === SORT_DIRECTION.DESC ? (\r\n                <ArrowDown size={12} />\r\n              ) : sortDirection === SORT_DIRECTION.ASC ? (\r\n                <ArrowUp size={12} />\r\n              ) : null)}\r\n          </ClickableText>\r\n        </Flex>\r\n\r\n        <Flex grid-area=\"action\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n          <ClickableText>\r\n            <Trans>Actions</Trans>\r\n          </ClickableText>\r\n        </Flex>\r\n      </ProMMFarmTableHeader>\r\n    )\r\n  }\r\n\r\n  const renderRewardRowOnDesktop = () => {\r\n    return (\r\n      <FarmRow>\r\n        <Flex\r\n          alignItems=\"center\"\r\n          sx={{ gap: '24px' }}\r\n          justifyContent={above768 ? 'flex-end' : 'space-between'}\r\n          width={above768 ? undefined : '100%'}\r\n        >\r\n          <Flex\r\n            alignItems=\"center\"\r\n            sx={{\r\n              gap: '8px',\r\n            }}\r\n          >\r\n            <Text fontSize=\"12px\" color={theme.subText}>\r\n              <Trans>Total Rewards</Trans>\r\n            </Text>\r\n\r\n            <HoverDropdown\r\n              style={{ padding: '8px 0' }}\r\n              content={\r\n                account ? (\r\n                  <Text\r\n                    as=\"span\"\r\n                    sx={{\r\n                      fontSize: '16px',\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    {formatDollarAmount(rewardUSD)}\r\n                  </Text>\r\n                ) : (\r\n                  '--'\r\n                )\r\n              }\r\n              hideIcon={!account}\r\n              dropdownContent={\r\n                Object.values(rewardAmounts).length ? (\r\n                  <AutoColumn gap=\"sm\">\r\n                    {Object.values(rewardAmounts).map(\r\n                      amount =>\r\n                        amount.greaterThan(0) && (\r\n                          <Flex alignItems=\"center\" key={amount.currency.wrapped.address}>\r\n                            <CurrencyLogo currency={amount.currency} size=\"16px\" />\r\n                            <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                              {amount.toSignificant(8)}\r\n                            </Text>\r\n                          </Flex>\r\n                        ),\r\n                    )}\r\n                  </AutoColumn>\r\n                ) : (\r\n                  ''\r\n                )\r\n              }\r\n            />\r\n          </Flex>\r\n\r\n          <HarvestAllButton onClick={() => onOpenModal('harvest')} disabled={!account || !canHarvest} />\r\n        </Flex>\r\n\r\n        {hasAffectedByFarmIssue && !above768 && (\r\n          <BtnPrimary\r\n            style={{ color: theme.red, border: `1px solid ${theme.red}`, background: theme.red + '33' }}\r\n            padding={'12px'}\r\n            onClick={() => onOpenModal('forcedWithdraw')}\r\n          >\r\n            <Withdraw width={20} height={20} />\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              <Trans>Force Withdraw</Trans>\r\n            </Text>\r\n          </BtnPrimary>\r\n        )}\r\n      </FarmRow>\r\n    )\r\n  }\r\n\r\n  const renderRewardRowOnMobile = () => {\r\n    return (\r\n      <Flex\r\n        sx={{\r\n          height: '68px',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          justifyContent={'center'}\r\n          sx={{\r\n            gap: '4px',\r\n          }}\r\n        >\r\n          <Text fontSize=\"12px\" color={theme.subText}>\r\n            <Trans>Total Rewards</Trans>\r\n          </Text>\r\n\r\n          <HoverDropdown\r\n            style={{ padding: '0' }}\r\n            content={\r\n              account ? (\r\n                <Text\r\n                  as=\"span\"\r\n                  sx={{\r\n                    fontSize: '16px',\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  {formatDollarAmount(rewardUSD)}\r\n                </Text>\r\n              ) : (\r\n                '--'\r\n              )\r\n            }\r\n            hideIcon={!account}\r\n            dropdownContent={\r\n              Object.values(rewardAmounts).length ? (\r\n                <AutoColumn gap=\"sm\">\r\n                  {Object.values(rewardAmounts).map(\r\n                    amount =>\r\n                      amount.greaterThan(0) && (\r\n                        <Flex alignItems=\"center\" key={amount.currency.wrapped.address}>\r\n                          <CurrencyLogo currency={amount.currency} size=\"16px\" />\r\n                          <Text fontSize=\"12px\" marginLeft=\"4px\">\r\n                            {amount.toSignificant(8)}\r\n                          </Text>\r\n                        </Flex>\r\n                      ),\r\n                  )}\r\n                </AutoColumn>\r\n              ) : (\r\n                ''\r\n              )\r\n            }\r\n          />\r\n        </Flex>\r\n\r\n        <HarvestAllButton onClick={() => onOpenModal('harvest')} disabled={!account || !canHarvest} />\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <FarmContent data-testid=\"farm-block\">\r\n      {above1000 ? (\r\n        <>\r\n          {renderFarmGroupHeaderOnDesktop()}\r\n          {renderTableHeaderOnDesktop()}\r\n          {renderRewardRowOnDesktop()}\r\n        </>\r\n      ) : (\r\n        <Flex flexDirection=\"column\" padding=\"0 1rem\" sx={{ backgroundColor: rgba(theme.buttonBlack, 0.4) }}>\r\n          {renderFarmGroupHeaderOnMobile()}\r\n          <Divider />\r\n          {renderRewardRowOnMobile()}\r\n          {!!hasAffectedByFarmIssue && (\r\n            <ForceWithdrawButton\r\n              style={{ width: '100%', marginBottom: '1rem' }}\r\n              onClick={() => onOpenModal('forcedWithdraw')}\r\n            />\r\n          )}\r\n        </Flex>\r\n      )}\r\n\r\n      <Divider />\r\n\r\n      {sortedPools.map(pool => {\r\n        return (\r\n          <Row\r\n            isUserAffectedByFarmIssue={hasAffectedByFarmIssue}\r\n            isApprovedForAll={isApprovedForAll}\r\n            pool={pool}\r\n            key={pool.id}\r\n            onOpenModal={onOpenModal}\r\n            fairlaunchAddress={address}\r\n            onHarvest={() => {\r\n              onOpenModal('harvest', Number(pool.pid))\r\n            }}\r\n          />\r\n        )\r\n      })}\r\n    </FarmContent>\r\n  )\r\n}\r\n\r\nexport default ProMMFarmGroup\r\n","import { ChainId, CurrencyAmount, Fraction } from '@kyberswap/ks-sdk-core'\r\nimport { computePoolAddress } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { useEffect, useState } from 'react'\r\nimport { Info, Minus, Plus, Share2 } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport CopyHelper from 'components/Copy'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\nimport { MoneyBag } from 'components/Icons'\r\nimport Harvest from 'components/Icons/Harvest'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport Modal from 'components/Modal'\r\nimport { MouseoverTooltip, MouseoverTooltipDesktopOnly } from 'components/Tooltip'\r\nimport { ELASTIC_BASE_FEE_UNIT } from 'constants/index'\r\nimport { NETWORKS_INFO, isEVM } from 'constants/networks'\r\nimport { TOBE_EXTENDED_FARMING_POOLS } from 'constants/v2'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useProMMFarmContract } from 'hooks/useContract'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useElasticFarms } from 'state/farms/elastic/hooks'\r\nimport { FarmingPool } from 'state/farms/elastic/types'\r\nimport { ExternalLink } from 'theme'\r\nimport { shortenAddress } from 'utils'\r\nimport { getFormattedTimeFromSecond } from 'utils/formatTime'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nimport { ModalContentWrapper } from '../ElasticFarmModals/styled'\r\nimport { APRTooltipContent } from '../FarmingPoolAPRCell'\r\nimport { useSharePoolContext } from '../SharePoolContext'\r\nimport { InfoRow, ProMMFarmTableRow, ProMMFarmTableRowMobile, RewardMobileArea } from '../styleds'\r\nimport { ActionButton, ButtonColorScheme, MinimalActionButton } from './buttons'\r\n\r\nconst ButtonGroupContainerOnMobile = styled.div`\r\n  display: flex;\r\n  margin-top: 1.25rem;\r\n  gap: 16px;\r\n\r\n  /* this is to make sure all buttons (including those with tooltips) take up even space */\r\n  > * {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst FeeTargetWrapper = styled.div<{ fullUnlock: boolean }>`\r\n  border-radius: 999px;\r\n  display: flex;\r\n  font-size: 12px;\r\n  background: ${({ theme, fullUnlock }) => (fullUnlock ? theme.primary : theme.subText)};\r\n  position: relative;\r\n  color: ${({ theme }) => theme.textReverse};\r\n  height: 4px;\r\n  align-items: center;\r\n  min-width: 140px;\r\n  max-width: 200px;\r\n  position: relative;\r\n  margin-top: 4px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst FeeArchive = styled.div<{ width: number }>`\r\n  width: ${({ width }) => `${width}%`};\r\n  height: 100%;\r\n  background: ${({ theme, width }) => (width === 100 ? theme.primary : theme.warning)};\r\n  border-radius: 999px;\r\n`\r\n\r\nconst FeeTarget = ({ percent }: { percent: string }) => {\r\n  const p = Number(percent)\r\n  const theme = useTheme()\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\" fontSize=\"12px\" color={theme.subText} marginTop=\"4px\" maxWidth=\"200px\">\r\n        <Trans>Target Volume</Trans>\r\n        {p >= 100 ? <Text color={theme.primary}>✓</Text> : <div>{p.toFixed(2)}%</div>}\r\n      </Flex>\r\n      <FeeTargetWrapper fullUnlock={p >= 100}>\r\n        <FeeArchive width={p}></FeeArchive>\r\n      </FeeTargetWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface Pool extends FarmingPool {\r\n  tvl: number\r\n  poolAPR: number\r\n  farmAPR: number\r\n  depositedUsd: number\r\n  stakedUsd: number\r\n}\r\n\r\nconst Row = ({\r\n  isApprovedForAll,\r\n  fairlaunchAddress,\r\n  pool: farmingPool,\r\n  onOpenModal,\r\n  onHarvest,\r\n  isUserAffectedByFarmIssue,\r\n}: {\r\n  isUserAffectedByFarmIssue: boolean\r\n  isApprovedForAll: boolean\r\n  fairlaunchAddress: string\r\n  pool: Pool\r\n  onOpenModal: (modalType: 'deposit' | 'withdraw' | 'stake' | 'unstake', pid?: number | string) => void\r\n  onHarvest: () => void\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const theme = useTheme()\r\n  const currentTimestamp = Math.floor(Date.now() / 1000)\r\n  const above1000 = useMedia('(min-width: 1000px)')\r\n  const { type: tab = 'active' } = useParsedQueryString<{ type: string }>()\r\n\r\n  const { userFarmInfo } = useElasticFarms()\r\n\r\n  const joinedPositions = userFarmInfo?.[fairlaunchAddress]?.joinedPositions[farmingPool.pid] || []\r\n  const depositedPositions =\r\n    userFarmInfo?.[fairlaunchAddress]?.depositedPositions.filter(pos => {\r\n      return (\r\n        farmingPool.poolAddress.toLowerCase() ===\r\n        computePoolAddress({\r\n          factoryAddress: NETWORKS_INFO[isEVM(chainId) ? chainId : ChainId.MAINNET].elastic.coreFactory,\r\n          tokenA: pos.pool.token0,\r\n          tokenB: pos.pool.token1,\r\n          fee: pos.pool.fee,\r\n          initCodeHashManualOverride: NETWORKS_INFO[isEVM(chainId) ? chainId : ChainId.MAINNET].elastic.initCodeHash,\r\n        }).toLowerCase()\r\n      )\r\n    }) || []\r\n\r\n  const rewardPendings =\r\n    userFarmInfo?.[fairlaunchAddress]?.rewardPendings[farmingPool.pid] ||\r\n    farmingPool.rewardTokens.map(token => CurrencyAmount.fromRawAmount(token, 0))\r\n\r\n  const contract = useProMMFarmContract(fairlaunchAddress)\r\n  const [targetPercent, setTargetPercent] = useState('')\r\n\r\n  useEffect(() => {\r\n    const getFeeTargetInfo = async () => {\r\n      if (!contract || farmingPool.feeTarget === '0') return\r\n      const userJoinedPos = userFarmInfo?.[fairlaunchAddress].joinedPositions[farmingPool.pid] || []\r\n\r\n      if (!userJoinedPos.length) {\r\n        setTargetPercent('')\r\n        return\r\n      }\r\n\r\n      const res = await Promise.all(\r\n        userJoinedPos.map(async pos => {\r\n          const res = await contract.getRewardCalculationData(pos.nftId, farmingPool.pid)\r\n          return new Fraction(res.vestingVolume.toString(), BigNumber.from(1e12).toString())\r\n        }),\r\n      )\r\n\r\n      const totalLiquidity =\r\n        userJoinedPos.reduce((acc, cur) => acc.add(cur.liquidity.toString()), BigNumber.from(0)) || BigNumber.from(0)\r\n\r\n      const targetLiqid = userJoinedPos.reduce(\r\n        (acc, cur, index) => acc.add(res[index].multiply(cur.liquidity.toString())),\r\n        new Fraction(0, 1),\r\n      )\r\n\r\n      if (totalLiquidity.gt(0)) {\r\n        const t = targetLiqid.multiply(100).divide(totalLiquidity.toString())\r\n        setTargetPercent(t.toFixed(2))\r\n      }\r\n    }\r\n\r\n    getFeeTargetInfo()\r\n  }, [contract, farmingPool.feeTarget, fairlaunchAddress, farmingPool.pid, userFarmInfo])\r\n\r\n  const canStake = depositedPositions.some(pos => {\r\n    const stakedPos = joinedPositions.find(j => j.nftId.toString() === pos.nftId.toString())\r\n    return !stakedPos\r\n      ? true\r\n      : BigNumber.from(pos.liquidity.toString()).gt(BigNumber.from(stakedPos.liquidity.toString()))\r\n  })\r\n\r\n  const canHarvest = rewardPendings.some(amount => amount.greaterThan(0))\r\n\r\n  const canUnstake = !!joinedPositions.length\r\n  const isFarmStarted = farmingPool.startTime <= currentTimestamp\r\n\r\n  const setSharePoolAddress = useSharePoolContext()\r\n\r\n  const [showTargetVolInfo, setShowTargetVolInfo] = useState(false)\r\n\r\n  const amountCanStaked = farmingPool.depositedUsd - farmingPool.stakedUsd\r\n\r\n  if (!above1000) {\r\n    const renderStakeButtonOnMobile = () => {\r\n      if (isUserAffectedByFarmIssue) {\r\n        return (\r\n          <MouseoverTooltipDesktopOnly\r\n            text={t`This farm is currently under maintenance. You can deposit your liquidity into the new farms instead. Your withdrawals are not affected.`}\r\n            placement=\"top\"\r\n            width=\"300px\"\r\n          >\r\n            <ActionButton\r\n              style={{\r\n                // simulate disabled state\r\n                // MouseoverTooltipDesktopOnly will not work well with `disabled` attribute\r\n                cursor: 'not-allowed',\r\n                width: '100%',\r\n                backgroundColor: theme.buttonGray,\r\n                color: theme.border,\r\n              }}\r\n            >\r\n              <Plus width={20} height={20} />\r\n              <Text fontSize={14}>\r\n                <Trans>Stake</Trans>\r\n              </Text>\r\n            </ActionButton>\r\n          </MouseoverTooltipDesktopOnly>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <ActionButton\r\n          disabled={!isApprovedForAll || tab === 'ended' || !isFarmStarted || !canStake}\r\n          style={{ flex: 1 }}\r\n          onClick={() => onOpenModal('stake', farmingPool.pid)}\r\n        >\r\n          <Plus width={20} height={20} />\r\n          <Text fontSize={14}>\r\n            <Trans>Stake</Trans>\r\n          </Text>\r\n        </ActionButton>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal onDismiss={() => setShowTargetVolInfo(false)} isOpen={showTargetVolInfo}>\r\n          <ModalContentWrapper>\r\n            <Text fontSize=\"12px\" marginBottom=\"24px\" lineHeight={1.5}>\r\n              <Trans>\r\n                Some farms have a target trading volume (represented by the progress bar) that your liquidity positions\r\n                need to fully unlock to start earning maximum farming rewards. This target volume ensures that your\r\n                liquidity positions are supporting the pools trading volume.\r\n                <br />\r\n                <br />\r\n                Based on the progress of your target volume, you will still earn partial farming rewards. But once you\r\n                fully unlock your target volume, your liquidity position(s) will start earning maximum rewards.\r\n                Adjusting your liquidity position(s) staked in the farm will recalculate this volume target.\r\n              </Trans>\r\n            </Text>\r\n\r\n            <ButtonPrimary\r\n              as={ExternalLink}\r\n              href=\"https://docs.kyberswap.com/guides/farming-mechanisms\"\r\n              style={{ color: theme.textReverse }}\r\n            >\r\n              <Trans>Learn More</Trans>\r\n            </ButtonPrimary>\r\n          </ModalContentWrapper>\r\n        </Modal>\r\n\r\n        <ProMMFarmTableRowMobile>\r\n          <Flex alignItems=\"center\" marginBottom=\"20px\">\r\n            <DoubleCurrencyLogo currency0={farmingPool.token0} currency1={farmingPool.token1} size={20} />\r\n            <Link\r\n              to={`/elastic/add/${\r\n                farmingPool.token0.isNative ? farmingPool.token0.symbol : farmingPool.token0.address\r\n              }/${farmingPool.token1.isNative ? farmingPool.token1.symbol : farmingPool.token1.address}/${\r\n                farmingPool.pool.fee\r\n              }`}\r\n            >\r\n              <Text fontSize={16} fontWeight=\"500\">\r\n                {farmingPool.token0.symbol} - {farmingPool.token1.symbol}\r\n              </Text>\r\n            </Link>\r\n          </Flex>\r\n\r\n          <Flex\r\n            marginTop=\"0.5rem\"\r\n            alignItems=\"center\"\r\n            sx={{ gap: '4px' }}\r\n            fontSize=\"12px\"\r\n            color={theme.subText}\r\n            width=\"max-content\"\r\n          >\r\n            <Text>Fee = {(farmingPool.pool.fee * 100) / ELASTIC_BASE_FEE_UNIT}%</Text>\r\n            <Text color={theme.subText}>|</Text>\r\n\r\n            <Flex alignItems=\"center\">\r\n              <Text>{shortenAddress(chainId, farmingPool.poolAddress, 2)}</Text>\r\n              <CopyHelper toCopy={farmingPool.poolAddress} />\r\n            </Flex>\r\n          </Flex>\r\n\r\n          <InfoRow>\r\n            <Text color={theme.subText}>\r\n              <Trans>Staked TVL</Trans>\r\n            </Text>\r\n            <Text>{formatDollarAmount(farmingPool.tvl)}</Text>\r\n          </InfoRow>\r\n\r\n          <InfoRow>\r\n            <Text color={theme.subText}>\r\n              <Trans>AVG APR</Trans>\r\n              <InfoHelper\r\n                text={\r\n                  tab === 'active'\r\n                    ? t`Average estimated return based on yearly fees and bonus rewards of the pool`\r\n                    : t`Average estimated return based on yearly fees of the pool plus bonus rewards from the farm`\r\n                }\r\n              />\r\n            </Text>\r\n            <Flex alignItems={'center'} sx={{ gap: '4px' }} color={theme.apr}>\r\n              <Text as=\"span\">{(farmingPool.farmAPR + farmingPool.poolAPR).toFixed(2)}%</Text>\r\n              <MouseoverTooltip\r\n                width=\"fit-content\"\r\n                placement=\"top\"\r\n                text={<APRTooltipContent farmAPR={farmingPool.farmAPR} poolAPR={farmingPool.poolAPR} />}\r\n              >\r\n                <MoneyBag size={16} color={theme.apr} />\r\n              </MouseoverTooltip>\r\n            </Flex>\r\n          </InfoRow>\r\n\r\n          <InfoRow>\r\n            <Text color={theme.subText}>\r\n              <Trans>Vesting</Trans>\r\n              <InfoHelper\r\n                text={t`After harvesting, your rewards will unlock linearly over the indicated time period`}\r\n              />\r\n            </Text>\r\n            <Text>{getFormattedTimeFromSecond(farmingPool.vestingDuration, true)}</Text>\r\n          </InfoRow>\r\n\r\n          <InfoRow>\r\n            <Text color={theme.subText}>\r\n              <Trans>Ending In</Trans>\r\n              <InfoHelper text={t`Once a farm has ended, you will continue to receive returns through LP Fees`} />\r\n            </Text>\r\n\r\n            <Flex flexDirection=\"column\" alignItems=\"flex-end\" justifyContent=\"center\" sx={{ gap: '8px' }}>\r\n              {farmingPool.startTime > currentTimestamp ? (\r\n                <>\r\n                  <Text color={theme.subText} fontSize=\"12px\">\r\n                    <Trans>New phase will start in</Trans>\r\n                  </Text>\r\n                  {getFormattedTimeFromSecond(farmingPool.startTime - currentTimestamp)}\r\n                </>\r\n              ) : farmingPool.endTime > currentTimestamp ? (\r\n                <>\r\n                  <Text color={theme.subText} fontSize=\"12px\">\r\n                    <Trans>Current phase will end in</Trans>\r\n                  </Text>\r\n                  {getFormattedTimeFromSecond(farmingPool.endTime - currentTimestamp)}\r\n                </>\r\n              ) : TOBE_EXTENDED_FARMING_POOLS.includes(farmingPool.poolAddress.toLowerCase()) ? (\r\n                <Trans>To be extended soon</Trans>\r\n              ) : (\r\n                <Trans>ENDED</Trans>\r\n              )}\r\n            </Flex>\r\n          </InfoRow>\r\n\r\n          {targetPercent && (\r\n            <InfoRow>\r\n              <Text color={theme.subText} alignItems=\"center\" display=\"flex\" onClick={() => setShowTargetVolInfo(true)}>\r\n                <Trans>Target Volume</Trans>\r\n                <Info size={12} style={{ marginLeft: '4px' }} />\r\n              </Text>\r\n\r\n              <Flex justifyContent=\"flex-end\" flexDirection=\"column\">\r\n                {targetPercent && <FeeTarget percent={targetPercent} />}\r\n              </Flex>\r\n            </InfoRow>\r\n          )}\r\n          <InfoRow>\r\n            <Text color={theme.subText}>\r\n              <Trans>My Deposit</Trans>\r\n            </Text>\r\n\r\n            <Flex justifyContent=\"flex-end\" color={amountCanStaked ? theme.warning : theme.text}>\r\n              {!!farmingPool.depositedUsd ? formatDollarAmount(farmingPool.depositedUsd) : '--'}\r\n              {!!amountCanStaked && (\r\n                <InfoHelper\r\n                  color={theme.warning}\r\n                  text={t`You still have ${formatDollarAmount(\r\n                    amountCanStaked,\r\n                  )} liquidity to stake to earn more rewards`}\r\n                />\r\n              )}\r\n            </Flex>\r\n          </InfoRow>\r\n\r\n          <InfoRow>\r\n            <Text color={theme.subText}>\r\n              <Trans>My Rewards</Trans>\r\n            </Text>\r\n          </InfoRow>\r\n\r\n          <RewardMobileArea>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\" marginBottom=\"8px\" sx={{ gap: '4px' }}>\r\n              {rewardPendings.map((amount, i) => (\r\n                <Flex alignItems=\"center\" sx={{ gap: '4px' }} key={amount.currency.symbol || i}>\r\n                  <HoverInlineText text={amount.toSignificant(6)} maxCharacters={10}></HoverInlineText>\r\n                  <MouseoverTooltip placement=\"top\" text={amount.currency.symbol} width=\"fit-content\">\r\n                    <CurrencyLogo currency={amount.currency} size=\"16px\" />\r\n                  </MouseoverTooltip>\r\n                </Flex>\r\n              ))}\r\n            </Flex>\r\n\r\n            <ActionButton\r\n              style={{ width: '100%' }}\r\n              colorScheme={canHarvest ? ButtonColorScheme.Green : ButtonColorScheme.Gray}\r\n              onClick={onHarvest}\r\n              disabled={!canHarvest}\r\n            >\r\n              <Harvest />\r\n              <Text as=\"span\" fontSize=\"14px\">\r\n                <Trans>Harvest</Trans>\r\n              </Text>\r\n            </ActionButton>\r\n          </RewardMobileArea>\r\n\r\n          <ButtonGroupContainerOnMobile>\r\n            <ActionButton\r\n              colorScheme={ButtonColorScheme.Red}\r\n              style={{ flex: 1 }}\r\n              onClick={() => onOpenModal('unstake', Number(farmingPool.pid))}\r\n              disabled={!canUnstake}\r\n            >\r\n              <Minus width={20} height={20} />\r\n              <Text fontSize={14}>\r\n                <Trans>Unstake</Trans>\r\n              </Text>\r\n            </ActionButton>\r\n            {renderStakeButtonOnMobile()}\r\n          </ButtonGroupContainerOnMobile>\r\n        </ProMMFarmTableRowMobile>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderStakeButton = () => {\r\n    if (isUserAffectedByFarmIssue) {\r\n      return (\r\n        <MouseoverTooltipDesktopOnly\r\n          text={t`This farm is currently under maintenance. You can deposit your liquidity into the new farms instead. Your withdrawals are not affected.`}\r\n          placement=\"top\"\r\n          width=\"300px\"\r\n        >\r\n          <MinimalActionButton\r\n            style={{\r\n              cursor: 'not-allowed',\r\n              backgroundColor: theme.buttonGray,\r\n              opacity: 0.4,\r\n            }}\r\n          >\r\n            <Plus size={16} />\r\n          </MinimalActionButton>\r\n        </MouseoverTooltipDesktopOnly>\r\n      )\r\n    }\r\n\r\n    if (!isApprovedForAll || tab === 'ended' || !canStake) {\r\n      return (\r\n        <MinimalActionButton disabled>\r\n          <Plus size={16} />\r\n        </MinimalActionButton>\r\n      )\r\n    }\r\n\r\n    if (!isFarmStarted) {\r\n      return (\r\n        <MouseoverTooltipDesktopOnly text={t`Farm has not started`} placement=\"top\" width=\"fit-content\">\r\n          <MinimalActionButton\r\n            style={{\r\n              cursor: 'not-allowed',\r\n              backgroundColor: theme.buttonGray,\r\n              color: theme.border,\r\n            }}\r\n          >\r\n            <Plus size={16} />\r\n          </MinimalActionButton>\r\n        </MouseoverTooltipDesktopOnly>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <MouseoverTooltipDesktopOnly\r\n        text={t`Stake your liquidity positions (i.e. your NFT tokens) into the farm to start earning rewards`}\r\n        placement=\"top\"\r\n        width=\"300px\"\r\n      >\r\n        <MinimalActionButton onClick={() => onOpenModal('stake', Number(farmingPool.pid))}>\r\n          <Plus size={16} />\r\n        </MinimalActionButton>\r\n      </MouseoverTooltipDesktopOnly>\r\n    )\r\n  }\r\n\r\n  const renderUnstakeButton = () => {\r\n    if (!canUnstake) {\r\n      return (\r\n        <MinimalActionButton colorScheme={ButtonColorScheme.Red} disabled={!canUnstake}>\r\n          <Minus size={16} />\r\n        </MinimalActionButton>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <MouseoverTooltipDesktopOnly\r\n        text={t`Unstake your liquidity positions (i.e. your NFT tokens) from the farm`}\r\n        placement=\"top\"\r\n        width=\"300px\"\r\n      >\r\n        <MinimalActionButton\r\n          colorScheme={ButtonColorScheme.Red}\r\n          onClick={() => onOpenModal('unstake', Number(farmingPool.pid))}\r\n        >\r\n          <Minus size={16} />\r\n        </MinimalActionButton>\r\n      </MouseoverTooltipDesktopOnly>\r\n    )\r\n  }\r\n\r\n  const renderHarvestButton = () => {\r\n    if (!canHarvest) {\r\n      return (\r\n        <MinimalActionButton colorScheme={ButtonColorScheme.Gray} disabled>\r\n          <Harvest />\r\n        </MinimalActionButton>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <MouseoverTooltipDesktopOnly text={t`Harvest`} placement=\"top\" width=\"fit-content\">\r\n        <MinimalActionButton colorScheme={ButtonColorScheme.Gray} onClick={onHarvest}>\r\n          <Harvest />\r\n        </MinimalActionButton>\r\n      </MouseoverTooltipDesktopOnly>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ProMMFarmTableRow>\r\n      <div>\r\n        <Flex alignItems=\"center\">\r\n          <DoubleCurrencyLogo currency0={farmingPool.token0} currency1={farmingPool.token1} />\r\n          <Link\r\n            to={`/elastic/add/${farmingPool.token0.isNative ? farmingPool.token0.symbol : farmingPool.token0.address}/${\r\n              farmingPool.token1.isNative ? farmingPool.token1.symbol : farmingPool.token1.address\r\n            }/${farmingPool.pool.fee}`}\r\n            style={{\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            <Text fontSize={14} fontWeight={500}>\r\n              {farmingPool.token0.symbol} - {farmingPool.token1.symbol}\r\n            </Text>\r\n          </Link>\r\n\r\n          <Flex\r\n            onClick={() => {\r\n              setSharePoolAddress(farmingPool.poolAddress)\r\n            }}\r\n            sx={{\r\n              marginLeft: '8px',\r\n              cursor: 'pointer',\r\n            }}\r\n            role=\"button\"\r\n          >\r\n            <Share2 size=\"14px\" color={theme.subText} />\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Flex\r\n          marginTop=\"0.5rem\"\r\n          alignItems=\"center\"\r\n          sx={{ gap: '3px' }}\r\n          fontSize=\"12px\"\r\n          color={theme.subText}\r\n          width=\"max-content\"\r\n        >\r\n          <Text>Fee = {(farmingPool.pool.fee * 100) / ELASTIC_BASE_FEE_UNIT}%</Text>\r\n          <Text color={theme.subText}>|</Text>\r\n\r\n          <Flex alignItems=\"center\">\r\n            <Text>{shortenAddress(chainId, farmingPool.poolAddress, 2)}</Text>\r\n            <CopyHelper toCopy={farmingPool.poolAddress} />\r\n          </Flex>\r\n        </Flex>\r\n      </div>\r\n\r\n      <Text textAlign=\"left\">{formatDollarAmount(farmingPool.tvl)}</Text>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        color={theme.apr}\r\n        sx={{\r\n          gap: '4px',\r\n        }}\r\n      >\r\n        {(farmingPool.farmAPR + farmingPool.poolAPR).toFixed(2)}%\r\n        <MouseoverTooltip\r\n          width=\"fit-content\"\r\n          placement=\"right\"\r\n          text={<APRTooltipContent farmAPR={farmingPool.farmAPR} poolAPR={farmingPool.poolAPR} />}\r\n        >\r\n          <MoneyBag size={16} color={theme.apr} />\r\n        </MouseoverTooltip>\r\n      </Flex>\r\n\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" justifyContent=\"center\" sx={{ gap: '8px' }}>\r\n        {farmingPool.startTime > currentTimestamp ? (\r\n          <>\r\n            <Text color={theme.subText} fontSize=\"12px\">\r\n              <Trans>New phase will start in</Trans>\r\n            </Text>\r\n            {getFormattedTimeFromSecond(farmingPool.startTime - currentTimestamp)}\r\n          </>\r\n        ) : farmingPool.endTime > currentTimestamp ? (\r\n          <>\r\n            <Text color={theme.subText} fontSize=\"12px\">\r\n              <Trans>Current phase will end in</Trans>\r\n            </Text>\r\n            {getFormattedTimeFromSecond(farmingPool.endTime - currentTimestamp)}\r\n          </>\r\n        ) : TOBE_EXTENDED_FARMING_POOLS.includes(farmingPool.poolAddress.toLowerCase()) ? (\r\n          <Trans>To be extended soon</Trans>\r\n        ) : (\r\n          <Trans>ENDED</Trans>\r\n        )}\r\n      </Flex>\r\n\r\n      <div>\r\n        {amountCanStaked ? (\r\n          <Flex justifyContent=\"flex-start\" color={theme.warning}>\r\n            {formatDollarAmount(farmingPool.depositedUsd)}\r\n            <InfoHelper\r\n              placement=\"top\"\r\n              color={theme.warning}\r\n              width={'270px'}\r\n              text={\r\n                <Flex\r\n                  sx={{\r\n                    flexDirection: 'column',\r\n                    gap: '6px',\r\n                    fontSize: '12px',\r\n                    lineHeight: '16px',\r\n                    fontWeight: 400,\r\n                  }}\r\n                >\r\n                  <Text as=\"span\" color={theme.subText}>\r\n                    <Trans>\r\n                      You still have {formatDollarAmount(amountCanStaked)} in liquidity to stake to earn even more\r\n                      farming rewards\r\n                    </Trans>\r\n                  </Text>\r\n                  <Text as=\"span\" color={theme.text}>\r\n                    Staked: {formatDollarAmount(farmingPool.stakedUsd)}\r\n                  </Text>\r\n                  <Text as=\"span\" color={theme.warning}>\r\n                    Not staked: {formatDollarAmount(amountCanStaked)}\r\n                  </Text>\r\n                </Flex>\r\n              }\r\n            />\r\n          </Flex>\r\n        ) : (\r\n          <Flex justifyContent=\"flex-start\" color={theme.text}>\r\n            {farmingPool.depositedUsd ? formatDollarAmount(farmingPool.depositedUsd) : '--'}\r\n          </Flex>\r\n        )}\r\n\r\n        {targetPercent && <FeeTarget percent={targetPercent} />}\r\n      </div>\r\n\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\" sx={{ gap: '8px' }}>\r\n        {rewardPendings.map((amount, i) => (\r\n          <Flex alignItems=\"center\" sx={{ gap: '4px' }} key={amount.currency.symbol || i}>\r\n            <HoverInlineText text={amount.toSignificant(6)} maxCharacters={10}></HoverInlineText>\r\n            <MouseoverTooltip placement=\"top\" text={amount.currency.symbol} width=\"fit-content\">\r\n              <CurrencyLogo currency={amount.currency} size=\"16px\" />\r\n            </MouseoverTooltip>\r\n          </Flex>\r\n        ))}\r\n      </Flex>\r\n      <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }}>\r\n        {renderStakeButton()}\r\n        {renderUnstakeButton()}\r\n        {renderHarvestButton()}\r\n      </Flex>\r\n    </ProMMFarmTableRow>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import { Position } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Info, X } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport RangeBadge from 'components/Badge/RangeBadge'\r\nimport { ButtonEmpty, ButtonPrimary } from 'components/Button'\r\nimport Checkbox from 'components/CheckBox'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport HoverDropdown from 'components/HoverDropdown'\r\nimport LocalLoader from 'components/LocalLoader'\r\nimport Modal from 'components/Modal'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { usePool } from 'hooks/usePools'\r\nimport { useProAmmPositions } from 'hooks/useProAmmPositions'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useElasticFarms, useFarmAction, usePositionFilter } from 'state/farms/elastic/hooks'\r\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\r\nimport { StyledInternalLink } from 'theme'\r\nimport { PositionDetails } from 'types/position'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nimport {\r\n  DropdownIcon,\r\n  ModalContentWrapper,\r\n  Select,\r\n  SelectMenu,\r\n  SelectOption,\r\n  TableHeader,\r\n  TableRow,\r\n  Title,\r\n} from './styled'\r\n\r\nconst PositionRow = ({\r\n  position,\r\n  onChange,\r\n  selected,\r\n}: {\r\n  selected: boolean\r\n  position: PositionDetails\r\n  onChange: (value: boolean) => void\r\n}) => {\r\n  const { token0: token0Address, token1: token1Address, fee: feeAmount, liquidity, tickLower, tickUpper } = position\r\n\r\n  const token0 = useToken(token0Address)\r\n  const token1 = useToken(token1Address)\r\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\r\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\r\n\r\n  const usdPrices = useTokenPrices([token0Address, token1Address])\r\n\r\n  // construct Position from details returned\r\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, feeAmount)\r\n\r\n  const positionSDK = useMemo(() => {\r\n    if (pool) {\r\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\r\n    }\r\n    return undefined\r\n  }, [liquidity, pool, tickLower, tickUpper])\r\n\r\n  const removed = BigNumber.from(position.liquidity.toString()).eq(0)\r\n  const outOfRange =\r\n    positionSDK &&\r\n    (positionSDK.pool.tickCurrent < position.tickLower || positionSDK.pool.tickCurrent >= position.tickUpper)\r\n\r\n  const usd =\r\n    (usdPrices?.[token0Address] || 0) * parseFloat(positionSDK?.amount0.toExact() || '0') +\r\n    (usdPrices?.[token1Address] || 0) * parseFloat(positionSDK?.amount1.toExact() || '0')\r\n\r\n  const above768 = useMedia('(min-width: 768px)')\r\n\r\n  return (\r\n    <TableRow>\r\n      <Checkbox\r\n        type=\"checkbox\"\r\n        onChange={e => {\r\n          onChange(e.currentTarget.checked)\r\n        }}\r\n        checked={selected}\r\n      />\r\n\r\n      {above768 ? (\r\n        <>\r\n          <Flex alignItems=\"center\">\r\n            {/* <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={16} />*/}\r\n            <Text>{position.tokenId.toString()}</Text>\r\n          </Flex>\r\n          <Text>{formatDollarAmount(usd)}</Text>\r\n          <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }} alignItems=\"center\">\r\n            {positionSDK?.amount0.toSignificant(6)}\r\n            <CurrencyLogo size=\"16px\" currency={currency0} />\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }} alignItems=\"center\">\r\n            {positionSDK?.amount1.toSignificant(6)}\r\n            <CurrencyLogo size=\"16px\" currency={currency1} />\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"flex-end\">\r\n            <RangeBadge removed={removed} inRange={!outOfRange} />\r\n          </Flex>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Flex alignItems=\"center\">\r\n            <Text marginRight=\"4px\">{position.tokenId.toString()}</Text>\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={16} />\r\n            <RangeBadge removed={removed} inRange={!outOfRange} hideText />\r\n          </Flex>\r\n          <Flex justifyContent=\"flex-end\">\r\n            <HoverDropdown\r\n              placement=\"right\"\r\n              content={<Text>{formatDollarAmount(usd)}</Text>}\r\n              dropdownContent={\r\n                <>\r\n                  <Flex sx={{ gap: '4px' }} alignItems=\"center\">\r\n                    <CurrencyLogo size=\"16px\" currency={currency0} />\r\n                    {positionSDK?.amount0.toSignificant(6)} {positionSDK?.amount0.currency.symbol}\r\n                  </Flex>\r\n\r\n                  <Flex sx={{ gap: '4px' }} alignItems=\"center\">\r\n                    <CurrencyLogo size=\"16px\" currency={currency1} />\r\n                    {positionSDK?.amount1.toSignificant(6)} {positionSDK?.amount1.currency.symbol}\r\n                  </Flex>\r\n                </>\r\n              }\r\n            ></HoverDropdown>\r\n          </Flex>\r\n        </>\r\n      )}\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nfunction ProMMDepositNFTModal({\r\n  selectedFarmAddress,\r\n  onDismiss,\r\n}: {\r\n  onDismiss: () => void\r\n  selectedFarmAddress: string\r\n}) {\r\n  const { type: tab = 'active' } = useParsedQueryString<{ type: string }>()\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useTheme()\r\n  const checkboxGroupRef = useRef<any>()\r\n  const above768 = useMedia('(min-width: 768px)')\r\n  const { farms } = useElasticFarms()\r\n  const selectedFarm = farms?.find(farm => farm.id.toLowerCase() === selectedFarmAddress.toLowerCase())\r\n\r\n  const poolAddresses =\r\n    selectedFarm?.pools\r\n      .filter(pool => (tab === 'active' ? pool.endTime > +new Date() / 1000 : pool.endTime < +new Date() / 1000))\r\n      .map(pool => pool.poolAddress.toLowerCase()) || []\r\n\r\n  const [selectedNFTs, setSeletedNFTs] = useState<string[]>([])\r\n\r\n  const { deposit } = useFarmAction(selectedFarmAddress)\r\n\r\n  const { positions, loading: positionsLoading } = useProAmmPositions(account)\r\n\r\n  const { filterOptions, activeFilter, setActiveFilter, eligiblePositions } = usePositionFilter(\r\n    positions || [],\r\n    poolAddresses,\r\n  )\r\n\r\n  const [showMenu, setShowMenu] = useState(false)\r\n  const ref = useRef(null)\r\n  useOnClickOutside(ref, () => setShowMenu(false))\r\n  useEffect(() => {\r\n    if (!checkboxGroupRef.current) return\r\n    if (selectedNFTs.length === 0) {\r\n      checkboxGroupRef.current.checked = false\r\n      checkboxGroupRef.current.indeterminate = false\r\n    } else if (\r\n      selectedNFTs.length > 0 &&\r\n      eligiblePositions?.length &&\r\n      selectedNFTs.length < eligiblePositions?.length\r\n    ) {\r\n      checkboxGroupRef.current.checked = false\r\n      checkboxGroupRef.current.indeterminate = true\r\n    } else {\r\n      checkboxGroupRef.current.checked = true\r\n      checkboxGroupRef.current.indeterminate = false\r\n    }\r\n  }, [selectedNFTs.length, eligiblePositions])\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n  if (!selectedFarmAddress) return null\r\n\r\n  const handleDeposit = async () => {\r\n    const txHash = await deposit(selectedNFTs.map(item => BigNumber.from(item)))\r\n    if (txHash) {\r\n      const finishedPoses = eligiblePositions.filter(pos => selectedNFTs.includes(pos.tokenId.toString()))\r\n      finishedPoses.forEach(pos => {\r\n        mixpanelHandler(MIXPANEL_TYPE.ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED, {\r\n          token_1: pos.token0,\r\n          token_2: pos.token1,\r\n        })\r\n      })\r\n    }\r\n    onDismiss()\r\n  }\r\n\r\n  const filterComponent = (\r\n    <Select role=\"button\" onClick={() => setShowMenu(prev => !prev)}>\r\n      {filterOptions.find(item => item.code === activeFilter)?.value}\r\n\r\n      <DropdownIcon rotate={showMenu} />\r\n\r\n      {showMenu && (\r\n        <SelectMenu ref={ref}>\r\n          {filterOptions.map(item => (\r\n            <SelectOption\r\n              key={item.code}\r\n              role=\"button\"\r\n              onClick={e => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveFilter(item.code)\r\n                setShowMenu(prev => !prev)\r\n              }}\r\n            >\r\n              {item.value}\r\n            </SelectOption>\r\n          ))}\r\n        </SelectMenu>\r\n      )}\r\n    </Select>\r\n  )\r\n\r\n  return (\r\n    <Modal isOpen={!!selectedFarm} onDismiss={onDismiss} maxHeight={80} width=\"80vw\" maxWidth=\"808px\">\r\n      <ModalContentWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Title>\r\n            <Trans>Deposit your liquidity</Trans>\r\n          </Title>\r\n\r\n          <Flex sx={{ gap: '12px' }}>\r\n            {above768 && filterComponent}\r\n            <ButtonEmpty onClick={onDismiss} width=\"36px\" height=\"36px\" padding=\"0\">\r\n              <X color={theme.text} />\r\n            </ButtonEmpty>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Text fontSize=\"12px\" marginTop=\"20px\" color={theme.subText}>\r\n          <Trans>\r\n            Deposit your liquidity positions (NFT tokens) first to enable farming. Only your in range liquidity\r\n            positions (NFT tokens) will earn you farming rewards\r\n          </Trans>\r\n        </Text>\r\n\r\n        {!above768 && filterComponent}\r\n\r\n        {positionsLoading ? (\r\n          <LocalLoader />\r\n        ) : !eligiblePositions?.length ? (\r\n          <Flex\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            padding=\"16px\"\r\n            color={theme.subText}\r\n            marginTop=\"40px\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Info size=\"48px\" />\r\n            <Text fontSize={14} textAlign=\"center\" marginTop=\"16px\" maxWidth=\"480px\" lineHeight={1.5}>\r\n              <Trans>\r\n                You dont have any relevant liquidity positions yet.\r\n                <br /> Add liquidity to the farming pools first. Check out our{' '}\r\n                <StyledInternalLink to=\"/pools\">Pools.</StyledInternalLink>\r\n              </Trans>\r\n            </Text>\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <TableHeader>\r\n              <Checkbox\r\n                type=\"checkbox\"\r\n                ref={checkboxGroupRef}\r\n                onChange={e => {\r\n                  if (e.currentTarget.checked) {\r\n                    setSeletedNFTs(eligiblePositions?.map(pos => pos.tokenId.toString()) || [])\r\n                  } else {\r\n                    setSeletedNFTs([])\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <Text textAlign=\"left\">{above768 ? 'ID' : 'ID | Token | Status'}</Text>\r\n              <Text textAlign={above768 ? 'left' : 'right'}>\r\n                <Trans>Your liquidity</Trans>\r\n              </Text>\r\n              {above768 && (\r\n                <>\r\n                  <Text textAlign=\"right\">Token 1</Text>\r\n                  <Text textAlign=\"right\">Token 2</Text>\r\n                  <Text textAlign=\"right\">Status</Text>\r\n                </>\r\n              )}\r\n            </TableHeader>\r\n\r\n            <div style={{ overflowY: 'scroll', minHeight: '100px' }}>\r\n              {eligiblePositions.map(pos => (\r\n                <PositionRow\r\n                  selected={selectedNFTs.includes(pos.tokenId.toString())}\r\n                  key={pos.tokenId.toString()}\r\n                  position={pos}\r\n                  onChange={(selected: boolean) => {\r\n                    if (selected) setSeletedNFTs(prev => [...prev, pos.tokenId.toString()])\r\n                    else {\r\n                      setSeletedNFTs(prev => prev.filter(item => item !== pos.tokenId.toString()))\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n            <Flex justifyContent=\"space-between\" marginTop=\"24px\">\r\n              <div></div>\r\n              <ButtonPrimary\r\n                fontSize=\"14px\"\r\n                padding=\"10px 24px\"\r\n                width=\"fit-content\"\r\n                onClick={handleDeposit}\r\n                disabled={!selectedNFTs.length}\r\n              >\r\n                <Trans>Deposit Selected</Trans>\r\n              </ButtonPrimary>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </ModalContentWrapper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ProMMDepositNFTModal\r\n","import { computePoolAddress } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Info, X } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport { ReactComponent as DropdownSVG } from 'assets/svg/down.svg'\r\nimport RangeBadge from 'components/Badge/RangeBadge'\r\nimport { ButtonEmpty, ButtonPrimary } from 'components/Button'\r\nimport Checkbox from 'components/CheckBox'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport Modal from 'components/Modal'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { NETWORKS_INFO, isEVM } from 'constants/networks'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useElasticFarms, useFarmAction } from 'state/farms/elastic/hooks'\r\nimport { NFTPosition } from 'state/farms/elastic/types'\r\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\r\nimport { StyledInternalLink } from 'theme'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nimport { ModalContentWrapper, TableHeader, TableRow, Title } from './styled'\r\n\r\nconst generateCommonCSS = (isUnstake: boolean) => {\r\n  return css`\r\n    ${isUnstake\r\n      ? 'grid-template-columns: 18px 120px repeat(2, 1fr);'\r\n      : 'grid-template-columns: 18px 120px repeat(3, 1fr);'}\r\n    ${({ theme }) => theme.mediaWidth.upToSmall`\r\n        grid-template-columns: 18px 120px 1fr;\r\n      `}\r\n  `\r\n}\r\n\r\nconst DropdownIcon = styled(DropdownSVG)`\r\n  transition: transform 300ms;\r\n  color: ${({ theme }) => theme.text};\r\n  &:hover {\r\n    transform: rotate(180deg);\r\n  }\r\n`\r\n\r\nconst ScrollContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 90px;\r\n\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    display: unset;\r\n    width: 8px;\r\n    border-radius: 999px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: transparent;\r\n    border-radius: 999px;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.disableText};\r\n    border-radius: 999px;\r\n  }\r\n`\r\n\r\nconst StakeTableHeader = styled(TableHeader)<{ isUnstake: boolean }>`\r\n  ${({ isUnstake }) => generateCommonCSS(isUnstake)}\r\n`\r\n\r\nconst StakeTableRow = styled(TableRow)<{ isUnstake: boolean }>`\r\n  ${({ isUnstake }) => generateCommonCSS(isUnstake)}\r\n`\r\n\r\ntype ExplicitNFT = {\r\n  available: NFTPosition\r\n  staked: NFTPosition\r\n}\r\n\r\nconst PositionRow = ({\r\n  position,\r\n  onChange,\r\n  selected,\r\n  type,\r\n}: {\r\n  selected: boolean\r\n  position: ExplicitNFT\r\n  onChange: (value: boolean) => void\r\n  type: 'stake' | 'unstake'\r\n}) => {\r\n  const above768 = useMedia('(min-width: 768px)')\r\n\r\n  const usdPrices = useTokenPrices([position.available.pool.token0.address, position.available.pool.token1.address])\r\n\r\n  const outOfRange =\r\n    position.available.pool.tickCurrent < position.available.tickLower ||\r\n    position.available.pool.tickCurrent >= position.available.tickUpper\r\n\r\n  const token0Price = usdPrices[position.available.pool.token0.address] || 0\r\n  const token1Price = usdPrices[position.available.pool.token1.address] || 0\r\n\r\n  const availableUSD =\r\n    token0Price * parseFloat(position.available.amount0.toExact() || '0') +\r\n    token1Price * parseFloat(position.available.amount1.toExact() || '0')\r\n\r\n  const usd =\r\n    token0Price * parseFloat(position.staked.amount0.toExact() || '0') +\r\n    token1Price * parseFloat(position.staked.amount1.toExact() || '0')\r\n\r\n  return (\r\n    <StakeTableRow isUnstake={type === 'unstake'}>\r\n      <Checkbox\r\n        type=\"checkbox\"\r\n        onChange={e => {\r\n          onChange(e.currentTarget.checked)\r\n        }}\r\n        checked={selected}\r\n      />\r\n      {above768 ? (\r\n        <Flex alignItems=\"center\">\r\n          <Text>{position.available.nftId.toString()}</Text>\r\n        </Flex>\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Text marginRight=\"4px\">{position.available.nftId.toString()}</Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={position.available.pool.token0}\r\n            currency1={position.available.pool.token1}\r\n            size={16}\r\n          />\r\n          <RangeBadge removed={false} inRange={!outOfRange} hideText />\r\n        </Flex>\r\n      )}\r\n      {type === 'stake' && (\r\n        <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }} alignItems=\"center\" fontSize=\"12px\">\r\n          {formatDollarAmount(availableUSD)}\r\n          <MouseoverTooltip\r\n            noArrow\r\n            placement=\"bottom\"\r\n            width=\"fit-content\"\r\n            text={\r\n              <>\r\n                <Flex alignItems=\"center\">\r\n                  <CurrencyLogo currency={position.available.amount0.currency} size=\"16px\" />\r\n                  <Text fontSize={12} marginLeft=\"4px\">\r\n                    {position.available.amount0.toSignificant(8)}\r\n                  </Text>\r\n                </Flex>\r\n                <Flex alignItems=\"center\" marginTop=\"8px\">\r\n                  <CurrencyLogo currency={position.available.amount1.currency} size=\"16px\" />\r\n                  <Text fontSize={12} marginLeft=\"4px\">\r\n                    {position.available.amount1.toSignificant(8)}\r\n                  </Text>\r\n                </Flex>\r\n              </>\r\n            }\r\n          >\r\n            <DropdownIcon />\r\n          </MouseoverTooltip>\r\n        </Flex>\r\n      )}\r\n      {(type === 'unstake' || above768) && (\r\n        <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }} alignItems=\"center\" fontSize=\"12px\">\r\n          {formatDollarAmount(usd)}\r\n          <MouseoverTooltip\r\n            noArrow\r\n            placement=\"bottom\"\r\n            width=\"fit-content\"\r\n            text={\r\n              <>\r\n                <Flex alignItems=\"center\">\r\n                  <CurrencyLogo currency={position.available.amount0.currency} size=\"16px\" />\r\n                  <Text fontSize={12} marginLeft=\"4px\">\r\n                    {position.staked.amount0.toSignificant(8)}\r\n                  </Text>\r\n                </Flex>\r\n                <Flex alignItems=\"center\" marginTop=\"8px\">\r\n                  <CurrencyLogo currency={position.available.amount1.currency} size=\"16px\" />\r\n                  <Text fontSize={12} marginLeft=\"4px\">\r\n                    {position.staked.amount1.toSignificant(8)}\r\n                  </Text>\r\n                </Flex>\r\n              </>\r\n            }\r\n          >\r\n            <DropdownIcon />\r\n          </MouseoverTooltip>\r\n        </Flex>\r\n      )}\r\n\r\n      {above768 && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <RangeBadge removed={false} inRange={!outOfRange} />\r\n        </Flex>\r\n      )}\r\n    </StakeTableRow>\r\n  )\r\n}\r\n\r\nfunction StakeModal({\r\n  selectedFarmAddress,\r\n  onDismiss,\r\n  poolId,\r\n  type,\r\n}: {\r\n  onDismiss: () => void\r\n  selectedFarmAddress: string\r\n  poolId: number\r\n  type: 'stake' | 'unstake'\r\n}) {\r\n  const theme = useTheme()\r\n  const checkboxGroupRef = useRef<any>()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { farms, userFarmInfo } = useElasticFarms()\r\n  const selectedFarm = farms?.find(farm => farm.id.toLowerCase() === selectedFarmAddress.toLowerCase())\r\n\r\n  const { stake, unstake } = useFarmAction(selectedFarmAddress)\r\n\r\n  const selectedPool = selectedFarm?.pools.find(pool => Number(pool.pid) === Number(poolId))\r\n\r\n  const { token0, token1 } = selectedPool || {}\r\n\r\n  const eligibleNfts: ExplicitNFT[] = useMemo(() => {\r\n    if (!isEVM(chainId)) return []\r\n    const joinedPositions = userFarmInfo?.[selectedFarmAddress].joinedPositions[poolId] || []\r\n    const depositedPositions =\r\n      userFarmInfo?.[selectedFarmAddress].depositedPositions.filter(pos => {\r\n        return (\r\n          selectedPool?.poolAddress.toLowerCase() ===\r\n          computePoolAddress({\r\n            factoryAddress: NETWORKS_INFO[chainId].elastic.coreFactory,\r\n            tokenA: pos.pool.token0,\r\n            tokenB: pos.pool.token1,\r\n            fee: pos.pool.fee,\r\n            initCodeHashManualOverride: NETWORKS_INFO[chainId].elastic.initCodeHash,\r\n          }).toLowerCase()\r\n        )\r\n      }) || []\r\n\r\n    return depositedPositions\r\n      .map(item => {\r\n        const stakedLiquidity = BigNumber.from(\r\n          joinedPositions.find(pos => pos.nftId.toString() === item.nftId.toString())?.liquidity.toString() || 0,\r\n        )\r\n        const availableLiquidity = BigNumber.from(item.liquidity.toString()).sub(stakedLiquidity)\r\n        return {\r\n          available: new NFTPosition({\r\n            nftId: item.nftId,\r\n            pool: item.pool,\r\n            liquidity: availableLiquidity.toString(),\r\n            tickLower: item.tickLower,\r\n            tickUpper: item.tickUpper,\r\n          }),\r\n\r\n          staked: new NFTPosition({\r\n            nftId: item.nftId,\r\n            pool: item.pool,\r\n            liquidity: stakedLiquidity.toString(),\r\n            tickLower: item.tickLower,\r\n            tickUpper: item.tickUpper,\r\n          }),\r\n        }\r\n      })\r\n      .filter(item => {\r\n        if (type === 'stake') {\r\n          return BigNumber.from(item.available.liquidity.toString()).gt(BigNumber.from(0))\r\n        }\r\n        return BigNumber.from(item.staked.liquidity.toString()).gt(BigNumber.from(0))\r\n      })\r\n  }, [type, selectedPool, chainId, poolId, selectedFarmAddress, userFarmInfo])\r\n\r\n  const [selectedNFTs, setSeletedNFTs] = useState<ExplicitNFT[]>([])\r\n  const { mixpanelHandler } = useMixpanel()\r\n  useEffect(() => {\r\n    if (!checkboxGroupRef.current) return\r\n    if (selectedNFTs.length === 0) {\r\n      checkboxGroupRef.current.checked = false\r\n      checkboxGroupRef.current.indeterminate = false\r\n    } else if (selectedNFTs.length > 0 && eligibleNfts?.length && selectedNFTs.length < eligibleNfts?.length) {\r\n      checkboxGroupRef.current.checked = false\r\n      checkboxGroupRef.current.indeterminate = true\r\n    } else {\r\n      checkboxGroupRef.current.checked = true\r\n      checkboxGroupRef.current.indeterminate = false\r\n    }\r\n  }, [selectedNFTs.length, eligibleNfts])\r\n\r\n  const handleClick = async () => {\r\n    if (type === 'stake') {\r\n      const txhash = await stake(\r\n        BigNumber.from(poolId),\r\n        selectedNFTs.map(item => item.available.nftId),\r\n        selectedNFTs.map(item => BigNumber.from(item.available.liquidity.toString())),\r\n      )\r\n      if (txhash) {\r\n        mixpanelHandler(MIXPANEL_TYPE.ELASTIC_STAKE_LIQUIDITY_COMPLETED, {\r\n          token_1: token0?.symbol,\r\n          token_2: token1?.symbol,\r\n        })\r\n      }\r\n    } else {\r\n      const txhash = await unstake(\r\n        BigNumber.from(poolId),\r\n        selectedNFTs.map(item => item.available.nftId),\r\n        selectedNFTs.map(item => BigNumber.from(item.staked.liquidity.toString())),\r\n      )\r\n      if (txhash) {\r\n        mixpanelHandler(MIXPANEL_TYPE.ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED, {\r\n          token_1: token0?.symbol,\r\n          token_2: token1?.symbol,\r\n        })\r\n      }\r\n    }\r\n    onDismiss()\r\n  }\r\n\r\n  const above768 = useMedia('(min-width: 768px)')\r\n\r\n  return (\r\n    <Modal isOpen={!!selectedFarm} onDismiss={onDismiss} maxHeight={80} maxWidth=\"808px\">\r\n      <ModalContentWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Title display=\"flex\">\r\n            <DoubleCurrencyLogo size={24} currency0={token0} currency1={token1} />\r\n            {type === 'stake' ? <Trans>Stake your liquidity</Trans> : <Trans>Unstake your liquidity</Trans>}\r\n          </Title>\r\n\r\n          <Flex sx={{ gap: '12px' }}>\r\n            <ButtonEmpty onClick={onDismiss} width=\"36px\" height=\"36px\" padding=\"0\">\r\n              <X color={theme.text} />\r\n            </ButtonEmpty>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Text fontSize=\"12px\" marginTop=\"20px\" color={theme.subText}>\r\n          {type === 'stake' ? (\r\n            <Trans>\r\n              Stake your deposited liquidity positions (NFT tokens) into the farms to start earning rewards. Only your\r\n              in-range positions will earn rewards\r\n            </Trans>\r\n          ) : (\r\n            <Trans>\r\n              Unstake your liquidity positions (NFT tokens) from the farm. You will no longer earn rewards on these\r\n              positions once unstaked\r\n            </Trans>\r\n          )}\r\n        </Text>\r\n\r\n        {!eligibleNfts.length ? (\r\n          type === 'stake' ? (\r\n            <Flex\r\n              sx={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}\r\n              fontSize={14}\r\n              color={theme.subText}\r\n              padding=\"16px\"\r\n              marginTop=\"20px\"\r\n            >\r\n              <Info size=\"48px\" />\r\n              <Text marginTop=\"16px\" textAlign=\"center\" lineHeight={1.5}>\r\n                <Trans>\r\n                  You haven&apos;t deposited any liquidity positions (NFT tokens) for this farming pair yet.\r\n                  <br />\r\n                  <br />\r\n                  Add liquidity to this pool first in our <StyledInternalLink to=\"/pools\">\r\n                    Pools\r\n                  </StyledInternalLink>{' '}\r\n                  page. If you&apos;ve done that, deposit your liquidity position (NFT tokens) before you stake\r\n                </Trans>\r\n              </Text>\r\n            </Flex>\r\n          ) : (\r\n            <Text fontSize={14} color={theme.subText} textAlign=\"center\" padding=\"16px\" marginTop=\"20px\">\r\n              <Trans>You don&apos;t have any available position, Please deposit and stake first</Trans>\r\n            </Text>\r\n          )\r\n        ) : (\r\n          <>\r\n            <StakeTableHeader isUnstake={type === 'unstake'}>\r\n              <Checkbox\r\n                type=\"checkbox\"\r\n                ref={checkboxGroupRef}\r\n                onChange={e => {\r\n                  if (e.currentTarget.checked) {\r\n                    setSeletedNFTs(eligibleNfts || [])\r\n                  } else {\r\n                    setSeletedNFTs([])\r\n                  }\r\n                }}\r\n              />\r\n              <Text textAlign=\"left\">{above768 ? 'ID' : 'ID | Token | Status'}</Text>\r\n              {type === 'stake' && (\r\n                <Text textAlign={'right'}>\r\n                  <Trans>Available Balance</Trans>\r\n                </Text>\r\n              )}\r\n              {(type === 'unstake' || above768) && (\r\n                <Text textAlign={'right'}>\r\n                  <Trans>Staked Balance</Trans>\r\n                </Text>\r\n              )}\r\n              {above768 && (\r\n                <Text textAlign=\"right\">\r\n                  <Trans>Status</Trans>\r\n                </Text>\r\n              )}\r\n            </StakeTableHeader>\r\n\r\n            <ScrollContainer>\r\n              {eligibleNfts.map(pos => (\r\n                <PositionRow\r\n                  type={type}\r\n                  selected={selectedNFTs\r\n                    .map(item => item.available.nftId.toString())\r\n                    .includes(pos.available.nftId.toString())}\r\n                  key={pos.available.nftId.toString()}\r\n                  position={pos}\r\n                  onChange={(selected: boolean) => {\r\n                    if (selected) setSeletedNFTs(prev => [...prev, pos])\r\n                    else {\r\n                      setSeletedNFTs(prev =>\r\n                        prev.filter(item => item.available.nftId.toString() !== pos.available.nftId.toString()),\r\n                      )\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </ScrollContainer>\r\n\r\n            <Flex justifyContent=\"space-between\" marginTop=\"24px\">\r\n              <div></div>\r\n              <ButtonPrimary\r\n                fontSize=\"14px\"\r\n                padding=\"10px 24px\"\r\n                width=\"fit-content\"\r\n                onClick={handleClick}\r\n                disabled={!selectedNFTs.length}\r\n              >\r\n                {type === 'stake' ? <Trans>Stake Selected</Trans> : <Trans>Unstake Selected</Trans>}\r\n              </ButtonPrimary>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </ModalContentWrapper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import { Currency, CurrencyAmount } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { X } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty, ButtonPrimary } from 'components/Button'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\nimport Modal from 'components/Modal'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useElasticFarms, useFarmAction } from 'state/farms/elastic/hooks'\r\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\r\nimport { StyledInternalLink } from 'theme'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nimport { ModalContentWrapper, Title } from './styled'\r\n\r\nconst HarvestInfo = styled.div`\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  background: ${({ theme }) => theme.primary + '33'};\r\n  margin-top: 18px;\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n`\r\n\r\nconst RewardRow = styled.div`\r\n  border-radius: 999px;\r\n  padding: 8px;\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 20px;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nfunction HarvestModal({\r\n  farmsAddress,\r\n  poolId,\r\n  onDismiss,\r\n}: {\r\n  farmsAddress: string\r\n  // Null mean harvest all\r\n  poolId: number | null\r\n  onDismiss: () => void\r\n}) {\r\n  const theme = useTheme()\r\n  const { farms, userFarmInfo } = useElasticFarms()\r\n  const selectedFarm = farms?.find(farm => farm.id.toLowerCase() === farmsAddress.toLowerCase())\r\n\r\n  const { harvest } = useFarmAction(farmsAddress)\r\n  const selectedPool =\r\n    poolId !== null ? selectedFarm?.pools.find(pool => Number(pool.pid) === Number(poolId)) : undefined\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const rewards: { [address: string]: CurrencyAmount<Currency> } = {}\r\n\r\n  const { rewardPendings = {}, joinedPositions = {} } = userFarmInfo?.[farmsAddress] || {}\r\n\r\n  if (poolId === null) {\r\n    Object.values(rewardPendings || {})\r\n      .flat()\r\n      .forEach(reward => {\r\n        const token = reward.currency.wrapped.address\r\n        if (rewards[token]) rewards[token] = rewards[token].add(reward)\r\n        else rewards[token] = reward\r\n      })\r\n  } else {\r\n    rewardPendings?.[poolId.toString()]?.forEach(reward => {\r\n      const token = reward.currency.wrapped.address\r\n      if (rewards[token]) rewards[token] = rewards[token].add(reward)\r\n      else rewards[token] = reward\r\n    })\r\n  }\r\n\r\n  const handleHarvest = async () => {\r\n    const nftIds: BigNumber[] = []\r\n    const poolIds: BigNumber[] = []\r\n\r\n    if (poolId === null)\r\n      Object.keys(joinedPositions).forEach(pid => {\r\n        joinedPositions[pid].forEach(pos => {\r\n          if (BigNumber.from(pos.liquidity.toString()).gt(BigNumber.from(0))) {\r\n            nftIds.push(pos.nftId)\r\n            poolIds.push(BigNumber.from(pid))\r\n          }\r\n        })\r\n      })\r\n    else\r\n      joinedPositions[poolId.toString()]?.forEach(pos => {\r\n        if (BigNumber.from(pos.liquidity.toString()).gt(BigNumber.from(0))) {\r\n          nftIds.push(pos.nftId)\r\n          poolIds.push(BigNumber.from(poolId))\r\n        }\r\n      })\r\n\r\n    const tx = await harvest(nftIds, poolIds)\r\n    if (tx) {\r\n      onDismiss()\r\n      if (poolId === null) {\r\n        mixpanelHandler(MIXPANEL_TYPE.ELASTIC_ALLS_REWARD_HARVESTED)\r\n      } else {\r\n        mixpanelHandler(MIXPANEL_TYPE.ELASTIC_INDIVIDUAL_REWARD_HARVESTED)\r\n      }\r\n    }\r\n  }\r\n\r\n  const rewardAddress = Object.keys(rewards)\r\n  const tokenPrices = useTokenPrices(rewardAddress)\r\n  const usdValue = Object.values(rewards).reduce((acc, cur) => {\r\n    return acc + Number(cur.toExact()) * (tokenPrices[cur.currency.wrapped.address] || 0)\r\n  }, 0)\r\n\r\n  return (\r\n    <Modal isOpen={!!selectedFarm} onDismiss={onDismiss} maxHeight={80} maxWidth=\"392px\">\r\n      <ModalContentWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Title>\r\n            {poolId === null ? (\r\n              <Trans>Harvest All</Trans>\r\n            ) : (\r\n              <Flex>\r\n                <DoubleCurrencyLogo size={24} currency0={selectedPool?.token0} currency1={selectedPool?.token1} />{' '}\r\n                <Text>\r\n                  <Trans>Harvest</Trans>\r\n                </Text>\r\n              </Flex>\r\n            )}\r\n          </Title>\r\n\r\n          <Flex sx={{ gap: '12px' }}>\r\n            <ButtonEmpty onClick={onDismiss} width=\"36px\" height=\"36px\" padding=\"0\">\r\n              <X color={theme.text} />\r\n            </ButtonEmpty>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <HarvestInfo>\r\n          <Trans>\r\n            After harvesting, your rewards will begin vesting linearly (only if the farm has a vesting duration).\r\n            <br />\r\n            <br />\r\n            Vesting means that your reward tokens will be locked initially but released gradually. You can claim the\r\n            reward tokens to your wallet as and when they are released.\r\n            <br />\r\n            <br />\r\n            To claim your rewards, go to the{' '}\r\n            <StyledInternalLink to=\"/farms?type=vesting&tab=elastic\"> Vesting</StyledInternalLink> tab and click\r\n            &apos;Claim&apos;.\r\n          </Trans>\r\n        </HarvestInfo>\r\n\r\n        <Flex marginTop=\"20px\" justifyContent=\"space-between\">\r\n          <Text>\r\n            <Trans>My Rewards</Trans>\r\n          </Text>\r\n          <Text>{formatDollarAmount(usdValue)}</Text>\r\n        </Flex>\r\n\r\n        <RewardRow>\r\n          {Object.values(rewards).map(reward => (\r\n            <Flex alignItems=\"center\" sx={{ gap: '4px' }} key={reward.currency.symbol}>\r\n              <HoverInlineText text={reward.toSignificant(6) || '0'} maxCharacters={10}></HoverInlineText>\r\n              <MouseoverTooltip placement=\"top\" text={reward.currency.symbol} width=\"fit-content\">\r\n                <CurrencyLogo currency={reward.currency} size=\"16px\" />\r\n              </MouseoverTooltip>\r\n            </Flex>\r\n          ))}\r\n        </RewardRow>\r\n\r\n        <ButtonPrimary onClick={handleHarvest}>\r\n          {poolId === null ? <Trans>Harvest All</Trans> : <Trans>Harvest</Trans>}\r\n        </ButtonPrimary>\r\n      </ModalContentWrapper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestModal\r\n","import { Position, computePoolAddress } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { X } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport RangeBadge from 'components/Badge/RangeBadge'\r\nimport { ButtonEmpty, ButtonPrimary } from 'components/Button'\r\nimport Checkbox from 'components/CheckBox'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport HoverDropdown from 'components/HoverDropdown'\r\nimport Modal from 'components/Modal'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { NETWORKS_INFO, isEVM } from 'constants/networks'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { usePool } from 'hooks/usePools'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useElasticFarms, useFailedNFTs, useFarmAction, usePositionFilter } from 'state/farms/elastic/hooks'\r\nimport { UserPositionFarm } from 'state/farms/elastic/types'\r\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\r\nimport { PositionDetails } from 'types/position'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nimport {\r\n  DropdownIcon,\r\n  ModalContentWrapper,\r\n  Select,\r\n  SelectMenu,\r\n  SelectOption,\r\n  TableHeader,\r\n  TableRow,\r\n  Title,\r\n} from './styled'\r\n\r\nconst PositionRow = ({\r\n  position,\r\n  onChange,\r\n  selected,\r\n  forced,\r\n}: {\r\n  selected: boolean\r\n  position: UserPositionFarm\r\n  onChange: (value: boolean) => void\r\n  forced: boolean\r\n}) => {\r\n  const { token0: token0Address, token1: token1Address, fee: feeAmount, liquidity, tickLower, tickUpper } = position\r\n\r\n  const token0 = useToken(token0Address)\r\n  const token1 = useToken(token1Address)\r\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\r\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\r\n\r\n  const usdPrices = useTokenPrices([token0Address, token1Address])\r\n\r\n  // construct Position from details returned\r\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, feeAmount)\r\n\r\n  const positionSDK = useMemo(() => {\r\n    if (pool) {\r\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\r\n    }\r\n    return undefined\r\n  }, [liquidity, pool, tickLower, tickUpper])\r\n\r\n  const removed = BigNumber.from(position.liquidity.toString()).eq(0)\r\n  const outOfRange =\r\n    positionSDK &&\r\n    (positionSDK.pool.tickCurrent < position.tickLower || positionSDK.pool.tickCurrent >= position.tickUpper)\r\n\r\n  const theme = useTheme()\r\n\r\n  const usd =\r\n    (usdPrices?.[token0Address] || 0) * parseFloat(positionSDK?.amount0.toExact() || '0') +\r\n    (usdPrices?.[token1Address] || 0) * parseFloat(positionSDK?.amount1.toExact() || '0')\r\n\r\n  const above768 = useMedia('(min-width: 768px)')\r\n\r\n  const disableCheckbox = (\r\n    <Flex\r\n      width={'17.5px'}\r\n      height=\"17.5px\"\r\n      backgroundColor={theme.disableText}\r\n      sx={{ borderRadius: '2px' }}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <X size={14} color=\"#333\" />\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <TableRow>\r\n      {forced ? (\r\n        <Checkbox type=\"checkbox\" disabled checked />\r\n      ) : !position.stakedLiquidity.gt(BigNumber.from(0)) ? (\r\n        <Checkbox\r\n          type=\"checkbox\"\r\n          onChange={e => {\r\n            onChange(e.currentTarget.checked)\r\n          }}\r\n          checked={selected}\r\n        />\r\n      ) : (\r\n        <MouseoverTooltip text=\"You will need to unstake this position first before you can withdraw it\">\r\n          {disableCheckbox}\r\n        </MouseoverTooltip>\r\n      )}\r\n      {above768 ? (\r\n        <>\r\n          <Flex alignItems=\"center\">\r\n            {/* <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={16} />*/}\r\n            <Text>{position.tokenId.toString()}</Text>\r\n          </Flex>\r\n          <Text>{formatDollarAmount(usd)}</Text>\r\n          <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }} alignItems=\"center\">\r\n            {positionSDK?.amount0.toSignificant(6)}\r\n            <CurrencyLogo size=\"16px\" currency={currency0} />\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"flex-end\" sx={{ gap: '4px' }} alignItems=\"center\">\r\n            {positionSDK?.amount1.toSignificant(6)}\r\n            <CurrencyLogo size=\"16px\" currency={currency1} />\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"flex-end\">\r\n            <RangeBadge removed={removed} inRange={!outOfRange} />\r\n          </Flex>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Flex alignItems=\"center\">\r\n            <Text marginRight=\"4px\">{position.tokenId.toString()}</Text>\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={16} />\r\n            <RangeBadge removed={removed} inRange={!outOfRange} hideText />\r\n          </Flex>\r\n          <Flex justifyContent=\"flex-end\">\r\n            <HoverDropdown\r\n              placement=\"right\"\r\n              content={<Text>{formatDollarAmount(usd)}</Text>}\r\n              dropdownContent={\r\n                <>\r\n                  <Flex sx={{ gap: '4px' }} alignItems=\"center\">\r\n                    <CurrencyLogo size=\"16px\" currency={currency0} />\r\n                    {positionSDK?.amount0.toSignificant(6)} {positionSDK?.amount0.currency.symbol}\r\n                  </Flex>\r\n\r\n                  <Flex sx={{ gap: '4px' }} alignItems=\"center\">\r\n                    <CurrencyLogo size=\"16px\" currency={currency1} />\r\n                    {positionSDK?.amount1.toSignificant(6)} {positionSDK?.amount1.currency.symbol}\r\n                  </Flex>\r\n                </>\r\n              }\r\n            ></HoverDropdown>\r\n          </Flex>\r\n        </>\r\n      )}\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nfunction WithdrawModal({\r\n  selectedFarmAddress,\r\n  onDismiss,\r\n  forced = false,\r\n}: {\r\n  onDismiss: () => void\r\n  selectedFarmAddress: string\r\n  forced?: boolean\r\n}) {\r\n  const theme = useTheme()\r\n  const { chainId } = useActiveWeb3React()\r\n  const above768 = useMedia('(min-width: 768px)')\r\n\r\n  const { type: tab = 'active' } = useParsedQueryString<{ type: string }>()\r\n\r\n  const checkboxGroupRef = useRef<any>()\r\n  const { farms, userFarmInfo } = useElasticFarms()\r\n\r\n  const selectedFarm = farms?.find(farm => farm.id.toLowerCase() === selectedFarmAddress.toLowerCase())\r\n\r\n  const poolAddresses =\r\n    selectedFarm?.pools\r\n      .filter(pool => (tab === 'active' ? pool.endTime > +new Date() / 1000 : pool.endTime < +new Date() / 1000))\r\n      .map(pool => pool.poolAddress.toLowerCase()) || []\r\n\r\n  const failedNFTs = useFailedNFTs()\r\n\r\n  const { depositedPositions = [], joinedPositions = {} } = userFarmInfo?.[selectedFarm?.id || ''] || {}\r\n\r\n  const userDepositedNFTs: PositionDetails[] = useMemo(\r\n    () =>\r\n      isEVM(chainId)\r\n        ? depositedPositions.map(pos => {\r\n            const stakedLiquidity = Object.values(joinedPositions)\r\n              .flat()\r\n              .filter(\r\n                p => pos.nftId.toString() === p.nftId.toString() && BigNumber.from(p.liquidity.toString()).gt('0'),\r\n              )?.[0]?.liquidity\r\n\r\n            return {\r\n              nonce: BigNumber.from(0),\r\n              poolId: computePoolAddress({\r\n                factoryAddress: NETWORKS_INFO[chainId].elastic.coreFactory,\r\n                tokenA: pos.pool.token0,\r\n                tokenB: pos.pool.token1,\r\n                fee: pos.pool.fee,\r\n                initCodeHashManualOverride: NETWORKS_INFO[chainId].elastic.initCodeHash,\r\n              }),\r\n              feeGrowthInsideLast: BigNumber.from(0),\r\n              operator: '',\r\n              rTokenOwed: BigNumber.from(0),\r\n              fee: pos.pool.fee,\r\n              tokenId: pos.nftId,\r\n              tickLower: pos.tickLower,\r\n              tickUpper: pos.tickUpper,\r\n              liquidity: BigNumber.from(pos.liquidity.toString()),\r\n              token0: pos.amount0.currency.address,\r\n              token1: pos.amount1.currency.address,\r\n              stakedLiquidity: stakedLiquidity ? BigNumber.from(stakedLiquidity.toString()) : BigNumber.from(0),\r\n            }\r\n          })\r\n        : [],\r\n    [chainId, depositedPositions, joinedPositions],\r\n  )\r\n\r\n  const { filterOptions, activeFilter, setActiveFilter, eligiblePositions } = usePositionFilter(\r\n    userDepositedNFTs,\r\n    poolAddresses,\r\n  )\r\n\r\n  const withDrawableNFTs = useMemo(() => {\r\n    return (eligiblePositions as UserPositionFarm[]).filter(item => item.stakedLiquidity.eq(0))\r\n  }, [eligiblePositions])\r\n\r\n  const [selectedNFTs, setSeletedNFTs] = useState<string[]>([])\r\n\r\n  const { withdraw, emergencyWithdraw } = useFarmAction(selectedFarmAddress)\r\n\r\n  useEffect(() => {\r\n    if (!checkboxGroupRef.current) return\r\n    if (forced) {\r\n      checkboxGroupRef.current.checked = true\r\n      checkboxGroupRef.current.indeterminate = false\r\n      return\r\n    }\r\n    if (selectedNFTs.length === 0) {\r\n      checkboxGroupRef.current.checked = false\r\n      checkboxGroupRef.current.indeterminate = false\r\n    } else if (selectedNFTs.length > 0 && withDrawableNFTs?.length && selectedNFTs.length < withDrawableNFTs?.length) {\r\n      checkboxGroupRef.current.checked = false\r\n      checkboxGroupRef.current.indeterminate = true\r\n    } else {\r\n      checkboxGroupRef.current.checked = true\r\n      checkboxGroupRef.current.indeterminate = false\r\n    }\r\n  }, [selectedNFTs.length, withDrawableNFTs, forced])\r\n\r\n  const [showMenu, setShowMenu] = useState(false)\r\n\r\n  const ref = useRef(null)\r\n  useOnClickOutside(ref, () => setShowMenu(false))\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  if (!selectedFarmAddress) return null\r\n\r\n  const handleWithdraw = async () => {\r\n    if (forced) {\r\n      await emergencyWithdraw(failedNFTs.map(BigNumber.from))\r\n      onDismiss()\r\n      return\r\n    }\r\n\r\n    const txHash = await withdraw(selectedNFTs.map(item => BigNumber.from(item)))\r\n    if (txHash) {\r\n      const finishedPoses = eligiblePositions.filter(pos => selectedNFTs.includes(pos.tokenId.toString()))\r\n      finishedPoses.forEach(pos => {\r\n        mixpanelHandler(MIXPANEL_TYPE.ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED, {\r\n          token_1: pos.token0,\r\n          token_2: pos.token1,\r\n        })\r\n      })\r\n    }\r\n    onDismiss()\r\n  }\r\n\r\n  const filterComponent = (\r\n    <Select role=\"button\" onClick={() => setShowMenu(prev => !prev)}>\r\n      {filterOptions.find(item => item.code === activeFilter)?.value}\r\n\r\n      <DropdownIcon rotate={showMenu} />\r\n\r\n      {showMenu && (\r\n        <SelectMenu ref={ref}>\r\n          {filterOptions.map(item => (\r\n            <SelectOption\r\n              key={item.code}\r\n              role=\"button\"\r\n              onClick={e => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveFilter(item.code)\r\n                setShowMenu(prev => !prev)\r\n              }}\r\n            >\r\n              {item.value}\r\n            </SelectOption>\r\n          ))}\r\n        </SelectMenu>\r\n      )}\r\n    </Select>\r\n  )\r\n\r\n  return (\r\n    <Modal isOpen={!!selectedFarm} onDismiss={onDismiss} width=\"80vw\" maxHeight={80} maxWidth=\"808px\">\r\n      <ModalContentWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Title>{forced ? <Trans>Force Withdraw</Trans> : <Trans>Withdraw your liquidity</Trans>}</Title>\r\n\r\n          <Flex sx={{ gap: '12px' }}>\r\n            {above768 && !forced && filterComponent}\r\n            <ButtonEmpty onClick={onDismiss} width=\"36px\" height=\"36px\" padding=\"0\">\r\n              <X color={theme.text} />\r\n            </ButtonEmpty>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Text fontSize=\"12px\" marginTop=\"20px\" color={theme.subText}>\r\n          {forced ? (\r\n            <Trans>Below is a list of your affected liquidity positions</Trans>\r\n          ) : (\r\n            <Trans>\r\n              You will need to unstake your liquidity positions (NFT tokens) first before withdrawing it back to your\r\n              wallet\r\n            </Trans>\r\n          )}\r\n        </Text>\r\n\r\n        {!above768 && !forced && filterComponent}\r\n\r\n        <TableHeader>\r\n          <Checkbox\r\n            disabled={forced}\r\n            type=\"checkbox\"\r\n            ref={checkboxGroupRef}\r\n            onChange={e => {\r\n              if (e.currentTarget.checked) {\r\n                setSeletedNFTs(withDrawableNFTs.map(pos => pos.tokenId.toString()) || [])\r\n              } else {\r\n                setSeletedNFTs([])\r\n              }\r\n            }}\r\n          />\r\n          <Text textAlign=\"left\">{above768 ? 'ID' : 'ID | Token | Status'}</Text>\r\n          <Text textAlign={above768 ? 'left' : 'right'}>\r\n            <Trans>Your liquidity</Trans>\r\n          </Text>\r\n\r\n          {above768 && (\r\n            <>\r\n              <Text textAlign=\"right\">Token 1</Text>\r\n              <Text textAlign=\"right\">Token 2</Text>\r\n              <Text textAlign=\"right\">Status</Text>\r\n            </>\r\n          )}\r\n        </TableHeader>\r\n\r\n        <div style={{ overflowY: 'auto' }}>\r\n          {(eligiblePositions as UserPositionFarm[])\r\n            .filter(pos => {\r\n              if (forced) {\r\n                return failedNFTs.includes(pos.tokenId.toString())\r\n              }\r\n\r\n              return true\r\n            })\r\n            .map(pos => (\r\n              <PositionRow\r\n                selected={selectedNFTs.includes(pos.tokenId.toString())}\r\n                key={pos.tokenId.toString()}\r\n                position={pos}\r\n                forced={forced}\r\n                onChange={(selected: boolean) => {\r\n                  if (selected) setSeletedNFTs(prev => [...prev, pos.tokenId.toString()])\r\n                  else {\r\n                    setSeletedNFTs(prev => prev.filter(item => item !== pos.tokenId.toString()))\r\n                  }\r\n                }}\r\n              />\r\n            ))}\r\n        </div>\r\n        <Flex justifyContent=\"space-between\" marginTop=\"24px\">\r\n          <div></div>\r\n          <ButtonPrimary\r\n            fontSize=\"14px\"\r\n            padding=\"10px 24px\"\r\n            width=\"fit-content\"\r\n            onClick={handleWithdraw}\r\n            disabled={forced ? false : !selectedNFTs.length}\r\n            style={forced ? { background: theme.red, color: theme.textReverse } : undefined}\r\n          >\r\n            {forced ? <Trans>Force Withdraw</Trans> : <Trans>Withdraw Selected</Trans>}\r\n          </ButtonPrimary>\r\n        </Flex>\r\n      </ModalContentWrapper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import { computePoolAddress } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { stringify } from 'querystring'\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport FarmIssueAnnouncement from 'components/FarmIssueAnnouncement'\r\nimport LocalLoader from 'components/LocalLoader'\r\nimport ShareModal from 'components/ShareModal'\r\nimport Toggle from 'components/Toggle'\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { VERSION } from 'constants/v2'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ApplicationModal } from 'state/application/actions'\r\nimport { useModalOpen, useOpenModal } from 'state/application/hooks'\r\nimport { useElasticFarms, useFailedNFTs } from 'state/farms/elastic/hooks'\r\nimport { StyledInternalLink } from 'theme'\r\nimport { isAddressString } from 'utils'\r\n\r\nimport ElasticFarmGroup from './ElasticFarmGroup'\r\nimport { DepositModal, StakeUnstakeModal } from './ElasticFarmModals'\r\nimport HarvestModal from './ElasticFarmModals/HarvestModal'\r\nimport WithdrawModal from './ElasticFarmModals/WithdrawModal'\r\nimport { SharePoolContext } from './SharePoolContext'\r\nimport {\r\n  HeadingContainer,\r\n  HeadingRight,\r\n  SearchContainer,\r\n  SearchInput,\r\n  StakedOnlyToggleText,\r\n  StakedOnlyToggleWrapper,\r\n} from './styleds'\r\n\r\ntype ModalType = 'deposit' | 'withdraw' | 'stake' | 'unstake' | 'harvest' | 'forcedWithdraw'\r\n\r\n// this address exists on both Polygon and Avalanche\r\n\r\nfunction ElasticFarms({ active }: { active: boolean }) {\r\n  const theme = useTheme()\r\n  const { isEVM, networkInfo, chainId } = useActiveWeb3React()\r\n  const [stakedOnly, setStakedOnly] = useState({\r\n    active: false,\r\n    ended: false,\r\n  })\r\n  const activeTab = active ? 'active' : 'ended'\r\n\r\n  const { farms, loading, userFarmInfo } = useElasticFarms()\r\n\r\n  const failedNFTs = useFailedNFTs()\r\n\r\n  const ref = useRef<HTMLDivElement>()\r\n  const [open, setOpen] = useState(false)\r\n  useOnClickOutside(ref, open ? () => setOpen(prev => !prev) : undefined)\r\n  const qs = useParsedQueryString<{ search: string; type: string; tab: string }>()\r\n  const { search = '', type, tab } = qs\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const handleSearch = useCallback(\r\n    (search: string) => {\r\n      const target = {\r\n        ...location,\r\n        search: stringify({ ...qs, search }),\r\n      }\r\n\r\n      history.replace(target)\r\n    },\r\n    [history, location, qs],\r\n  )\r\n\r\n  const filteredFarms = useMemo(() => {\r\n    const now = Date.now() / 1000\r\n\r\n    // filter active/ended farm\r\n    let result = farms\r\n      ?.map(farm => {\r\n        const pools = farm.pools.filter(pool => (active ? pool.endTime >= now : pool.endTime < now))\r\n        return { ...farm, pools }\r\n      })\r\n      .filter(farm => !!farm.pools.length)\r\n\r\n    const searchAddress = isAddressString(chainId, search)\r\n    // filter by address\r\n    if (searchAddress) {\r\n      if (isEVM)\r\n        result = result?.map(farm => {\r\n          farm.pools = farm.pools.filter(pool => {\r\n            const poolAddress = computePoolAddress({\r\n              factoryAddress: (networkInfo as EVMNetworkInfo).elastic.coreFactory,\r\n              tokenA: pool.token0.wrapped,\r\n              tokenB: pool.token1.wrapped,\r\n              fee: pool.pool.fee,\r\n              initCodeHashManualOverride: (networkInfo as EVMNetworkInfo).elastic.initCodeHash,\r\n            })\r\n            return [poolAddress, pool.pool.token1.address, pool.pool.token0.address].includes(searchAddress)\r\n          })\r\n          return farm\r\n        })\r\n    } else {\r\n      // filter by symbol and name of token\r\n      result = result?.map(farm => {\r\n        farm.pools = farm.pools.filter(pool => {\r\n          return (\r\n            pool.token0.symbol?.toLowerCase().includes(search) ||\r\n            pool.token0.symbol?.toLowerCase().includes(search) ||\r\n            pool.token1.name?.toLowerCase().includes(search) ||\r\n            pool.token1.name?.toLowerCase().includes(search)\r\n          )\r\n        })\r\n        return farm\r\n      })\r\n    }\r\n\r\n    if (stakedOnly[activeTab] && isEVM) {\r\n      result = result?.map(item => {\r\n        if (!userFarmInfo?.[item.id].depositedPositions.length) {\r\n          return { ...item, pools: [] }\r\n        }\r\n        const stakedPools = userFarmInfo?.[item.id].depositedPositions.map(pos =>\r\n          computePoolAddress({\r\n            factoryAddress: (networkInfo as EVMNetworkInfo).elastic.coreFactory,\r\n            tokenA: pos.pool.token0,\r\n            tokenB: pos.pool.token1,\r\n            fee: pos.pool.fee,\r\n            initCodeHashManualOverride: (networkInfo as EVMNetworkInfo).elastic.initCodeHash,\r\n          }).toLowerCase(),\r\n        )\r\n\r\n        const pools = item.pools.filter(pool => stakedPools.includes(pool.poolAddress.toLowerCase()))\r\n        return { ...item, pools }\r\n      })\r\n    }\r\n\r\n    return result?.filter(farm => !!farm.pools.length) || []\r\n  }, [farms, active, search, stakedOnly, activeTab, chainId, userFarmInfo, isEVM, networkInfo])\r\n\r\n  const noFarms = !filteredFarms.length\r\n\r\n  const [selectedFarm, setSeletedFarm] = useState<null | string>(null)\r\n  const [selectedModal, setSeletedModal] = useState<ModalType | null>(null)\r\n  const [selectedPoolId, setSeletedPoolId] = useState<number | null>(null)\r\n\r\n  const openShareModal = useOpenModal(ApplicationModal.SHARE)\r\n  const isShareModalOpen = useModalOpen(ApplicationModal.SHARE)\r\n  const [sharePoolAddress, setSharePoolAddress] = useState('')\r\n  const networkRoute = networkInfo.route || undefined\r\n  const shareUrl = sharePoolAddress\r\n    ? `${window.location.origin}/farms/${networkRoute}?search=${sharePoolAddress}&tab=elastic&type=${activeTab}`\r\n    : undefined\r\n\r\n  const onDismiss = () => {\r\n    setSeletedFarm(null)\r\n    setSeletedModal(null)\r\n    setSeletedPoolId(null)\r\n  }\r\n\r\n  const renderAnnouncement = () => {\r\n    // show announcement only when user was affected in one of the visible farms on the UI\r\n    const now = Date.now() / 1000\r\n\r\n    if (activeTab === 'ended') {\r\n      const endedFarms = farms?.filter(farm => farm.pools.every(p => p.endTime < now))\r\n      const shouldShow = endedFarms?.some(farm =>\r\n        userFarmInfo?.[farm.id].depositedPositions\r\n          .map(pos => pos.nftId.toString())\r\n          .some(nft => failedNFTs.includes(nft)),\r\n      )\r\n      return shouldShow ? <FarmIssueAnnouncement isEnded /> : null\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sharePoolAddress) {\r\n      openShareModal()\r\n    }\r\n  }, [openShareModal, sharePoolAddress])\r\n\r\n  useEffect(() => {\r\n    setSharePoolAddress(addr => {\r\n      if (!isShareModalOpen) {\r\n        return ''\r\n      }\r\n\r\n      return addr\r\n    })\r\n  }, [isShareModalOpen, setSharePoolAddress])\r\n\r\n  return (\r\n    <SharePoolContext.Provider value={setSharePoolAddress}>\r\n      {selectedFarm && selectedModal === 'deposit' && (\r\n        <DepositModal selectedFarmAddress={selectedFarm} onDismiss={onDismiss} />\r\n      )}\r\n\r\n      {selectedFarm && selectedPoolId !== null && ['stake', 'unstake'].includes(selectedModal || '') && (\r\n        <StakeUnstakeModal\r\n          type={selectedModal as any}\r\n          poolId={selectedPoolId}\r\n          selectedFarmAddress={selectedFarm}\r\n          onDismiss={onDismiss}\r\n        />\r\n      )}\r\n\r\n      {selectedFarm && selectedModal === 'withdraw' && (\r\n        <WithdrawModal selectedFarmAddress={selectedFarm} onDismiss={onDismiss} />\r\n      )}\r\n\r\n      {selectedFarm && selectedModal === 'forcedWithdraw' && (\r\n        <WithdrawModal selectedFarmAddress={selectedFarm} onDismiss={onDismiss} forced />\r\n      )}\r\n\r\n      {selectedFarm && selectedModal === 'harvest' && (\r\n        <HarvestModal farmsAddress={selectedFarm} poolId={selectedPoolId} onDismiss={onDismiss} />\r\n      )}\r\n\r\n      {renderAnnouncement()}\r\n\r\n      <HeadingContainer>\r\n        <StakedOnlyToggleWrapper>\r\n          <StakedOnlyToggleText>\r\n            <Trans>Staked Only</Trans>\r\n          </StakedOnlyToggleText>\r\n          <Toggle\r\n            isActive={stakedOnly[active ? 'active' : 'ended']}\r\n            toggle={() => setStakedOnly(prev => ({ ...prev, [activeTab]: !prev[activeTab] }))}\r\n          />\r\n        </StakedOnlyToggleWrapper>\r\n        <HeadingRight>\r\n          <SearchContainer>\r\n            <SearchInput\r\n              placeholder={t`Search by token name or pool address`}\r\n              maxLength={255}\r\n              value={search}\r\n              onChange={e => handleSearch(e.target.value)}\r\n            />\r\n            <Search color={theme.subText} />\r\n          </SearchContainer>\r\n        </HeadingRight>\r\n      </HeadingContainer>\r\n\r\n      {type === 'ended' && tab !== VERSION.CLASSIC && (\r\n        <Text fontStyle=\"italic\" fontSize={12} marginBottom=\"1rem\" color={theme.subText}>\r\n          <Trans>\r\n            Your rewards may be automatically harvested a few days after the farm ends. Please check the{' '}\r\n            <StyledInternalLink to=\"/farms?type=vesting\">Vesting</StyledInternalLink> tab to see your rewards\r\n          </Trans>\r\n        </Text>\r\n      )}\r\n\r\n      {(!type || type === 'active') && tab !== VERSION.CLASSIC && (\r\n        <>\r\n          <Text fontSize={12} fontWeight=\"500\" marginBottom=\"0.375rem\">\r\n            <Trans>Farms will run in multiple phases</Trans>\r\n          </Text>\r\n          <Text fontStyle=\"italic\" fontSize={12} marginBottom=\"1rem\" color={theme.subText}>\r\n            <Trans>\r\n              Once the current phase ends, you can harvest your rewards from the farm in the{' '}\r\n              <StyledInternalLink to=\"/farms?type=ended\">Ended</StyledInternalLink> tab. To continue earning rewards in\r\n              the new phase, you must restake your NFT position into the active farm\r\n            </Trans>\r\n          </Text>\r\n        </>\r\n      )}\r\n\r\n      {loading && noFarms ? (\r\n        <Flex\r\n          sx={{\r\n            borderRadius: '16px',\r\n          }}\r\n          backgroundColor={theme.background}\r\n        >\r\n          <LocalLoader />\r\n        </Flex>\r\n      ) : noFarms ? (\r\n        <Flex\r\n          backgroundColor={theme.background}\r\n          justifyContent=\"center\"\r\n          padding=\"32px\"\r\n          style={{ borderBottomLeftRadius: '20px', borderBottomRightRadius: '20px' }}\r\n        >\r\n          <Text color={theme.subText}>\r\n            {stakedOnly[activeTab] || search ? (\r\n              <Trans>No Farms found</Trans>\r\n            ) : (\r\n              <Trans>Currently there are no Farms.</Trans>\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      ) : (\r\n        <Flex\r\n          sx={{\r\n            flexDirection: 'column',\r\n            rowGap: '48px',\r\n          }}\r\n        >\r\n          {filteredFarms.map(farm => {\r\n            return (\r\n              <ElasticFarmGroup\r\n                key={farm.id}\r\n                address={farm.id}\r\n                onOpenModal={(modalType: ModalType, pid?: number | string, forced?: boolean) => {\r\n                  setSeletedModal(modalType)\r\n                  setSeletedFarm(farm.id)\r\n                  const _pid = Number.isNaN(Number(pid)) ? null : Number(pid)\r\n                  setSeletedPoolId(_pid)\r\n                }}\r\n                pools={farm.pools}\r\n                userInfo={userFarmInfo?.[farm.id]}\r\n              />\r\n            )\r\n          })}\r\n        </Flex>\r\n      )}\r\n      <ShareModal title={t`Share this farm with your friends!`} url={shareUrl} />\r\n    </SharePoolContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ElasticFarms\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Eye = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  }));\n});\nEye.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEye.displayName = 'Eye';\nexport default Eye;","import { Trans } from '@lingui/macro'\r\nimport { Fragment, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { ChevronDown, Edit2, Eye } from 'react-feather'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { Drop, MoneyBagOutline } from 'components/Icons'\r\nimport AgriCulture from 'components/Icons/AgriCulture'\r\nimport Deposit from 'components/Icons/Deposit'\r\nimport { VERSION } from 'constants/v2'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ExternalLink, StyledInternalLink } from 'theme'\r\n\r\nimport { ChevronRight, GuideItem, GuideWrapper, ProMMFarmGuide, ProMMFarmGuideWrapper, ShowGuideBtn } from './styleds'\r\n\r\nconst IconWrapper = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: ${({ theme }) => theme.primary};\r\n`\r\n\r\nconst Highlight = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 500;\r\n`\r\n\r\nconst guideStepByVersion: Record<\r\n  VERSION,\r\n  Array<{\r\n    icon: React.ReactElement\r\n    content: React.ReactElement\r\n    title: string\r\n  }>\r\n> = {\r\n  [VERSION.ELASTIC]: [\r\n    {\r\n      content: (\r\n        <Trans>\r\n          <Highlight>Identify</Highlight> the Elastic farm you would like to participate in\r\n        </Trans>\r\n      ),\r\n      icon: <Eye size={20} />,\r\n      title: 'Step 1',\r\n    },\r\n    {\r\n      content: (\r\n        <Trans>\r\n          <Highlight>Add liquidity</Highlight> to the corresponding{' '}\r\n          {<StyledInternalLink to=\"/pools?tab=elastic\">Elastic pool</StyledInternalLink>} and receive a NFT token for\r\n          your liquidity position\r\n        </Trans>\r\n      ),\r\n      icon: <Drop size={20} />,\r\n      title: 'Step 2',\r\n    },\r\n    {\r\n      content: (\r\n        <Trans>\r\n          <Highlight>Approve</Highlight> the farming contract (if you haven&apos;t) to let it access your liquidity\r\n          positions (NFT tokens)\r\n        </Trans>\r\n      ),\r\n      icon: <Edit2 size={18} />,\r\n      title: 'Step 3',\r\n    },\r\n    {\r\n      content: (\r\n        <Trans>\r\n          <Highlight>Deposit</Highlight> your liquidity position (NFT token) into the farming contract. Then{' '}\r\n          <Highlight>stake</Highlight> it into the farm\r\n        </Trans>\r\n      ),\r\n      icon: <Deposit width={20} height={20} />,\r\n      title: 'Step 4',\r\n    },\r\n    {\r\n      content: (\r\n        <Trans>\r\n          <Highlight>Harvest</Highlight> your farming rewards whenever you want\r\n        </Trans>\r\n      ),\r\n      icon: <AgriCulture width={20} height={20} />,\r\n      title: 'Step 5',\r\n    },\r\n    {\r\n      content: (\r\n        <Trans>\r\n          <Highlight>Claim</Highlight> your farming rewards from the{' '}\r\n          <StyledInternalLink to=\"/farms?type=vesting&tab=elastic\">Vesting</StyledInternalLink> tab! Note: some farms\r\n          may have a vesting period\r\n        </Trans>\r\n      ),\r\n      icon: <MoneyBagOutline size={20} />,\r\n      title: 'Step 6',\r\n    },\r\n  ],\r\n  [VERSION.CLASSIC]: [\r\n    {\r\n      content: <Trans>Identify the Classic farm you would like to participate in</Trans>,\r\n      icon: <Eye size={20} />,\r\n      title: 'Step 1',\r\n    },\r\n    {\r\n      content: (\r\n        <Trans>\r\n          Add liquidity to the corresponding{' '}\r\n          <StyledInternalLink to=\"/pools?tab=classic\">Classic pool</StyledInternalLink> to receive Liquidity Provider\r\n          (LP) tokens\r\n        </Trans>\r\n      ),\r\n      icon: <Drop size={20} />,\r\n      title: 'Step 2',\r\n    },\r\n    {\r\n      content: <Trans>Stake your LP tokens in the farm you identified earlier</Trans>,\r\n      icon: <Deposit width={20} height={20} />,\r\n      title: 'Step 3',\r\n    },\r\n    {\r\n      content: <Trans>Harvest your farming rewards whenever you want</Trans>,\r\n      icon: <AgriCulture width={20} height={20} />,\r\n      title: 'Step 4',\r\n    },\r\n    {\r\n      content: <Trans>Claim your farming rewards! (Note: some farms may have a vesting period)</Trans>,\r\n      icon: <MoneyBagOutline size={20} />,\r\n      title: 'Step 5',\r\n    },\r\n  ],\r\n}\r\n\r\nfunction FarmGuide({ farmType }: { farmType: VERSION }) {\r\n  const [show, setShow] = useState(!isMobile)\r\n  const theme = useTheme()\r\n  const upToMedium = useMedia('(max-width: 992px)')\r\n\r\n  const guideSteps = guideStepByVersion[farmType]\r\n\r\n  return (\r\n    <ProMMFarmGuideWrapper>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <ProMMFarmGuide>\r\n          {farmType === VERSION.ELASTIC ? (\r\n            <>\r\n              <Trans>\r\n                Deposit your liquidity position (NFT token) from the Elastic Pools here, and then stake it to earn even\r\n                more attractive farming rewards.\r\n              </Trans>\r\n\r\n              {(!upToMedium || !show) && (\r\n                <ExternalLink href=\"https://docs.kyberswap.com/guides/how-to-farm\">\r\n                  {' '}\r\n                  <Trans>Learn More ↗</Trans>\r\n                </ExternalLink>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Trans>\r\n                Deposit your liquidity from the Classic Pools here to earn even more attractive farming rewards.\r\n              </Trans>\r\n              {(!upToMedium || !show) && (\r\n                <ExternalLink href=\"https://docs.kyberswap.com/classic/guides/yield-farming-guide\">\r\n                  {' '}\r\n                  <Trans>Learn More ↗</Trans>\r\n                </ExternalLink>\r\n              )}\r\n            </>\r\n          )}\r\n        </ProMMFarmGuide>\r\n\r\n        <ShowGuideBtn onClick={() => setShow(prev => !prev)} show={show}>\r\n          <ChevronDown />\r\n        </ShowGuideBtn>\r\n      </Flex>\r\n\r\n      <GuideWrapper show={show} numOfSteps={guideSteps.length}>\r\n        {guideSteps.map((step, i) => {\r\n          return (\r\n            <Fragment key={i}>\r\n              {i !== 0 && <ChevronRight />}\r\n              <GuideItem>\r\n                <Flex marginBottom=\"0.5rem\" alignItems=\"center\" sx={{ gap: '8px' }}>\r\n                  <IconWrapper>{step.icon}</IconWrapper>\r\n                  <Text flex={1}>\r\n                    <Text\r\n                      color={theme.text}\r\n                      fontWeight=\"500\"\r\n                      as=\"span\"\r\n                      sx={{\r\n                        textTransform: 'uppercase',\r\n                      }}\r\n                    >\r\n                      {step.title}\r\n                    </Text>\r\n                    {upToMedium && <>: {step.content} </>}\r\n                  </Text>\r\n                </Flex>\r\n                {!upToMedium && step.content}\r\n              </GuideItem>\r\n            </Fragment>\r\n          )\r\n        })}\r\n\r\n        {upToMedium && (\r\n          <Flex justifyContent=\"flex-end\">\r\n            {farmType === VERSION.ELASTIC ? (\r\n              <ExternalLink href=\"https://docs.kyberswap.com/guides/how-to-farm\">\r\n                <Trans>Learn More ↗</Trans>\r\n              </ExternalLink>\r\n            ) : (\r\n              <ExternalLink href=\"https://docs.kyberswap.com/classic/guides/yield-farming-guide\">\r\n                <Trans>Learn More ↗</Trans>\r\n              </ExternalLink>\r\n            )}\r\n          </Flex>\r\n        )}\r\n      </GuideWrapper>\r\n    </ProMMFarmGuideWrapper>\r\n  )\r\n}\r\n\r\nexport default FarmGuide\r\n","import { Currency } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport { stringify } from 'querystring'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport ClassicElasticTab from 'components/ClassicElasticTab'\r\nimport Loader from 'components/Loader'\r\nimport RewardTokenPrices from 'components/RewardTokenPrices'\r\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\r\nimport Tutorial, { TutorialType } from 'components/Tutorial'\r\nimport UpcomingFarms from 'components/UpcomingFarms'\r\nimport Vesting from 'components/Vesting'\r\nimport ProMMVesting from 'components/Vesting/ProMMVesting'\r\nimport YieldPools from 'components/YieldPools'\r\nimport ElasticFarmSummary from 'components/YieldPools/ElasticFarmSummary'\r\nimport ElasticFarms from 'components/YieldPools/ElasticFarms'\r\nimport FarmGuide from 'components/YieldPools/FarmGuide'\r\nimport {\r\n  NewText,\r\n  PageWrapper,\r\n  PoolTitleContainer,\r\n  Tab,\r\n  TabContainer,\r\n  TabWrapper,\r\n  TopBar,\r\n  UpcomingPoolsWrapper,\r\n} from 'components/YieldPools/styleds'\r\nimport { ZERO_ADDRESS } from 'constants/index'\r\nimport { UPCOMING_POOLS } from 'constants/upcoming-pools'\r\nimport { VERSION } from 'constants/v2'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { useSyncNetworkParamWithStore } from 'hooks/useSyncNetworkParamWithStore'\r\nimport { AppState } from 'state'\r\nimport { useBlockNumber } from 'state/application/hooks'\r\nimport { FarmUpdater, useElasticFarms } from 'state/farms/elastic/hooks'\r\nimport { useFarmsData } from 'state/farms/hooks'\r\nimport { isInEnum } from 'utils/string'\r\n\r\nconst Farm = () => {\r\n  const { isEVM } = useActiveWeb3React()\r\n  const { loading } = useFarmsData()\r\n  const qs = useParsedQueryString<{ type: string; tab: string }>()\r\n  const { type = 'active', tab = VERSION.ELASTIC } = qs\r\n  const farmType = isInEnum(tab, VERSION) ? tab : VERSION.ELASTIC\r\n  const history = useHistory()\r\n\r\n  const vestingLoading = useSelector<AppState, boolean>(state => state.vesting.loading)\r\n\r\n  const renderTabContent = () => {\r\n    switch (type) {\r\n      case 'active':\r\n        return farmType === VERSION.ELASTIC ? <ElasticFarms active /> : <YieldPools loading={loading} active />\r\n      case 'coming':\r\n        return <UpcomingFarms />\r\n      case 'ended':\r\n        return farmType === VERSION.ELASTIC ? (\r\n          <ElasticFarms active={false} />\r\n        ) : (\r\n          <YieldPools loading={loading} active={false} />\r\n        )\r\n      case 'vesting':\r\n        return farmType === VERSION.ELASTIC ? <ProMMVesting /> : <Vesting loading={vestingLoading} />\r\n      default:\r\n        return <YieldPools loading={loading} active />\r\n    }\r\n  }\r\n  const { mixpanelHandler } = useMixpanel()\r\n  useSyncNetworkParamWithStore()\r\n\r\n  // Total rewards for Classic pool\r\n  const { data: farmsByFairLaunch } = useFarmsData()\r\n\r\n  const below768 = useMedia('(max-width: 768px)')\r\n  const below1500 = useMedia('(max-width: 1500px)')\r\n\r\n  const blockNumber = useBlockNumber()\r\n\r\n  const { farms: elasticFarms } = useElasticFarms()\r\n\r\n  const rewardTokens = useMemo(() => {\r\n    const tokenMap: { [address: string]: Currency } = {}\r\n    const currentTimestamp = Math.floor(Date.now() / 1000)\r\n    Object.values(farmsByFairLaunch)\r\n      .flat()\r\n      .filter(\r\n        item =>\r\n          (item.endTime && item.endTime > currentTimestamp) ||\r\n          (blockNumber && item.endBlock && item.endBlock > blockNumber),\r\n      )\r\n      .forEach(current => {\r\n        current.rewardTokens.forEach(token => {\r\n          if (token && !tokenMap[token.wrapped.address]) tokenMap[token.wrapped.address] = token\r\n        })\r\n      })\r\n\r\n    elasticFarms?.forEach(farm => {\r\n      farm.pools.forEach(pool => {\r\n        if (pool.endTime > Date.now() / 1000)\r\n          pool.totalRewards.forEach(reward => {\r\n            tokenMap[reward.currency.isNative ? ZERO_ADDRESS : reward.currency.wrapped.address] = reward.currency\r\n          })\r\n      })\r\n    })\r\n\r\n    return Object.values(tokenMap)\r\n  }, [farmsByFairLaunch, blockNumber, elasticFarms])\r\n\r\n  const rewardPriceAndTutorial = !!rewardTokens.length && (\r\n    <Flex\r\n      flex={1}\r\n      width={below768 ? 'calc(100vw - 32px)' : below1500 ? 'calc(100vw - 412px)' : '1088px'}\r\n      sx={{ gap: '4px' }}\r\n      alignItems=\"center\"\r\n      justifyContent=\"flex-end\"\r\n    >\r\n      <RewardTokenPrices\r\n        rewardTokens={rewardTokens}\r\n        style={{ display: 'flex', width: '100%', overflow: 'hidden', flex: 1 }}\r\n      />\r\n    </Flex>\r\n  )\r\n\r\n  if (!isEVM) return <Redirect to=\"/\" />\r\n  return (\r\n    <>\r\n      <FarmUpdater />\r\n      <PageWrapper gap=\"24px\">\r\n        <TopBar>\r\n          <ClassicElasticTab />\r\n\r\n          {!below768 && rewardPriceAndTutorial}\r\n        </TopBar>\r\n\r\n        <FarmGuide farmType={farmType} />\r\n\r\n        {farmType === VERSION.ELASTIC && <ElasticFarmSummary />}\r\n\r\n        {below768 && rewardPriceAndTutorial}\r\n\r\n        <div>\r\n          <TabContainer>\r\n            <TabWrapper>\r\n              <Tab\r\n                onClick={() => {\r\n                  if (type && type !== 'active') {\r\n                    mixpanelHandler(MIXPANEL_TYPE.FARMS_ACTIVE_VIEWED)\r\n                  }\r\n                  const newQs = { ...qs, type: 'active' }\r\n                  history.push({\r\n                    search: stringify(newQs),\r\n                  })\r\n                }}\r\n                isActive={!type || type === 'active'}\r\n              >\r\n                <PoolTitleContainer>\r\n                  <span>\r\n                    <Trans>Active</Trans>\r\n                  </span>\r\n                </PoolTitleContainer>\r\n              </Tab>\r\n              <Tab\r\n                onClick={() => {\r\n                  if (type !== 'ended') {\r\n                    mixpanelHandler(MIXPANEL_TYPE.FARMS_ENDING_VIEWED)\r\n                  }\r\n                  const newQs = { ...qs, type: 'ended' }\r\n                  history.push({\r\n                    search: stringify(newQs),\r\n                  })\r\n                }}\r\n                isActive={type === 'ended'}\r\n              >\r\n                <PoolTitleContainer>\r\n                  <span>\r\n                    <Trans>Ended</Trans>\r\n                  </span>\r\n                </PoolTitleContainer>\r\n              </Tab>\r\n\r\n              <Tab\r\n                onClick={() => {\r\n                  if (type !== 'coming') {\r\n                    mixpanelHandler(MIXPANEL_TYPE.FARMS_UPCOMING_VIEWED)\r\n                  }\r\n                  const newQs = { ...qs, type: 'coming' }\r\n                  history.push({\r\n                    search: stringify(newQs),\r\n                  })\r\n                }}\r\n                isActive={type === 'coming'}\r\n              >\r\n                <UpcomingPoolsWrapper>\r\n                  <Trans>Upcoming</Trans>\r\n                  {UPCOMING_POOLS.length > 0 && (\r\n                    <NewText>\r\n                      <Trans>New</Trans>\r\n                    </NewText>\r\n                  )}\r\n                </UpcomingPoolsWrapper>\r\n              </Tab>\r\n\r\n              <Tab\r\n                onClick={() => {\r\n                  if (type !== 'vesting') {\r\n                    mixpanelHandler(MIXPANEL_TYPE.FARMS_MYVESTING_VIEWED)\r\n                  }\r\n                  const newQs = { ...qs, type: 'vesting' }\r\n                  history.push({\r\n                    search: stringify(newQs),\r\n                  })\r\n                }}\r\n                isActive={type === 'vesting'}\r\n              >\r\n                <PoolTitleContainer>\r\n                  <Text>\r\n                    <Trans>Vesting</Trans>\r\n                  </Text>\r\n                  {vestingLoading && <Loader style={{ marginLeft: '4px' }} />}\r\n                </PoolTitleContainer>\r\n              </Tab>\r\n            </TabWrapper>\r\n\r\n            {farmType === VERSION.CLASSIC && <Tutorial type={TutorialType.CLASSIC_FARMS} />}\r\n            {farmType === VERSION.ELASTIC && <Tutorial type={TutorialType.ELASTIC_FARMS} />}\r\n          </TabContainer>\r\n\r\n          {renderTabContent()}\r\n        </div>\r\n      </PageWrapper>\r\n      <SwitchLocaleLink />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","export const getFormattedTimeFromSecond = (numberOfSeconds: number, showDetail = false) => {\r\n  if (numberOfSeconds === 0) {\r\n    return '0 Days'\r\n  }\r\n\r\n  const second = numberOfSeconds % 60\r\n  const estimatedRemainingMinutes = (numberOfSeconds - second) / 60\r\n  const minute = estimatedRemainingMinutes % 60\r\n  const estimatedRemainingHours = (estimatedRemainingMinutes - minute) / 60\r\n  const hour = estimatedRemainingHours % 24\r\n  const estimatedRemainingDays = (estimatedRemainingHours - hour) / 24\r\n\r\n  let formattedEstimatedRemainingTime = ''\r\n\r\n  let unit: string\r\n\r\n  if (estimatedRemainingDays || !showDetail) {\r\n    unit = (showDetail ? ' Day' : 'D') + (showDetail && estimatedRemainingDays > 1 ? 's ' : ' ')\r\n    formattedEstimatedRemainingTime += estimatedRemainingDays + unit\r\n  }\r\n\r\n  if (hour || !showDetail) {\r\n    unit = (showDetail ? ' Hour' : 'H') + (showDetail && hour > 1 ? 's ' : ' ')\r\n    formattedEstimatedRemainingTime += hour + unit\r\n  }\r\n\r\n  if (minute || !showDetail) {\r\n    unit = (showDetail ? ' Minute' : 'M') + (showDetail && minute > 1 ? 's ' : ' ')\r\n    formattedEstimatedRemainingTime += minute + unit\r\n  }\r\n\r\n  const showSecond = estimatedRemainingDays === 0 && hour === 0 && minute === 0\r\n  if (showSecond) {\r\n    unit = (showDetail ? ' Second' : 'S') + (showDetail && second > 1 ? 's ' : ' ')\r\n    formattedEstimatedRemainingTime += Math.trunc(second) + unit\r\n  }\r\n\r\n  return formattedEstimatedRemainingTime\r\n}\r\n"],"sourceRoot":""}