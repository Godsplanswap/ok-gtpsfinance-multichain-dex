{"version":3,"sources":["data/TotalSupply.ts","pages/AppBody.tsx","pages/Pool/styleds.tsx","pages/PoolFinder/index.tsx"],"names":["useTotalSupply","token","contract","useTokenContract","address","totalSupply","useSingleCallResult","result","TokenAmount","fromRawAmount","toString","undefined","BodyWrapper","styled","div","AppBody","children","className","Wrapper","ClickableText","Text","theme","primary","Dots","span","Fields","PoolFinder","useActiveWeb3React","account","chainId","isEVM","useState","showSearch","setShowSearch","TOKEN1","activeField","setActiveField","NativeCurrencies","currency0","setCurrency0","currency1","setCurrency1","pairs","usePair","addPair","usePairAdderByTokens","useEffect","length","token0","wrapped","token1","positions","useTokenBalances","every","map","liquidityToken","handleCurrencySelect","useCallback","currency","TOKEN0","myPairs","filter","pairState","pair","hasPosition","Boolean","JSBI","greaterThan","quotient","BigInt","PairState","EXISTS","index","border","handleSearchDismiss","prerequisiteMessage","padding","textAlign","native0","useCurrencyConvertedToNative","native1","mixpanelHandler","useMixpanel","MIXPANEL_TYPE","IMPORT_POOL_INITIATED","gap","onClick","fontWeight","fontSize","marginLeft","symbol","size","color","to","currencyId","LOADING","justify","style","justifyItems","backgroundColor","borderRadius","isOpen","onCurrencySelect","onDismiss","showCommonBases","selectedCurrency"],"mappings":"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","file":"static/js/pool-finder-page.98078b02.chunk.js","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { useTokenContract } from 'hooks/useContract'\r\nimport { useSingleCallResult } from 'state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? TokenAmount.fromRawAmount(token, totalSupply.toString()) : undefined\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const BodyWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 425px;\r\n  width: 100%;\r\n  background: #ffffff;\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 20px;\r\n  padding: 2rem 1.5rem 1.5rem 1.5rem;\r\n  margin-top: 20px;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children, className }: { children: React.ReactNode; className?: string }) {\r\n  return <BodyWrapper className={className}>{children}</BodyWrapper>\r\n}\r\n","import { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","import { Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Currency, TokenAmount } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { Plus } from 'react-feather'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\n\r\nimport { ButtonDropdownLight } from 'components/Button'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn, ColumnCenter } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { FindPoolTabs } from 'components/NavigationTabs'\r\nimport { NarrowPositionCard } from 'components/PositionCard'\r\nimport Row from 'components/Row'\r\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport { PairState, usePair } from 'data/Reserves'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport AppBody from 'pages/AppBody'\r\nimport { Dots } from 'pages/Pool/styleds'\r\nimport { usePairAdderByTokens } from 'state/user/hooks'\r\nimport { useTokenBalances } from 'state/wallet/hooks'\r\nimport { StyledInternalLink } from 'theme'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1,\r\n}\r\n\r\nexport default function PoolFinder() {\r\n  const { account, chainId, isEVM } = useActiveWeb3React()\r\n\r\n  const [showSearch, setShowSearch] = useState<boolean>(false)\r\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\r\n\r\n  const [currency0, setCurrency0] = useState<Currency | null>(NativeCurrencies[chainId])\r\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\r\n\r\n  // pairs: {PairState, Pair, isStaticFeePair}[]\r\n  const pairs: [PairState, Pair | null][] = usePair(currency0 ?? undefined, currency1 ?? undefined)\r\n\r\n  const addPair = usePairAdderByTokens()\r\n  useEffect(() => {\r\n    if (pairs.length > 0) {\r\n      const token0 = currency0?.wrapped\r\n      const token1 = currency1?.wrapped\r\n      if (!!(token0 && token1)) {\r\n        addPair(token0, token1)\r\n      }\r\n    }\r\n  }, [pairs, addPair, currency0, currency1, chainId])\r\n\r\n  const positions: { [tokenAddress: string]: TokenAmount | undefined } = useTokenBalances(\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    pairs.every(([, pair]) => pair) ? pairs.map(([, pair]) => pair!.liquidityToken) : undefined,\r\n  )\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      if (activeField === Fields.TOKEN0) {\r\n        setCurrency0(currency)\r\n      } else {\r\n        setCurrency1(currency)\r\n      }\r\n    },\r\n    [activeField],\r\n  )\r\n\r\n  const myPairs = pairs\r\n    .filter(([pairState, pair]) => {\r\n      // const validPairNoLiquidity: boolean =\r\n      //   pairState === PairState.NOT_EXISTS ||\r\n      //   Boolean(\r\n      //     pairState === PairState.EXISTS &&\r\n      //       pair &&\r\n      //       JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\r\n      //       JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0))\r\n      //   )\r\n      let hasPosition = false\r\n      if (pair && pair.liquidityToken.address && positions[pair.liquidityToken.address]) {\r\n        hasPosition = Boolean(\r\n          positions[pair.liquidityToken.address] &&\r\n            JSBI.greaterThan((positions[pair.liquidityToken.address] as TokenAmount).quotient, JSBI.BigInt(0)),\r\n        )\r\n      }\r\n      return pairState === PairState.EXISTS && hasPosition && pair\r\n    })\r\n    .map(([_, pair], index) => !!pair && <NarrowPositionCard key={index} pair={pair} border=\"1px solid #CED0D9\" />)\r\n\r\n  const handleSearchDismiss = useCallback(() => {\r\n    setShowSearch(false)\r\n  }, [setShowSearch])\r\n\r\n  const prerequisiteMessage = (\r\n    <LightCard padding=\"45px 10px\">\r\n      <Text textAlign=\"center\">\r\n        {!account ? t`Connect to a wallet to find pools` : t`Select a token to find your liquidity.`}\r\n      </Text>\r\n    </LightCard>\r\n  )\r\n\r\n  const native0 = useCurrencyConvertedToNative(currency0 || undefined)\r\n  const native1 = useCurrencyConvertedToNative(currency1 || undefined)\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n  useEffect(() => {\r\n    mixpanelHandler(MIXPANEL_TYPE.IMPORT_POOL_INITIATED)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (!isEVM) return <Redirect to=\"/\" />\r\n  return (\r\n    <AppBody>\r\n      <FindPoolTabs />\r\n      <AutoColumn gap=\"md\">\r\n        <ButtonDropdownLight\r\n          onClick={() => {\r\n            setShowSearch(true)\r\n            setActiveField(Fields.TOKEN0)\r\n          }}\r\n        >\r\n          {native0 ? (\r\n            <Row>\r\n              <CurrencyLogo currency={currency0 || undefined} />\r\n              <Text fontWeight={500} fontSize={20} marginLeft={'12px'}>\r\n                {native0?.symbol}\r\n              </Text>\r\n            </Row>\r\n          ) : (\r\n            <Text fontWeight={500} fontSize={20} marginLeft={'12px'}>\r\n              Select a Token\r\n            </Text>\r\n          )}\r\n        </ButtonDropdownLight>\r\n\r\n        <ColumnCenter>\r\n          <Plus size=\"16\" color=\"#888D9B\" />\r\n        </ColumnCenter>\r\n\r\n        <ButtonDropdownLight\r\n          onClick={() => {\r\n            setShowSearch(true)\r\n            setActiveField(Fields.TOKEN1)\r\n          }}\r\n        >\r\n          {native1 ? (\r\n            <Row>\r\n              <CurrencyLogo currency={currency1 || undefined} />\r\n              <Text fontWeight={500} fontSize={20} marginLeft={'12px'}>\r\n                {native1?.symbol}\r\n              </Text>\r\n            </Row>\r\n          ) : (\r\n            <Text fontWeight={500} fontSize={20} marginLeft={'12px'}>\r\n              Select a Token\r\n            </Text>\r\n          )}\r\n        </ButtonDropdownLight>\r\n        <StyledInternalLink\r\n          to={`/pools/${!!currency0 ? currencyId(currency0, chainId) : undefined}/${\r\n            !!currency1 ? currencyId(currency1, chainId) : undefined\r\n          }?tab=classic`}\r\n        >\r\n          <Text textAlign=\"center\">\r\n            <Trans>Add liquidity</Trans>\r\n          </Text>\r\n        </StyledInternalLink>\r\n        {pairs.filter(([pairState]) => pairState === PairState.LOADING).length > 0 && (\r\n          <LightCard padding=\"45px 10px\">\r\n            <AutoColumn gap=\"sm\" justify=\"center\">\r\n              <Text textAlign=\"center\">\r\n                <Trans>Loading</Trans>\r\n                <Dots />\r\n              </Text>\r\n            </AutoColumn>\r\n          </LightCard>\r\n        )}\r\n\r\n        {currency0 && currency1\r\n          ? myPairs.length > 0 && (\r\n              <>\r\n                <ColumnCenter\r\n                  style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\r\n                >\r\n                  <Text textAlign=\"center\" fontWeight={500}>\r\n                    <Trans>Pool Found!</Trans>\r\n                  </Text>\r\n                  <StyledInternalLink to={`/myPools?tab=classic`}>\r\n                    <Text textAlign=\"center\">\r\n                      <Trans>Manage your pools.</Trans>\r\n                    </Text>\r\n                  </StyledInternalLink>\r\n                </ColumnCenter>\r\n                {myPairs}\r\n              </>\r\n            )\r\n          : prerequisiteMessage}\r\n      </AutoColumn>\r\n\r\n      <CurrencySearchModal\r\n        isOpen={showSearch}\r\n        onCurrencySelect={handleCurrencySelect}\r\n        onDismiss={handleSearchDismiss}\r\n        showCommonBases\r\n        selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\r\n      />\r\n    </AppBody>\r\n  )\r\n}\r\n"],"sourceRoot":""}