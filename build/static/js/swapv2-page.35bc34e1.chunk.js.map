{"version":3,"sources":["assets/images/tutorial_swap sync /^/.*$","assets/images/tutorial_swap/menu.png","assets/images/tutorial_swap/step1.png","assets/images/tutorial_swap/step2.png","assets/images/tutorial_swap/step4.1.png","assets/images/tutorial_swap/step4.2.png","assets/images/tutorial_swap/step5.png","assets/images/tutorial_swap/step6.png","assets/images/tutorial_swap/step7.png","assets/images/tutorial_swap/step8.1.png","assets/images/tutorial_swap/step8.2.png","assets/images/tutorial_swap/welcome.png","components/AddressInputPanel/index.tsx","components/Animation/index.ts","components/CheckBox.tsx","components/Collapse.tsx","components/ProgressSteps/index.tsx","components/SwitchLocaleLink/index.tsx","components/TokenWarningModal/index.tsx","components/swapv2/AdvancedSwapDetails.tsx","components/swapv2/AdvancedSwapDetailsDropdown.tsx","hooks/solana/useProvider.ts","hooks/useMarquee.ts","hooks/useSyncNetworkParamWithStore.ts","hooks/useWrapCallback.ts","pages/AppBody.tsx","pages/Pool/styleds.tsx","assets/svg/routing-icon.svg","components/TopTrendingSoonTokensInCurrentNetwork/TopTrendingSoonTokenItem.tsx","components/TopTrendingSoonTokensInCurrentNetwork/index.tsx","pages/TrueSight/hooks/useGetTrendingSoonTokenId.ts","components/TrendingSoonTokenBanner/index.tsx","assets/svg/touch_icon.svg","components/Tutorial/TutorialSwap/CustomMask.tsx","components/Tutorial/TutorialSwap/CustomPopup.tsx","components/Tutorial/TutorialSwap/TutorialMobile.tsx","components/Tutorial/TutorialSwap/index.tsx","components/swapv2/SwapModalFooter.tsx","components/swapv2/SwapModalHeader.tsx","components/swapv2/ConfirmSwapModal.tsx","hooks/useGasPriceFromDeBank.ts","components/swapv2/GasPriceTrackerPanel.tsx","components/swapv2/LiquiditySourcesPanel/SearchBar.tsx","components/swapv2/LiquiditySourcesPanel/index.tsx","assets/svg/coingecko-light.svg","assets/svg/coingecko.svg","components/AddToMetamask/index.tsx","hooks/useTokenInfo.ts","components/swapv2/TokenInfo.tsx","components/swapv2/MobileTokenInfo.tsx","components/swapv2/PairSuggestion/utils.ts","components/swapv2/PairSuggestion/PairSuggestionItem.tsx","components/swapv2/PairSuggestion/ListPair.tsx","components/swapv2/PairSuggestion/SearchInput.tsx","components/swapv2/PairSuggestion/request.ts","components/swapv2/PairSuggestion/index.tsx","components/swapv2/RefreshButton.tsx","components/swapv2/SwapSettingsPanel/AdvancedModeSetting.tsx","components/swapv2/SwapSettingsPanel/GasPriceTrackerSetting.tsx","components/swapv2/SwapSettingsPanel/LiquiditySourcesSetting.tsx","components/swapv2/SwapSettingsPanel/SlippageSetting.tsx","components/swapv2/SwapSettingsPanel/TransactionTimeLimitSetting.tsx","components/swapv2/SwapSettingsPanel/index.tsx","components/swapv2/TokenInfoV2/SingleTokenInfo.tsx","components/swapv2/TokenInfoV2/index.tsx","components/swapv2/TradePrice.tsx","components/swapv2/TradeTypeSelection.tsx","hooks/useSwapV2Callback.ts","pages/SwapV2/index.tsx","state/swap/useAggregator.ts","state/bridge/hooks.ts","utils/fee.ts","utils/sendTransaction.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","InputPanel","styled","div","theme","flexColumnNoWrap","buttonBlack","ContainerRow","InputContainer","Input","input","error","red","text","border","DropdownIcon","DropdownSVG","open","AddressInputPanel","value","onChange","useActiveWeb3React","chainId","networkInfo","isEVM","useENS","address","loading","name","handleInput","useCallback","event","withoutSpaces","target","replace","useTheme","Boolean","length","gap","justifyContent","alignItems","marginTop","color","subText","fontSize","fontWeight","href","getEtherscanLink","style","marginLeft","etherscanName","onClick","maxHeight","className","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","pattern","FadeInAnimation","$isAnimate","Checkbox","primary","textReverse","disableText","ItemWrapper","background","Header","ArrowWrapper","ContentWrapper","CollapseItem","header","arrowComponent","children","expandedOnMount","useState","isExpanded","setExpanded","ToggleCollapse","data","itemActiveStyle","itemStyle","expandedIndex","setExpandedIndex","item","index","isActive","title","content","Wrapper","AutoColumn","Grouping","RowBetween","Circle","confirmed","disabled","buttonGray","green1","CircleRow","Connector","prevConfirmed","bg4","transparentize","ProgressCircles","steps","rest","justify","step","i","Container","TYPE","small","mediaWidth","upToMedium","SwitchLocaleLink","activeLocale","useActiveLocale","browserLocale","useMemo","navigatorLocale","location","useLocation","qs","useParsedQueryString","DEFAULT_LOCALE","targetLocale","search","stringify","lng","to","LOCALE_LABEL","TokenWarningModal","isOpen","tokens","onConfirm","onDismiss","handleCurrencySelect","enterToImport","IconWrapper","show","TradeSummary","trade","feeConfig","allowedSlippage","setShow","isExactIn","tradeType","TradeType","EXACT_INPUT","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","nativeInput","useCurrencyConvertedToNative","inputAmount","currency","nativeOutput","outputAmount","formattedFeeAmountUsd","getFormattedFeeAmountUsd","Row","cursor","prev","role","Divider","black","InfoHelper","size","Field","OUTPUT","formattedNum","toSignificant","symbol","INPUT","gasUsd","toString","priceImpact","warning","toFixed","AdvancedSwapDetails","useUserSlippageTolerance","TradeSummaryBridge","outputInfo","useBridgeState","tokenInfoOut","fee","BigValueThreshold","time","SwapFeeRatePerMillion","MinimumSwapFee","MaximumSwapFee","textAlign","flexDirection","MinimumSwap","MaximumSwap","AdvancedDetailsFooter","text2","AdvancedSwapDetailsDropdown","lastTrade","useLastTruthy","undefined","AdvancedSwapDetailsDropdownBridge","useProvider","wallet","useAnchorWallet","AnchorProvider","connection","defaultOptions","useMarquee","marqueeContainerRef","useRef","endScroll","setEndScroll","args","useDeepCompareEffect","itv","current","lastScrollLeft","scrollLeft","setInterval","clientWidth","scrollWidth","Math","abs","scrollTo","left","clearInterval","useSyncNetworkParamWithStore","params","useParams","changeNetwork","useChangeNetwork","walletEVM","walletSolana","isOnInit","history","useHistory","match","useRouteMatch","triedEager","useEagerConnect","useEffect","network","paramChainId","values","NETWORKS_INFO","find","n","route","pathname","path","isSolana","isConnected","WrapType","NOT_APPLICABLE","wrapType","useWrapCallback","inputCurrency","outputCurrency","typedValue","account","provider","wethContract","useWETHContract","balance","useCurrencyBalance","tryParseAmount","addTransactionWithType","useTransactionAdder","sufficientBalance","lessThan","nativeTokenSymbol","NativeCurrencies","isNative","WETH","equals","WRAP","execute","estimateGas","deposit","quotient","gasLimit","calculateGasMargin","txReceipt","hash","accountPK","PublicKey","createWrapSOLInstructions","wrapIxs","getLatestBlockhash","blockhash","lastValidBlockHeight","tx","Transaction","feePayer","add","sendAndConfirm","TRANSACTION_TYPE","summary","console","inputError","UNWRAP","withdraw","checkAndCreateUnwrapSOLInstruction","ix","BodyWrapper","AppBody","ClickableText","Text","Dots","span","_path","_path2","_path3","_path4","_excluded","_extends","assign","bind","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRoutingIcon","_ref","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","d","ForwardRef","TopTrendingSoonTokenItem","tokenData","setSelectedToken","mixpanelHandler","useMixpanel","currentNetwork","trueSightId","toggleTrendingSoonTokenDetailModal","useToggleModal","ApplicationModal","TRENDING_SOON_TOKEN_DETAIL","onSelectToken","MIXPANEL_TYPE","DISCOVER_SWAP_MORE_INFO_CLICKED","trending_token","src","logo_url","minWidth","minHeight","sx","borderRadius","as","mr","whiteSpace","price","price_change_percentage_24h","apr","formatNumberWithPrecisionRange","placement","Button","padding","Link","platforms","get","rgba","DISCOVER_SWAP_BUY_NOW_CLICKED","Cart","TrendingSoonTokensAndNoteContainer","TrendingSoonTokensContainer","upToSmall","TrendingSoonTokensMobileContainer","TextNote","TopTrendingSoonTokensInCurrentNetwork","useTopTrendingSoonTokensInCurrentNetwork","topTrendingSoonTokens","isLoadingTrendingSoonTokens","isLoading","above768","useMedia","isShowTopTrendingTokens","useShowTopTrendingSoonTokens","isTrendingSoonTokenDetailModalOpen","useModalOpen","selectedToken","isOpenChartModal","setIsOpenChartModal","TrueSightTimeframe","ONE_DAY","chartTimeframe","setChartTimeframe","TrueSightChartCategory","TRADING_VOLUME","chartCategory","setChartCategory","tokenNetwork","next","tokenAddress","useGetCoinGeckoChartData","chartData","isChartDataLoading","trendingSoonShowed","useSwapState","dispatch","useDispatch","sto","setTimeout","setTrendingSoonShowed","clearTimeout","Modal","maxWidth","TrendingSoonTokenDetail","setFilter","DiscoverIcon","ml","backgroundColor","overflow","paddingLeft","flex","Fragment","borderRight","token_id","window","origin","onClickCapture","DISCOVER_SWAP_DISCOVER_MORE_CLICKED","margin","TrendingSoonTokenItem","isSelected","tokenIndex","onSelect","isShowMedal","MobileChartModal","setIsOpen","display","marginBottom","useGetTrendingSoonTokenId","token","useSWR","TRUESIGHT_API","TRENDING_SOON_MAX_ITEMS","url","Promise","all","fetch","responses","response","ok","json","TrendingSoonTokenBanner","currencies","token0","wrapped","token1","trendingToken0Id","trendingToken1Id","trendingSoonCurrency","currencySymbol","Token","DiscoverIconWrapper","CurrencyLogo","marginRight","BannerText","DISCOVER_SWAP_SEE_HERE_CLICKED","fadeIn","keyframes","memo","SvgTouchIcon","pointerToSetting","TouchIconWrapper","TouchIcon","SpotLight","blurWidth","hasSpotlight","filter","join","highlightSpotLight","CustomMask","options","stepInfo","hasPointer","spotlightInteraction","selector","stopPropagationMouseDown","targetInfo","tourRoot","disableMaskInteraction","containerHeight","document","body","scrollHeight","containerWidth","coords","x","y","dims","position","top","innerWidth","innerHeight","pointerEvents","onMouseDown","stopPropagation","element","querySelector","click","max","PopupWrapper","tableHeader","center","css","ARROW_SIZE","BORDER_TRANSPARENT","Arrow","tooltipPosition","targetElement","orientation","arrowColor","dir","arrowDir","paddingV","clientHeight","paddingH","CardinalOrientation","SOUTH","right","SOUTHEAST","SOUTHWEST","EAST","bottom","EASTNORTH","EASTSOUTH","WESTNORTH","WEST","WESTSOUTH","NORTHWEST","NORTH","NORTHEAST","CENTER","borderTop","borderBottom","borderLeft","TitlePopup","stepNumber","totalStep","Heading","CustomPopup","stepContent","stepIndex","close","allSteps","customFooterRenderer","customTitleRenderer","popupStyle","lastStep","reduce","maxStep","classList","contains","description","Z_INDEXS","MODAL","TutorialMobile","stopTutorial","overflowY","isMobile","h5","LayoutWrapper","Layout","NetworkItemWrapper","NetworkWrapper","ImageMobile","imageName","require","default","alt","Desc","p","HighlightText","Welcome","WelcomeImage","ConnectWallet","setIsExpanded","toggleExpand","isDarkMode","useIsDarkMode","LIST_TITLE","CONNECT_WALLET","SUPPORTED_WALLETS","installLink","icon","iconLight","TouchAbleVideo","VideoSwap","videoStyle","playedVideo","setPlayedVideo","START_TRADING","getTutorialVideoId","TutorialType","SWAP","frameBorder","allow","allowFullScreen","iframe","setAttribute","getAttribute","TUTORIAL_VIEW_VIDEO_SWAP","CustomCss","createGlobalStyle","TutorialKeys","useTutorialSwapGuide","setShowTutorial","localStorage","getItem","setItem","list","isLogin","isHighlightBtnConnectWallet","filterTruthy","WELCOME","logic","pcOnly","TutorialIds","BUTTON_CONNECT_WALLET","BUTTON_ADDRESS_WALLET","YOUR_WALLET","orientationPreferences","SELECT_NETWORK","SWAP_FORM","min","requiredClickSelector","BUTTON_SETTING_SWAP_FORM","selectorHint","SWAP_FORM_CONTENT","SETTING","maskPadding","TRADING_SETTING_CONTENT","callbackEndStep","getElementById","BRIDGE_LINKS","BRIDGE","EARNING_LINKS","EARN","CAMPAIGN_LINK","CAMPAIGN","DISCOVER_LINK","DISCOVER","BUTTON_VIEW_GUIDE_SWAP","VIEW_GUIDE","BUTTON_SETTING","getListSteps","processNextStep","isNext","nextIndex","needClickAnyElement","nextStep","needClick","button","checkRequiredClick","tooltipSeparation","customTooltipRenderer","initialStepIndex","customNextFunc","TUTORIAL_CLICK_DONE","customPrevFunc","customCloseFunc","TUTORIAL_CLICK_DENY","renderMask","SwapModalFooter","swapErrorMessage","disabledConfirm","startedTime","showInverted","setShowInverted","useEncodeSolana","encodeSolana","highPriceImpact","veryHighPriceImpact","align","formatExecutionPrice","parseFloat","lineHeight","HurryUpBanner","SwapModalHeader","recipient","showAcceptChanges","onAcceptChanges","EXACT_OUTPUT","main","italic","isAddress","shortenAddress","ConfirmSwapModal","originalTrade","attemptingTxn","txHash","tokenAddToMetaMask","showTxBanner","setStartedTime","Date","now","tradeB","tradeA","equalTo","modalHeader","modalBottom","pendingText","confirmationContent","message","topContent","bottomContent","TransactionConfirmationModal","GasLevel","useGasPriceFromDeBank","nativeTokenPriceData","useETHPrice","chainSlug","deBankSlug","err","Array","isArray","resp","currentPrice","gasPricesInWei","SLOW","NORMAL","FAST","level","gasPricesInGwei","parsedCurrentPrice","Number","String","NaN","costs","gasPrice","isNaN","gasPriceInGwei","minimumTxFeeInUSD","calculateGasPrices","mappings","gasLevel","label","BackIconWrapper","ArrowLeft","BackText","GasPriceList","GasPriceItem","green","GasPriceItemTitle","PriceInGwei","PriceInUSD","getPriceInUSDText","GasPriceTrackerPanel","onBack","rowGap","SearchBarWrapper","SearchBar","setText","SourceList","Source","ImageWrapper","SourceName","LiquiditySourceHeader","LiquiditySourcesPanel","searchText","setSearchText","debouncedSearchText","useDebounce","toLowerCase","trim","dexes","useAllDexes","useExcludeDexes","excludeDexes","setExcludeDexes","checkAllRef","kyberSwapRef","selectedDexes","includes","checked","indeterminate","ksDexes","kyberswapDexes","ELASTIC_NOT_SUPPORTED","ksDexesId","every","some","handleToggleDex","isExclude","currentTarget","newData","logoURL","StyledLogo","img","AddTokenToMetaMask","walletKey","tokenSymbol","tokenDecimals","decimals","tokenImage","getTokenLogoURL","ethereum","request","method","image","createUserAssociatedTokenAccount","mt","useTokenInfo","COINGECKO_API_URL","coingeckoNativeTokenId","coingeckoNetworkId","then","r","reject","refreshInterval","onErrorRetry","config","revalidate","retryCount","status","market_data","current_price","usd","marketCap","market_cap","marketCapRank","market_cap_rank","circulatingSupply","circulating_supply","totalSupply","total_supply","allTimeHigh","ath","allTimeLow","atl","tradingVolume","total_volume","en","TAB","NOT_AVAIALBLE","TabContainer","tabBackgound","Tab","ButtonEmpty","tabActive","TabText","InfoRow","InfoRowLabel","InfoRowValue","PoweredByWrapper","PoweredByText","TokenInfo","inputNativeCurrency","outputNativeCurrency","inputToken","outputToken","TOKEN_IN","activeTab","setActiveTab","TOKEN_OUT","tokenInfo","darkMode","listData","formatLongNumber","isActiveTokenIn","isActiveTokenOut","Loader","paddingBottom","Copy","toCopy","Coingecko","CoingeckoLight","MobileTradeRoutes","MOBILE_TOKEN_INFO","toggle","alignSelf","isFavoritePair","favoritePairs","tokenIn","tokenOut","isTokenInWhiteList","activeTokens","ETHER_ADDRESS","isActivePair","pair","findLogoAndSortPair","tokenInImgUrl","tokenOutImgUrl","sort","a","b","activeA","activeB","getAddressParam","currencyId","Logo","SuggestItem","isFavorite","isFullFavoritePair","amount","onClickStar","onSelectPair","useAllTokens","tokenInSymbol","tokenOutSymbol","tokenInName","tokenOutName","isTokenNotImport","star","tabIndex","srcs","Break","Title","MenuFlyout","showList","SUGGESTION_PAIR","hasShadow","TextWithIcon","ListPair","isShowListPair","suggestedAmount","suggestedPairs","isSearch","selectedIndex","isShowNotfound","isShowNotfoundFavoritePair","MAX_FAVORITE_PAIRS","SearchWrapper","SearchInput","hasBorder","DisabledFrame","SearchIcon","Search","$showList","InputIcon","forwardRef","onChangeInput","onKeyPressInput","showListView","hideListView","showListViewWithTracking","TAS_PRESS_CTRL_K","onBlur","relate","relatedTarget","onFocus","onKeyDown","isMacOs","reqGetSuggestionPair","query","Axios","TYPE_AND_SWAP_URL","obj","forEach","WrapperPopup","onSelectSuggestedPair","setShowModalImportToken","searchQuery","setSearchQuery","setSelectedIndex","setIsShowListPair","setSuggestions","setListFavorite","setSuggestedAmount","totalFavoritePair","setTotalFavoritePair","refLoading","refInput","findToken","filterTokens","focusInput","focus","isIOS","setSelectionRange","refKeywordSearching","searchSuggestionPair","keyword","recommendedPairs","catch","log","TAS_TYPING_KEYWORD","searchDebounce","debounce","notify","useNotify","addToFavorite","NotificationType","WARNING","post","reqAddFavoritePair","finally","TAS_LIKE_PAIR","token_1","token_2","removeFavorite","delete","reqRemoveFavoritePair","TAS_DISLIKE_PAIR","blur","onKeydown","metaKey","ctrlKey","preventDefault","addEventListener","removeEventListener","TAS_SELECT_PAIR","newQs","push","fromToken","toToken","useImperativeHandle","onConfirmImportToken","propsListPair","propsSearch","lastIndex","selectedPair","concat","enableInitialFocusInput","paddingTop","ArrowLocatorLoading","React","stroke","xlinkHref","clipPath","cx","cy","transform","strokeWidth","strokeDasharray","strokeDashoffset","attributeName","begin","enable_click_to_refresh","repeatCount","dur","TIME_TO_REFRESH_SWAP_RATE","attributeType","from","displayName","StyledArrowLocatorLoading","RefreshButton","isConfirming","onRefresh","svgLoadingRef","hasOutput","interval","setCurrentTime","unpauseAnimations","AGGREGATOR_WAITING_TIME","pauseAnimations","enableClickToRefresh","AdvancedModeSetting","useExpertModeManager","expertMode","toggleExpertMode","showConfirmation","setShowConfirmation","QuestionHelper","Toggle","AdvanceModeModal","SettingLabel","Group","Separator","PriceInWei","GasPriceTrackerSetting","NumberOfSources","LiquiditySourcesSetting","allDexes","numberOfDEXes","DefaultSlippages","parseSlippageInput","str","round","EmojiContainer","SlippageOptionCSS","DefaultSlippageOption","CustomSlippageOption","red1","Message","CustomInput","SlippageSetting","inputRef","rawSlippage","setRawSlippage","isCustomOptionActive","slippageInput","setSlippageInput","isValid","MAX_SLIPPAGE_IN_BIPS","validateSlippageInput","isWarning","isError","handleCommitChange","newRawSlippage","SLIPPAGE_CHANGED","new_slippage","slp","onKeyUp","validateDeadlineString","parseInt","floor","useUserTransactionTTL","deadline","setDeadline","deadlineInput","setDeadlineInput","newDeadline","columnGap","onClickLiquiditySources","onClickGasPriceTracker","shouldShowTrendingSoonSetting","isShowTradeRoutes","useShowTradeRoutes","isShowTokenInfo","useShowTokenInfo","isShowLiveChart","useShowLiveChart","toggleLiveChart","useToggleLiveChart","toggleTradeRoutes","useToggleTradeRoutes","toggleTokenInfo","useToggleTokenInfo","isShowTrendingSoonTokens","toggleTopTrendingTokens","useToggleTopTrendingTokens","LIVE_CHART_ON_OFF","live_chart_on_or_off","TRADING_ROUTE_ON_OFF","trading_route_on_or_off","NOT_AVAILABLE","CollapseItemWrapper","upToExtraSmall","AboutText","h2","formatString","SwapInstruction","InfoRowWrapper","HowToSwap","fromCurrency","toCurrency","fromCurrencyInfo","toCurrencyInfo","symbol1","symbol2","name1","name2","fromName","toName","PriceLabel","MarketCapRankLabel","VolumeLabel","SingleTokenInfo","currencyName","listField","formatDollarAmount","toUpperCase","dangerouslySetInnerHTML","__html","isEmptyData","copyToken","TokenInfoV2","currencyIn","currencyOut","data1","loading1","data2","loading2","tokenInfo1","tokenInfo2","tokenWrapped1","tokenWrapped2","rs1","rs2","inWhiteList","getSymbolSlug","checkPairInWhiteList","isInWhiteList","descHardCode1","TOKEN_INFO_DESCRIPTION","descHardCode2","nameHardCode1","nameHardCode2","checkTokenDescription","showToken1","showToken2","showHow2Swap","TradePrice","formattedPrice","invert","baseCurrency","quoteCurrency","nativeQuote","nativeBase","TradeTypeSelection","saveGas","onChooseToSaveGas","useSwapActionHandlers","active","SwapCallbackState","LiveChart","lazy","Routing","TutorialIcon","TutorialSvg","AppBodyWrapped","highlight","SwitchLocaleLinkWrapper","RoutingIconWrapper","RoutingIcon","Swap","rotate","setRotate","isShowTokenInfoSetting","isShowTutorial","refSuggestPair","showingPairSuggestionImport","setShowingPairSuggestionImport","shouldHighlightSwapBox","highlightBox","isSelectCurrencyManually","setIsSelectCurrencyManually","loadedUrlParams","useDefaultsFromURLSearch","useCurrency","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","c","defaultTokens","importTokensNotInDefault","toggleWalletModal","useWalletModalToggle","toggleSettings","useToggleTransactionSettingsMenu","isExpertMode","independentField","onSwitchTokensV2","onCurrencySelection","onResetSelectCurrency","onUserInput","onChangeRecipient","onChangeTrade","recipientLookup","relevantTokenBalances","useCurrencyBalances","parsedAmount","useTradeExactInV2","bestTradeExactIn","baseTradeComparer","comparer","onUpdateCallback","tradeComparer","greaterThan","JSBI","BigInt","diffAmount","subtract","diffAmountUSD","receivedUsd","savedUsd","tradeSaved","percent","v2Trade","balanceInput","balanceOutput","currencyBalances","formattedTo","BAD_RECIPIENT_ADDRESSES","balanceIn","amountIn","isPairNotfound","useDerivedSwapInfoV2","swapInputError","loadingAPI","showConfirm","tradeToConfirm","setSwapState","comparedDex","dex","balanceOut","onWrap","wrapInputError","isSolanaUnwrap","toExact","showWrap","isPriceImpactInvalid","isPriceImpactHigh","isPriceImpactVeryHigh","parsedAmounts","dependentField","handleTypeInput","handleTypeOutput","handleDismissTokenWarning","handleConfirmTokenWarning","formattedAmounts","userHasSpecifiedInputOutput","noRoute","swaps","useApproveCallbackFromTradeV2","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","handleRotateClick","ApprovalState","PENDING","NOT_APPROVED","maxAmountInput","maxAmountSpend","halfAmountInput","halfAmountSpend","library","useWeb3React","recipientAddressOrName","recipientAddress","extractSwapData","inputSymbol","outputSymbol","inputAddress","ZERO_ADDRESS_SOLANA","outputAddress","formatCurrencyAmount","base","chargeFeeBy","isInBps","withRecipient","arbitrary","inputDecimals","outputDecimals","slippageSetting","state","INVALID","callback","swapData","onHandleSwapResponse","LOADING","BigNumber","onSwapWithBackendEncode","sendEVMTransaction","routerAddress","encodedSwapData","onSwapSolana","adapter","sendSolanaTransactions","VALID","useSwapV2Callback","swapCallback","swapCallbackError","handleSwap","showApproveFlow","APPROVED","tradeLoadedRef","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","handleMaxInput","handleHalfInput","handleOutputSelect","mixpanelSwapInit","SWAP_INITIATED","getUrlMatchParams","convertToSlug","refIsCheckNetworkAutoSelect","refIsImportUserToken","nativeToken","filterTokensWithExactKeyword","navigate","syncUrl","symbolIn","symbolOut","tokenImports","useUserAddedTokens","prevTokenImports","usePrevious","isRemoved","addressIn","addressOut","token2","initialTotalTokenDefault","findChainId","SUPPORTED_NETWORKS","checkAutoSelectTokenFromUrl","isLoadedTokenDefault","compareNetwork","isSame","isAddress1","isAddressString","isAddress2","convertSymbol","findTokenPairFromUrl","checkParamsWrong","newQuery","refCheckParamWrong","ADVANCED_MODE_ON","isStableCoinSwap","STABLE_COINS_ADDRESS","rawSlippageRef","shareUrl","isPairInWhiteList","canonicalUrl","shouldRenderTokenInfo","isShowModalImportToken","isLargeSwap","SEO","Banner","ChainId","ETHW","mb","Tutorial","customIcon","MobileTokenInfo","INFO","onShared","TOKEN_SWAP_LINK_SHARED","SETTINGS","TransactionSettingsIcon","PairSuggestion","CurrencyInputPanel","positionMax","onMax","onHalf","onCurrencySelect","otherCurrency","showCommonBases","estimatedUsd","amountInUsd","executionPrice","rotated","disabledInput","amountOutUsd","ADD_RECIPIENT_CLICKED","veryHigh","altDisabledStyle","white","Column","ProgressSteps","LIQUIDITY_SOURCES","GAS_PRICE_TRACKER","fallback","baseColor","highlightColor","onRotateClick","isOpenChart","useSelector","bridge","setBridgeState","useBridgeStateHandler","resetBridgeState","resetBridgeStateAction","setBridgePoolInfo","setBridgePoolInfoAction","useBridgeOutputValue","inputBridgeValue","BaseFeePercent","minFee","calcReceiveValueAndFee","Fraction","parseUnits","RESERVE_USD_DECIMALS","exponentiate","feeAmountDecimal","feeAmount","divide","BIPS_BASE","feeAmountUsd","multiply","contractAddress","encodedData","handler","estimateGasOption","getSigner","gasEstimate","cause","tmp","JSON","tag","captureException","extra","tags","sendTransactionOption","eq","sendTransaction","getInspectTxSolanaUrl","Buffer","serializeMessage","serialize","encode","solanaWallet","swapTx","txs","setupTx","populateTx","result","signedSetupTx","signedSwapTx","count","group","info","groupEnd","signAllTransactions","signedTxs","txHashs","sendRawTransaction","setupHash","SETUP","firstTxHash","total","mainTx","confirmTransaction","swapHash","endsWith","test","errorCode","split","slice"],"mappings":"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","file":"static/js/swapv2-page.35bc34e1.chunk.js","sourcesContent":["var map = {\n\t\"./menu.png\": \"./src/assets/images/tutorial_swap/menu.png\",\n\t\"./step1.png\": \"./src/assets/images/tutorial_swap/step1.png\",\n\t\"./step2.png\": \"./src/assets/images/tutorial_swap/step2.png\",\n\t\"./step4.1.png\": \"./src/assets/images/tutorial_swap/step4.1.png\",\n\t\"./step4.2.png\": \"./src/assets/images/tutorial_swap/step4.2.png\",\n\t\"./step5.png\": \"./src/assets/images/tutorial_swap/step5.png\",\n\t\"./step6.png\": \"./src/assets/images/tutorial_swap/step6.png\",\n\t\"./step7.png\": \"./src/assets/images/tutorial_swap/step7.png\",\n\t\"./step8.1.png\": \"./src/assets/images/tutorial_swap/step8.1.png\",\n\t\"./step8.2.png\": \"./src/assets/images/tutorial_swap/step8.2.png\",\n\t\"./welcome.png\": \"./src/assets/images/tutorial_swap/welcome.png\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/assets/images/tutorial_swap sync recursive ^\\\\.\\\\/.*$\";","export default __webpack_public_path__ + \"static/media/menu.7db368c2.png\";","export default __webpack_public_path__ + \"static/media/step1.6b365c03.png\";","export default __webpack_public_path__ + \"static/media/step2.e1e10dbe.png\";","export default __webpack_public_path__ + \"static/media/step4.1.e5cc1015.png\";","export default __webpack_public_path__ + \"static/media/step4.2.eeddff9d.png\";","export default __webpack_public_path__ + \"static/media/step5.89d19489.png\";","export default __webpack_public_path__ + \"static/media/step6.b50a9957.png\";","export default __webpack_public_path__ + \"static/media/step7.17646aa9.png\";","export default __webpack_public_path__ + \"static/media/step8.1.082a9cd5.png\";","export default __webpack_public_path__ + \"static/media/step8.2.4a1a9794.png\";","export default __webpack_public_path__ + \"static/media/welcome.9b263ff0.png\";","import { Trans, t } from '@lingui/macro'\r\nimport { ChangeEvent, useCallback } from 'react'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as DropdownSVG } from 'assets/svg/down.svg'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useENS from 'hooks/useENS'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ExternalLink } from 'theme'\r\nimport { getEtherscanLink } from 'utils'\r\n\r\nconst InputPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  position: relative;\r\n  border-radius: 12px;\r\n  background-color: ${({ theme }) => theme.buttonBlack};\r\n  z-index: 1;\r\n  width: 100%;\r\n  transition: max-height 200ms ease-in-out;\r\n  overflow: hidden;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  background-color: ${({ theme }) => theme.buttonBlack};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 0.75rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.buttonBlack};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.red : theme.text)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.border};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n`\r\n\r\nconst DropdownIcon = styled(DropdownSVG)<{ open: boolean }>`\r\n  cursor: pointer;\r\n  transition: transform 300ms;\r\n  transform: rotate(${({ open }) => (open ? '-180deg' : 0)});\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string | null\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string | null) => void\r\n}) {\r\n  const { chainId, networkInfo, isEVM } = useActiveWeb3React()\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n  const theme = useTheme()\r\n\r\n  const error = Boolean((value || '').length > 0 && !loading && !address)\r\n  if (!isEVM) return null\r\n  return (\r\n    <AutoColumn gap=\"4px\">\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" marginTop=\"4px\" color={theme.subText}>\r\n        <Text fontSize=\"12px\" fontWeight=\"500\">\r\n          <Trans>Recipient (Optional)</Trans>\r\n\r\n          {address && (\r\n            <ExternalLink\r\n              href={getEtherscanLink(chainId, name ?? address, 'address')}\r\n              style={{ fontSize: '12px', marginLeft: '4px' }}\r\n            >\r\n              ({networkInfo.etherscanName})\r\n            </ExternalLink>\r\n          )}\r\n        </Text>\r\n        <DropdownIcon open={value !== null} onClick={() => onChange(value === null ? '' : null)} />\r\n      </Flex>\r\n\r\n      <InputPanel id={id} style={{ maxHeight: value === null ? 0 : '44px' }}>\r\n        <ContainerRow error={error}>\r\n          <InputContainer>\r\n            <AutoColumn gap=\"md\">\r\n              <Input\r\n                className=\"recipient-address-input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                autoCapitalize=\"off\"\r\n                spellCheck=\"false\"\r\n                placeholder={t`Wallet Address or ENS name`}\r\n                error={error}\r\n                pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n                onChange={handleInput}\r\n                value={value || ''}\r\n              />\r\n            </AutoColumn>\r\n          </InputContainer>\r\n        </ContainerRow>\r\n      </InputPanel>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const FadeInAnimation = styled.div<{ $isAnimate?: boolean }>`\r\n  @keyframes fadeIn {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateY(-10%);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translateY(0%);\r\n    }\r\n  }\r\n  animation-name: fadeIn;\r\n  animation-iteration-count: 1;\r\n  animation-timing-function: ease-in-out;\r\n  animation-duration: ${({ $isAnimate }) => ($isAnimate ? '0.5s' : 0)};\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst Checkbox = styled.input`\r\n  position: relative;\r\n  transform: scale(1.35);\r\n  accent-color: ${({ theme }) => theme.primary};\r\n\r\n  :indeterminate::before {\r\n    content: '';\r\n    display: block;\r\n    color: ${({ theme }) => theme.textReverse};\r\n    width: 13px;\r\n    height: 13px;\r\n    background-color: ${({ theme }) => theme.primary};\r\n    border-radius: 2px;\r\n  }\r\n  :indeterminate::after {\r\n    content: '';\r\n    display: block;\r\n    width: 7px;\r\n    height: 7px;\r\n    border: solid ${({ theme }) => theme.textReverse};\r\n    border-width: 2px 0 0 0;\r\n    position: absolute;\r\n    top: 5.5px;\r\n    left: 3px;\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${({ theme }) => theme.disableText};\r\n  }\r\n`\r\n\r\nexport default Checkbox\r\n","import React, { CSSProperties, ReactNode, useState } from 'react'\r\nimport { ChevronUp } from 'react-feather'\r\nimport styled from 'styled-components'\r\n\r\nconst ItemWrapper = styled.div`\r\n  position: relative;\r\n  padding: 16px 24px;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.background};\r\n`\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n`\r\n\r\nconst ArrowWrapper = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  svg {\r\n    transition: all 150ms ease-in-out;\r\n  }\r\n\r\n  &[data-expanded='false'] {\r\n    svg {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 100%;\r\n\r\n  &[data-expanded='false'] {\r\n    display: none;\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  header: string | JSX.Element\r\n  expandedOnMount?: boolean\r\n  style?: CSSProperties\r\n  activeStyle?: CSSProperties\r\n  children: ReactNode\r\n  onExpand?: () => void\r\n  className?: string\r\n  arrowComponent?: ReactNode\r\n}\r\n\r\nexport const CollapseItem: React.FC<Props> = ({\r\n  header,\r\n  arrowComponent,\r\n  children,\r\n  expandedOnMount = false,\r\n  style = {},\r\n  className,\r\n}) => {\r\n  const [isExpanded, setExpanded] = useState(expandedOnMount)\r\n\r\n  return (\r\n    <ItemWrapper style={style} className={className}>\r\n      <Header\r\n        onClick={() => {\r\n          setExpanded(e => !e)\r\n        }}\r\n      >\r\n        {header}\r\n        <ArrowWrapper data-expanded={isExpanded}>{arrowComponent || <ChevronUp />}</ArrowWrapper>\r\n      </Header>\r\n      <ContentWrapper data-expanded={isExpanded}>{children}</ContentWrapper>\r\n    </ItemWrapper>\r\n  )\r\n}\r\n\r\nexport type ToggleItemType = { title: React.ReactNode; content: ReactNode | string }\r\n// open one, close the others\r\nconst ToggleCollapse = ({\r\n  data,\r\n  itemActiveStyle = {},\r\n  itemStyle = {},\r\n}: {\r\n  data: ToggleItemType[]\r\n  itemActiveStyle?: CSSProperties\r\n  itemStyle?: CSSProperties\r\n}) => {\r\n  const [expandedIndex, setExpandedIndex] = useState(0)\r\n  return (\r\n    <div>\r\n      {data.map((item, index) => {\r\n        const isActive = expandedIndex === index\r\n        return (\r\n          <ItemWrapper key={index} style={isActive ? { ...itemStyle, ...itemActiveStyle } : itemStyle}>\r\n            <Header\r\n              onClick={() => {\r\n                setExpandedIndex(isActive ? -1 : index)\r\n              }}\r\n            >\r\n              {item.title}\r\n              <ArrowWrapper data-expanded={isActive}>\r\n                <ChevronUp />\r\n              </ArrowWrapper>\r\n            </Header>\r\n            <ContentWrapper data-expanded={isActive}>{item.content}</ContentWrapper>\r\n          </ItemWrapper>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleCollapse\r\n","import { transparentize } from 'polished'\r\nimport styled from 'styled-components'\r\n\r\nimport { AutoColumn } from 'components/Column'\r\nimport { RowBetween } from 'components/Row'\r\n\r\nconst Wrapper = styled(AutoColumn)``\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.buttonGray : confirmed ? theme.green1 : theme.primary};\r\n  border-radius: 50%;\r\n  color: ${({ theme }) => theme.textReverse};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: ;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.bg4 : transparentize(0.5, prevConfirmed ? theme.green1 : theme.primary)}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) => (disabled ? theme.bg4 : prevConfirmed ? theme.primary : theme.bg4)} 80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <Wrapper justify={'center'} {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { stringify } from 'querystring'\r\nimport React, { useMemo } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport styled from 'styled-components'\r\n\r\nimport { DEFAULT_LOCALE, LOCALE_LABEL, SupportedLocale } from 'constants/locales'\r\nimport { navigatorLocale, useActiveLocale } from 'hooks/useActiveLocale'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { StyledInternalLink, TYPE } from 'theme'\r\n\r\nconst Container = styled(TYPE.small)`\r\n  opacity: 0.6;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  margin-top: 1rem !important;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport function SwitchLocaleLink() {\r\n  const activeLocale = useActiveLocale()\r\n  const browserLocale = useMemo(() => navigatorLocale(), [])\r\n  const location = useLocation()\r\n  const qs = useParsedQueryString()\r\n\r\n  if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\r\n    let targetLocale: SupportedLocale\r\n    if (activeLocale === browserLocale) {\r\n      targetLocale = DEFAULT_LOCALE\r\n    } else {\r\n      targetLocale = browserLocale\r\n    }\r\n\r\n    const target = {\r\n      ...location,\r\n      search: stringify({ ...qs, lng: targetLocale }),\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        KyberSwap available in: {<StyledInternalLink to={target}>{LOCALE_LABEL[targetLocale]}</StyledInternalLink>}\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import { Token } from '@kyberswap/ks-sdk-core'\r\n\r\nimport Modal from 'components/Modal'\r\nimport { ImportToken } from 'components/SearchModal/ImportToken'\r\n\r\nexport default function TokenWarningModal({\r\n  isOpen,\r\n  tokens,\r\n  onConfirm,\r\n  onDismiss,\r\n}: {\r\n  isOpen: boolean\r\n  tokens: Token[]\r\n  onConfirm: () => void\r\n  onDismiss: () => void\r\n}) {\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={100}>\r\n      <ImportToken tokens={tokens} handleCurrencySelect={onConfirm} enterToImport={isOpen} />\r\n    </Modal>\r\n  )\r\n}\r\n","import { Currency, TradeType } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as DropdownSVG } from 'assets/svg/down.svg'\r\nimport { AutoColumn } from 'components/Column'\r\nimport Divider from 'components/Divider'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { FeeConfig } from 'hooks/useSwapV2Callback'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { OutputBridgeInfo, useBridgeState } from 'state/bridge/hooks'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { TYPE } from 'theme'\r\nimport { formattedNum } from 'utils'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { getFormattedFeeAmountUsd } from 'utils/fee'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\n\r\nconst IconWrapper = styled.div<{ show: boolean }>`\r\n  color: ${({ theme }) => theme.text};\r\n  transform: rotate(${({ show }) => (!show ? '0deg' : '-180deg')});\r\n  transition: transform 300ms;\r\n`\r\nconst ContentWrapper = styled(AutoColumn)<{ show: boolean }>`\r\n  max-height: ${({ show }) => (show ? '500px' : 0)};\r\n  margin-top: ${({ show }) => (show ? '12px' : 0)};\r\n  transition: margin-top 300ms ease, height 300ms ease;\r\n  overflow: hidden;\r\n`\r\n\r\ninterface TradeSummaryProps {\r\n  trade: Aggregator\r\n  allowedSlippage: number\r\n  feeConfig?: FeeConfig | undefined\r\n}\r\n\r\nfunction TradeSummary({ trade, feeConfig, allowedSlippage }: TradeSummaryProps) {\r\n  const { isEVM } = useActiveWeb3React()\r\n  const theme = useTheme()\r\n  const [show, setShow] = useState(feeConfig ? true : false)\r\n\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  const nativeInput = useCurrencyConvertedToNative(trade.inputAmount.currency as Currency)\r\n  const nativeOutput = useCurrencyConvertedToNative(trade.outputAmount.currency as Currency)\r\n\r\n  const formattedFeeAmountUsd = useMemo(() => getFormattedFeeAmountUsd(trade, feeConfig), [trade, feeConfig])\r\n\r\n  return (\r\n    <>\r\n      <AutoColumn>\r\n        <RowBetween style={{ cursor: 'pointer' }} onClick={() => setShow(prev => !prev)} role=\"button\">\r\n          <Text fontSize={12} fontWeight={500} color={theme.text}>\r\n            <Trans>MORE INFORMATION</Trans>\r\n          </Text>\r\n          <IconWrapper show={show}>\r\n            <DropdownSVG></DropdownSVG>\r\n          </IconWrapper>\r\n        </RowBetween>\r\n        <ContentWrapper show={show} gap=\"0.75rem\">\r\n          <Divider />\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                {isExactIn ? t`Minimum Received` : t`Maximum Sold`}\r\n              </TYPE.black>\r\n              <InfoHelper size={14} text={t`Minimum amount you will receive or your transaction will revert`} />\r\n            </RowFixed>\r\n            <RowFixed>\r\n              <TYPE.black color={theme.text} fontSize={12}>\r\n                {isExactIn\r\n                  ? !!slippageAdjustedAmounts[Field.OUTPUT]\r\n                    ? `${formattedNum(slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(10) || '0')} ${\r\n                        nativeOutput?.symbol\r\n                      }`\r\n                    : '-'\r\n                  : !!slippageAdjustedAmounts[Field.INPUT]\r\n                  ? `${formattedNum(slippageAdjustedAmounts[Field.INPUT]?.toSignificant(10) || '0')} ${\r\n                      nativeInput?.symbol\r\n                    }`\r\n                  : '-'}\r\n              </TYPE.black>\r\n            </RowFixed>\r\n          </RowBetween>\r\n          {isEVM && (\r\n            <RowBetween>\r\n              <RowFixed>\r\n                <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                  <Trans>Gas Fee</Trans>\r\n                </TYPE.black>\r\n\r\n                <InfoHelper size={14} text={t`Estimated network fee for your transaction`} />\r\n              </RowFixed>\r\n              <TYPE.black color={theme.text} fontSize={12}>\r\n                {trade.gasUsd ? formattedNum(trade.gasUsd?.toString(), true) : '--'}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n          )}\r\n\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                <Trans>Price Impact</Trans>\r\n              </TYPE.black>\r\n              <InfoHelper size={14} text={t`Estimated change in price due to the size of your transaction`} />\r\n            </RowFixed>\r\n            <TYPE.black\r\n              fontSize={12}\r\n              color={trade.priceImpact > 15 ? theme.red : trade.priceImpact > 5 ? theme.warning : theme.text}\r\n            >\r\n              {trade.priceImpact === -1\r\n                ? '--'\r\n                : trade.priceImpact > 0.01\r\n                ? trade.priceImpact.toFixed(3) + '%'\r\n                : '< 0.01%'}\r\n            </TYPE.black>\r\n          </RowBetween>\r\n          {feeConfig && (\r\n            <RowBetween>\r\n              <RowFixed>\r\n                <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                  <Trans>Referral Fee</Trans>\r\n                </TYPE.black>\r\n                <InfoHelper size={14} text={t`Commission fee to be paid directly to your referrer`} />\r\n              </RowFixed>\r\n              <TYPE.black color={theme.text} fontSize={12}>\r\n                {formattedFeeAmountUsd}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n          )}\r\n        </ContentWrapper>\r\n      </AutoColumn>\r\n    </>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Aggregator\r\n  feeConfig?: FeeConfig | undefined\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade, feeConfig }: AdvancedSwapDetailsProps) {\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  return trade ? <TradeSummary trade={trade} feeConfig={feeConfig} allowedSlippage={allowedSlippage} /> : null\r\n}\r\n\r\nexport function TradeSummaryBridge({ outputInfo }: { outputInfo: OutputBridgeInfo }) {\r\n  const theme = useTheme()\r\n  const [{ tokenInfoOut }] = useBridgeState()\r\n\r\n  const [show, setShow] = useState(true)\r\n  const fee = formattedNum(outputInfo?.fee?.toString(), false, 5)\r\n  return (\r\n    <>\r\n      <AutoColumn>\r\n        <RowBetween style={{ cursor: 'pointer' }} onClick={() => setShow(prev => !prev)} role=\"button\">\r\n          <Text fontSize={12} fontWeight={500} color={theme.text}>\r\n            <Trans>MORE INFORMATION</Trans>\r\n          </Text>\r\n          <IconWrapper show={show}>\r\n            <DropdownSVG></DropdownSVG>\r\n          </IconWrapper>\r\n        </RowBetween>\r\n        <ContentWrapper show={show} gap=\"0.75rem\">\r\n          <Divider />\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                {t`Estimated Processing Time`}\r\n              </TYPE.black>\r\n              <InfoHelper\r\n                size={14}\r\n                text={\r\n                  tokenInfoOut &&\r\n                  t`Crosschain amount larger than ${formattedNum(tokenInfoOut?.BigValueThreshold?.toString() ?? '0')} ${\r\n                    tokenInfoOut?.symbol\r\n                  } could take up to 12 hours`\r\n                }\r\n              />\r\n            </RowFixed>\r\n            <RowFixed>\r\n              <TYPE.black color={theme.text} fontSize={12}>\r\n                {tokenInfoOut ? outputInfo.time : '--'}\r\n              </TYPE.black>\r\n            </RowFixed>\r\n          </RowBetween>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                <Trans>Transaction Fee</Trans>\r\n              </TYPE.black>\r\n\r\n              <InfoHelper\r\n                size={14}\r\n                text={\r\n                  !tokenInfoOut ? (\r\n                    t`Estimated network fee for your transaction`\r\n                  ) : (\r\n                    <>\r\n                      <Text color={theme.text}>\r\n                        <Trans>{tokenInfoOut?.SwapFeeRatePerMillion}% Transaction Fee</Trans>\r\n                      </Text>\r\n                      {tokenInfoOut?.MinimumSwapFee === tokenInfoOut?.MaximumSwapFee ? (\r\n                        outputInfo.fee > 0 && (\r\n                          <Text marginTop={'5px'}>\r\n                            <Trans>\r\n                              Gas Fee: {`${fee} ${tokenInfoOut.symbol} `}\r\n                              for your cross-chain transaction on destination chain\r\n                            </Trans>\r\n                          </Text>\r\n                        )\r\n                      ) : (\r\n                        <Text marginTop={'5px'}>\r\n                          <Trans>\r\n                            Min Transaction Fee is {formattedNum(tokenInfoOut.MinimumSwapFee)} {tokenInfoOut.symbol}{' '}\r\n                            <br />\r\n                            Max Transaction Fee is {formattedNum(tokenInfoOut.MaximumSwapFee)} {tokenInfoOut.symbol}\r\n                          </Trans>\r\n                        </Text>\r\n                      )}\r\n                    </>\r\n                  )\r\n                }\r\n              />\r\n            </RowFixed>\r\n            <TYPE.black color={theme.text} fontSize={12}>\r\n              {tokenInfoOut && outputInfo.fee ? `${fee} ${tokenInfoOut?.symbol}` : '--'}\r\n            </TYPE.black>\r\n          </RowBetween>\r\n\r\n          <RowBetween style={{ alignItems: 'flex-start' }}>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.subText}>\r\n                <Trans>Required Amount</Trans>\r\n              </TYPE.black>\r\n            </RowFixed>\r\n\r\n            <TYPE.black fontSize={12} color={theme.text} textAlign=\"right\">\r\n              {tokenInfoOut ? (\r\n                <Flex flexDirection={'column'} style={{ gap: 10 }}>\r\n                  <div>{t`Min ${formattedNum(tokenInfoOut?.MinimumSwap)} ${tokenInfoOut?.symbol}`}</div>\r\n                  <div> {t`Max ${formattedNum(tokenInfoOut?.MaximumSwap)} ${tokenInfoOut?.symbol}`}</div>\r\n                </Flex>\r\n              ) : (\r\n                '--'\r\n              )}\r\n            </TYPE.black>\r\n          </RowBetween>\r\n        </ContentWrapper>\r\n      </AutoColumn>\r\n    </>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport { useLastTruthy } from 'hooks/useLast'\r\nimport { OutputBridgeInfo } from 'state/bridge/hooks'\r\n\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps, TradeSummaryBridge } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  padding: ${({ show }) => (show ? '12px 16px' : '0')};\r\n  margin-top: ${({ show }) => (show ? '16px' : '0')};\r\n  width: 100%;\r\n  max-width: 425px;\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.text2};\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: solid 1px ${({ theme }) => theme.border};\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(calc(-100% - 50px))')};\r\n  max-height: ${({ show }) => (show ? 'auto' : '0')};\r\n  transition: height 300ms ease-in-out, transform 300ms;\r\n  overflow: hidden;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n\r\nexport function AdvancedSwapDetailsDropdownBridge({ outputInfo }: { outputInfo: OutputBridgeInfo }) {\r\n  return (\r\n    <AdvancedDetailsFooter show={true} style={{ marginTop: 0 }}>\r\n      <TradeSummaryBridge outputInfo={outputInfo} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import { AnchorProvider } from '@project-serum/anchor'\r\nimport { useAnchorWallet } from '@solana/wallet-adapter-react'\r\nimport { useMemo } from 'react'\r\n\r\nimport connection from 'state/connection/connection'\r\n\r\nconst useProvider = (): AnchorProvider | null => {\r\n  const wallet = useAnchorWallet()\r\n\r\n  const provider = useMemo(\r\n    () => (wallet ? new AnchorProvider(connection, wallet, AnchorProvider.defaultOptions()) : null),\r\n    [wallet],\r\n  )\r\n  return provider\r\n}\r\n\r\nexport default useProvider\r\n","import React, { useRef, useState } from 'react'\r\nimport { useDeepCompareEffect } from 'react-use'\r\n\r\nexport default function useMarquee(...args: any): React.RefObject<HTMLDivElement> {\r\n  const marqueeContainerRef = useRef<HTMLDivElement>(null)\r\n  const [endScroll, setEndScroll] = useState(false)\r\n\r\n  useDeepCompareEffect(() => {\r\n    let itv: NodeJS.Timeout | undefined\r\n    if (marqueeContainerRef && marqueeContainerRef.current && !endScroll) {\r\n      let lastScrollLeft = marqueeContainerRef.current.scrollLeft\r\n      itv = setInterval(() => {\r\n        if (\r\n          marqueeContainerRef.current &&\r\n          marqueeContainerRef.current.scrollLeft + marqueeContainerRef.current.clientWidth <\r\n            marqueeContainerRef.current.scrollWidth - 1\r\n        ) {\r\n          const acceleration = Math.abs(lastScrollLeft - marqueeContainerRef.current.scrollLeft)\r\n          if (acceleration >= 30) {\r\n            setEndScroll(true)\r\n            return\r\n          }\r\n\r\n          if (!endScroll) {\r\n            marqueeContainerRef.current.scrollTo({\r\n              left: marqueeContainerRef.current.scrollLeft + 1,\r\n            })\r\n            lastScrollLeft = marqueeContainerRef.current.scrollLeft\r\n          }\r\n        } else {\r\n          setEndScroll(true)\r\n        }\r\n      }, 50)\r\n    }\r\n\r\n    return () => {\r\n      itv && clearInterval(itv)\r\n    }\r\n  }, [...args, endScroll])\r\n\r\n  return marqueeContainerRef\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom'\r\n\r\nimport { NETWORKS_INFO, isEVM, isSolana } from 'constants/networks'\r\nimport { useActiveWeb3React, useEagerConnect } from 'hooks'\r\n\r\nimport { useChangeNetwork } from './useChangeNetwork'\r\n\r\nexport function useSyncNetworkParamWithStore() {\r\n  const params = useParams<{ network?: string }>()\r\n  const changeNetwork = useChangeNetwork()\r\n  const { networkInfo, walletEVM, walletSolana } = useActiveWeb3React()\r\n  const isOnInit = useRef(true)\r\n  const history = useHistory()\r\n  const match = useRouteMatch()\r\n  const triedEager = useEagerConnect()\r\n\r\n  useEffect(() => {\r\n    if (!params?.network) {\r\n      isOnInit.current = false\r\n      return\r\n    }\r\n    if (isOnInit.current) {\r\n      const paramChainId = Object.values(NETWORKS_INFO).find(n => n.route === params?.network)?.chainId\r\n      /**\r\n       * Try to change to network on route param on init. Exp: /swap/ethereum => try to connect to ethereum on init\r\n       * @param isOnInit.current: make sure only run 1 time after init\r\n       * @param triedEager: only run after tried to connect injected wallet\r\n       */\r\n      ;(async () => {\r\n        if (paramChainId && isEVM(paramChainId)) {\r\n          await changeNetwork(paramChainId, undefined, () => {\r\n            history.replace({ pathname: match.path.replace(':network', networkInfo.route) })\r\n          })\r\n        } else if (paramChainId && isSolana(paramChainId)) {\r\n          await changeNetwork(paramChainId)\r\n        }\r\n      })()\r\n    }\r\n    isOnInit.current = false\r\n  }, [\r\n    changeNetwork,\r\n    history,\r\n    params?.network,\r\n    match.path,\r\n    networkInfo.route,\r\n    walletEVM.isConnected,\r\n    walletSolana.isConnected,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Sync network route param with current active network, only after eager tried\r\n     */\r\n    if (networkInfo.route !== params?.network && !isOnInit.current && triedEager) {\r\n      history.replace({ pathname: match.path.replace(':network', networkInfo.route) })\r\n    }\r\n  }, [networkInfo.route, history, triedEager, match.path, params?.network])\r\n}\r\n","import { Currency, WETH } from '@kyberswap/ks-sdk-core'\r\nimport { t } from '@lingui/macro'\r\nimport { PublicKey, Transaction } from '@solana/web3.js'\r\nimport { useMemo } from 'react'\r\n\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport connection from 'state/connection/connection'\r\nimport { tryParseAmount } from 'state/swap/hooks'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { useCurrencyBalance } from 'state/wallet/hooks'\r\nimport { calculateGasMargin } from 'utils'\r\nimport { checkAndCreateUnwrapSOLInstruction, createWrapSOLInstructions } from 'utils/solanaInstructions'\r\n\r\nimport { useActiveWeb3React } from './index'\r\nimport useProvider from './solana/useProvider'\r\nimport { useWETHContract } from './useContract'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP,\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined | null,\r\n  outputCurrency: Currency | undefined | null,\r\n  typedValue: string | undefined,\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, isEVM, isSolana, account } = useActiveWeb3React()\r\n  const provider = useProvider()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(inputCurrency ?? undefined)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency ?? undefined), [inputCurrency, typedValue])\r\n  const addTransactionWithType = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if ((!wethContract && isEVM) || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    const nativeTokenSymbol = NativeCurrencies[chainId].symbol\r\n\r\n    if (inputCurrency.isNative && WETH[chainId].equals(outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  let hash: string | undefined\r\n                  if (isEVM && wethContract) {\r\n                    const estimateGas = await wethContract.estimateGas.deposit({\r\n                      value: `0x${inputAmount.quotient.toString(16)}`,\r\n                    })\r\n                    const txReceipt = await wethContract.deposit({\r\n                      value: `0x${inputAmount.quotient.toString(16)}`,\r\n                      gasLimit: calculateGasMargin(estimateGas),\r\n                    })\r\n                    hash = txReceipt?.hash\r\n                  } else if (isSolana && account && provider) {\r\n                    const accountPK = new PublicKey(account)\r\n                    const wrapIxs = await createWrapSOLInstructions(accountPK, inputAmount)\r\n                    const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash()\r\n\r\n                    const tx = new Transaction({\r\n                      blockhash,\r\n                      lastValidBlockHeight,\r\n                      feePayer: accountPK,\r\n                    })\r\n                    tx.add(...wrapIxs)\r\n                    hash = await provider.sendAndConfirm(tx)\r\n                  }\r\n                  if (hash) {\r\n                    addTransactionWithType({\r\n                      hash,\r\n                      type: TRANSACTION_TYPE.WRAP,\r\n                      summary: `${inputAmount.toSignificant(6)} ${nativeTokenSymbol} to ${inputAmount.toSignificant(\r\n                        6,\r\n                      )} W${nativeTokenSymbol}`,\r\n                    })\r\n                  }\r\n                  throw new Error()\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: !typedValue\r\n          ? t`Enter an amount`\r\n          : sufficientBalance\r\n          ? undefined\r\n          : t`Insufficient ${NativeCurrencies[chainId].symbol} balance`,\r\n      }\r\n    } else if (WETH[chainId].equals(inputCurrency) && outputCurrency.isNative) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  let hash: string | undefined\r\n                  if (isEVM && wethContract) {\r\n                    const estimateGas = await wethContract.estimateGas.withdraw(\r\n                      `0x${inputAmount.quotient.toString(16)}`,\r\n                    )\r\n                    const txReceipt = await wethContract.withdraw(`0x${inputAmount.quotient.toString(16)}`, {\r\n                      gasLimit: calculateGasMargin(estimateGas),\r\n                    })\r\n                    hash = txReceipt.hash\r\n                  } else if (isSolana && account && provider) {\r\n                    const accountPK = new PublicKey(account)\r\n                    const ix = await checkAndCreateUnwrapSOLInstruction(accountPK)\r\n                    if (ix) {\r\n                      const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash()\r\n\r\n                      const tx = new Transaction({\r\n                        blockhash,\r\n                        lastValidBlockHeight,\r\n                        feePayer: accountPK,\r\n                      })\r\n                      tx.add(ix)\r\n                      hash = await provider.sendAndConfirm(tx)\r\n                    }\r\n                  }\r\n                  if (hash) {\r\n                    addTransactionWithType({\r\n                      hash,\r\n                      type: TRANSACTION_TYPE.UNWRAP,\r\n                      summary: `${inputAmount.toSignificant(6)} W${nativeTokenSymbol} to ${inputAmount.toSignificant(\r\n                        6,\r\n                      )} ${nativeTokenSymbol}`,\r\n                    })\r\n                  }\r\n                  throw new Error()\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: !typedValue\r\n          ? t`Enter an amount`\r\n          : sufficientBalance\r\n          ? undefined\r\n          : t`Insufficient W${NativeCurrencies[chainId].symbol} balance`,\r\n      }\r\n    } else {\r\n      return NOT_APPLICABLE\r\n    }\r\n  }, [\r\n    wethContract,\r\n    isEVM,\r\n    chainId,\r\n    inputCurrency,\r\n    outputCurrency,\r\n    inputAmount,\r\n    balance,\r\n    typedValue,\r\n    isSolana,\r\n    account,\r\n    provider,\r\n    addTransactionWithType,\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const BodyWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 425px;\r\n  width: 100%;\r\n  background: #ffffff;\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 20px;\r\n  padding: 2rem 1.5rem 1.5rem 1.5rem;\r\n  margin-top: 20px;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children, className }: { children: React.ReactNode; className?: string }) {\r\n  return <BodyWrapper className={className}>{children}</BodyWrapper>\r\n}\r\n","import { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoutingIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 18,\n    viewBox: \"0 0 24 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.453 13.4311L13.5243 12.0666C11.6015 11.1712 10.3593 9.22172 10.3593 7.10062L10.3593 4.61719L7.5468 4.61719L7.5468 3.21094L16.453 3.21094L16.453 4.61719L11.7655 4.61719L11.7655 7.10062C11.7655 8.67703 12.689 10.1264 14.1182 10.792L16.5332 11.917C16.4807 12.1383 16.453 12.3694 16.453 12.6066L16.453 13.4311Z\",\n    fill: \"#A9A9A9\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 15.5653L24 12.6066C24 11.7295 23.2861 11.0156 22.4091 11.0156L19.4503 11.0156C18.5733 11.0156 17.8594 11.7295 17.8594 12.6066L17.8594 15.5653C17.8594 16.4423 18.5733 17.1562 19.4503 17.1562L22.4091 17.1562C23.2861 17.1562 24 16.4423 24 15.5653V15.5653Z\",\n    fill: \"#A9A9A9\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 5.39344L24 2.43469C24 1.55766 23.2861 0.84375 22.4091 0.84375L19.4503 0.84375C18.5733 0.84375 17.8594 1.55766 17.8594 2.43469L17.8594 5.39344C17.8594 6.27047 18.5733 6.98437 19.4503 6.98437L22.4091 6.98437C23.2861 6.98437 24 6.27047 24 5.39344V5.39344Z\",\n    fill: \"#A9A9A9\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.14062 5.39344L6.14062 2.43469C6.14062 1.55766 5.42672 0.84375 4.54969 0.84375L1.59094 0.84375C0.713906 0.84375 -3.12058e-08 1.55766 -6.95421e-08 2.43469L-1.98873e-07 5.39344C-2.37209e-07 6.27047 0.713906 6.98437 1.59094 6.98437L4.54969 6.98437C5.42672 6.98437 6.14062 6.27047 6.14062 5.39344Z\",\n    fill: \"#A9A9A9\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoutingIcon);\nexport default __webpack_public_path__ + \"static/media/routing-icon.6d3e5b9f.svg\";\nexport { ForwardRef as ReactComponent };","import { t } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport React from 'react'\r\nimport { Info } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport { Flex, Image, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport Cart from 'components/Icons/Cart'\r\nimport { MouseoverTooltipDesktopOnly } from 'components/Tooltip'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { TrueSightTokenData } from 'pages/TrueSight/hooks/useGetTrendingSoonData'\r\nimport { ApplicationModal } from 'state/application/actions'\r\nimport { useToggleModal } from 'state/application/hooks'\r\nimport { formatNumberWithPrecisionRange, formattedNum } from 'utils'\r\n\r\nconst TopTrendingSoonTokenItem = ({\r\n  tokenData,\r\n  setSelectedToken,\r\n}: {\r\n  tokenData: TrueSightTokenData\r\n  setSelectedToken: React.Dispatch<React.SetStateAction<TrueSightTokenData | undefined>>\r\n}) => {\r\n  const theme = useTheme()\r\n  const { mixpanelHandler } = useMixpanel()\r\n  const { networkInfo } = useActiveWeb3React()\r\n  const currentNetwork = networkInfo.trueSightId || ''\r\n  const toggleTrendingSoonTokenDetailModal = useToggleModal(ApplicationModal.TRENDING_SOON_TOKEN_DETAIL)\r\n\r\n  const onSelectToken = () => {\r\n    setSelectedToken(tokenData)\r\n    toggleTrendingSoonTokenDetailModal()\r\n    mixpanelHandler(MIXPANEL_TYPE.DISCOVER_SWAP_MORE_INFO_CLICKED, { trending_token: tokenData.symbol })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Flex style={{ gap: '4px' }} alignItems=\"center\">\r\n        <Image\r\n          src={tokenData.logo_url}\r\n          minWidth=\"16px\"\r\n          width=\"16px\"\r\n          minHeight=\"16px\"\r\n          height=\"16px\"\r\n          sx={{ borderRadius: '50%', cursor: 'pointer' }}\r\n          onClick={onSelectToken}\r\n        />\r\n        <Text\r\n          as=\"span\"\r\n          fontSize=\"12px\"\r\n          mr=\"4px\"\r\n          color={theme.subText}\r\n          sx={{ cursor: 'pointer' }}\r\n          onClick={onSelectToken}\r\n        >\r\n          {tokenData.symbol}\r\n        </Text>\r\n        <Text\r\n          fontSize=\"12px\"\r\n          as=\"span\"\r\n          sx={{\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n        >\r\n          {formattedNum(tokenData.price.toString(), true)}\r\n        </Text>\r\n        <Text\r\n          as=\"span\"\r\n          fontSize=\"12px\"\r\n          sx={{\r\n            whiteSpace: 'nowrap',\r\n            color: tokenData.price_change_percentage_24h >= 0 ? theme.apr : theme.red,\r\n          }}\r\n        >\r\n          (\r\n          {tokenData.price_change_percentage_24h >= 1\r\n            ? formatNumberWithPrecisionRange(tokenData.price_change_percentage_24h, 0, 0)\r\n            : formatNumberWithPrecisionRange(tokenData.price_change_percentage_24h, 0, 2)}\r\n          %)\r\n        </Text>\r\n        <MouseoverTooltipDesktopOnly text={t`More info`} placement=\"top\" width=\"fit-content\">\r\n          <ButtonEmpty\r\n            padding=\"0\"\r\n            onClick={onSelectToken}\r\n            style={{\r\n              background: theme.background,\r\n              width: '16px',\r\n              height: '16px',\r\n              borderRadius: '50%',\r\n            }}\r\n          >\r\n            <Info size=\"10px\" color={theme.subText} />\r\n          </ButtonEmpty>\r\n        </MouseoverTooltipDesktopOnly>\r\n        {/*<MouseoverTooltipDesktopOnly text={t`Buy now`} placement=\"top\" width=\"fit-content\">*/}\r\n        <ButtonEmpty\r\n          padding=\"0\"\r\n          as={Link}\r\n          to={`/swap?inputCurrency=ETH&outputCurrency=${tokenData.platforms.get(currentNetwork)}`}\r\n          style={{\r\n            background: rgba(theme.primary, 0.2),\r\n            width: '16px',\r\n            height: '16px',\r\n            borderRadius: '50%',\r\n          }}\r\n          onClick={() =>\r\n            mixpanelHandler(MIXPANEL_TYPE.DISCOVER_SWAP_BUY_NOW_CLICKED, { trending_token: tokenData.symbol })\r\n          }\r\n        >\r\n          <Cart color={theme.primary} size={10} />\r\n        </ButtonEmpty>\r\n        {/*</MouseoverTooltipDesktopOnly>*/}\r\n      </Flex>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 6px 12px;\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  position: relative;\r\n  border-radius: 40px;\r\n`\r\n\r\nexport default TopTrendingSoonTokenItem\r\n","import { Trans, t } from '@lingui/macro'\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport { ChevronRight } from 'react-feather'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useMedia } from 'react-use'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { FadeInAnimation } from 'components/Animation'\r\nimport { ButtonLight } from 'components/Button'\r\nimport Divider from 'components/Divider'\r\nimport DiscoverIcon from 'components/Icons/DiscoverIcon'\r\nimport Modal from 'components/Modal'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport TopTrendingSoonTokenItem from 'components/TopTrendingSoonTokensInCurrentNetwork/TopTrendingSoonTokenItem'\r\nimport useTopTrendingSoonTokensInCurrentNetwork from 'components/TopTrendingSoonTokensInCurrentNetwork/useTopTrendingSoonTokensInCurrentNetwork'\r\nimport useMarquee from 'hooks/useMarquee'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { TrueSightChartCategory, TrueSightTimeframe } from 'pages/TrueSight'\r\nimport MobileChartModal from 'pages/TrueSight/components/TrendingSoonLayout/MobileChartModal'\r\nimport TrendingSoonTokenDetail from 'pages/TrueSight/components/TrendingSoonLayout/TrendingSoonTokenDetail'\r\nimport TrendingSoonTokenItem from 'pages/TrueSight/components/TrendingSoonLayout/TrendingSoonTokenItem'\r\nimport useGetCoinGeckoChartData from 'pages/TrueSight/hooks/useGetCoinGeckoChartData'\r\nimport { TrueSightTokenData } from 'pages/TrueSight/hooks/useGetTrendingSoonData'\r\nimport { TextTooltip } from 'pages/TrueSight/styled'\r\nimport { AppDispatch } from 'state'\r\nimport { ApplicationModal } from 'state/application/actions'\r\nimport { useModalOpen, useToggleModal } from 'state/application/hooks'\r\nimport { setTrendingSoonShowed } from 'state/swap/actions'\r\nimport { useSwapState } from 'state/swap/hooks'\r\nimport { useShowTopTrendingSoonTokens } from 'state/user/hooks'\r\nimport { ExternalLink } from 'theme'\r\n\r\nconst TopTrendingSoonTokensInCurrentNetwork = () => {\r\n  const theme = useTheme()\r\n  const { mixpanelHandler } = useMixpanel()\r\n  const { data: topTrendingSoonTokens, isLoading: isLoadingTrendingSoonTokens } =\r\n    useTopTrendingSoonTokensInCurrentNetwork()\r\n  const above768 = useMedia('(min-width: 768px)')\r\n  const isShowTopTrendingTokens = useShowTopTrendingSoonTokens()\r\n  const isTrendingSoonTokenDetailModalOpen = useModalOpen(ApplicationModal.TRENDING_SOON_TOKEN_DETAIL)\r\n  const toggleTrendingSoonTokenDetailModal = useToggleModal(ApplicationModal.TRENDING_SOON_TOKEN_DETAIL)\r\n  const [selectedToken, setSelectedToken] = useState<TrueSightTokenData>()\r\n  const [isOpenChartModal, setIsOpenChartModal] = useState(false)\r\n\r\n  const onDismiss = () => {\r\n    toggleTrendingSoonTokenDetailModal()\r\n    setSelectedToken(undefined)\r\n  }\r\n\r\n  const [chartTimeframe, setChartTimeframe] = useState<TrueSightTimeframe>(TrueSightTimeframe.ONE_DAY)\r\n  const [chartCategory, setChartCategory] = useState<TrueSightChartCategory>(TrueSightChartCategory.TRADING_VOLUME)\r\n  const tokenNetwork = useMemo(\r\n    () => (selectedToken ? selectedToken.platforms.keys().next().value ?? undefined : undefined),\r\n    [selectedToken],\r\n  )\r\n  const tokenAddress = useMemo(\r\n    () => (selectedToken && tokenNetwork ? selectedToken.platforms.get(tokenNetwork) : undefined),\r\n    [selectedToken, tokenNetwork],\r\n  )\r\n  const { data: chartData, isLoading: isChartDataLoading } = useGetCoinGeckoChartData(\r\n    tokenNetwork,\r\n    tokenAddress,\r\n    chartTimeframe,\r\n  )\r\n\r\n  const marqueeContainerRef = useMarquee(topTrendingSoonTokens)\r\n\r\n  const { trendingSoonShowed } = useSwapState()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  useEffect(() => {\r\n    let sto: NodeJS.Timeout\r\n    if (!trendingSoonShowed) {\r\n      sto = setTimeout(() => {\r\n        dispatch(setTrendingSoonShowed())\r\n      }, 1000)\r\n    }\r\n    return () => {\r\n      sto && clearTimeout(sto)\r\n    }\r\n  }, [dispatch, trendingSoonShowed])\r\n\r\n  if (isLoadingTrendingSoonTokens) return above768 ? <Box height=\"61px\" /> : <Box height=\"83px\" />\r\n\r\n  if (!isShowTopTrendingTokens || topTrendingSoonTokens.length === 0) return null\r\n\r\n  if (above768)\r\n    return (\r\n      <>\r\n        <Modal isOpen={isTrendingSoonTokenDetailModalOpen} onDismiss={onDismiss} maxWidth=\"728px\">\r\n          {selectedToken && (\r\n            <TrendingSoonTokenDetail\r\n              tokenData={selectedToken}\r\n              chartData={chartData}\r\n              isChartDataLoading={isChartDataLoading}\r\n              chartCategory={chartCategory}\r\n              setChartCategory={setChartCategory}\r\n              chartTimeframe={chartTimeframe}\r\n              setChartTimeframe={setChartTimeframe}\r\n              setFilter={undefined}\r\n              style={{\r\n                width: '728px',\r\n                height: '570px',\r\n                padding: '20px',\r\n              }}\r\n            />\r\n          )}\r\n        </Modal>\r\n        <FadeInAnimation $isAnimate={!trendingSoonShowed}>\r\n          <TrendingSoonTokensAndNoteContainer>\r\n            <TrendingSoonTokensContainer>\r\n              <Flex\r\n                alignItems=\"center\"\r\n                style={{\r\n                  gap: '8px',\r\n                  minWidth: 'fit-content',\r\n                }}\r\n              >\r\n                <Text color={theme.subText} fontWeight={500} fontSize=\"14px\">\r\n                  <Trans>Trending Soon</Trans>\r\n                </Text>\r\n                <DiscoverIcon color={theme.subText} />\r\n              </Flex>\r\n              <Flex\r\n                ref={marqueeContainerRef}\r\n                alignItems=\"center\"\r\n                ml=\"12px\"\r\n                backgroundColor={theme.buttonBlack}\r\n                overflow=\"auto\"\r\n                style={{ borderRadius: '40px', paddingLeft: '8px', flex: 1 }}\r\n              >\r\n                {topTrendingSoonTokens.map((tokenData, index) => (\r\n                  <React.Fragment key={tokenData.token_id}>\r\n                    <TopTrendingSoonTokenItem tokenData={tokenData} setSelectedToken={setSelectedToken} />\r\n                    {index !== topTrendingSoonTokens.length - 1 && (\r\n                      <div style={{ height: '16px', width: '0px', borderRight: '1px solid #40505A' }} />\r\n                    )}\r\n                  </React.Fragment>\r\n                ))}\r\n              </Flex>\r\n              <ExternalLink\r\n                href={window.location.origin + '/discover?tab=trending_soon'}\r\n                onClickCapture={() => mixpanelHandler(MIXPANEL_TYPE.DISCOVER_SWAP_DISCOVER_MORE_CLICKED)}\r\n              >\r\n                <ButtonLight\r\n                  minWidth=\"fit-content\"\r\n                  width=\"fit-content\"\r\n                  height=\"100%\"\r\n                  padding=\"6px 12px\"\r\n                  borderRadius=\"20px\"\r\n                  margin=\"0 0 0 12px\"\r\n                  style={{ fontSize: '14px', whiteSpace: 'nowrap' }}\r\n                >\r\n                  <Trans></Trans>\r\n                </ButtonLight>\r\n              </ExternalLink>\r\n            </TrendingSoonTokensContainer>\r\n            <TextNote>\r\n              <Trans>\r\n                Best Swapping Prices and fees <span style={{ fontWeight: 700 }}>Gtps.Finance</span> a leading dex.\r\n              </Trans>\r\n            </TextNote>\r\n          </TrendingSoonTokensAndNoteContainer>\r\n        </FadeInAnimation>\r\n      </>\r\n    )\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isTrendingSoonTokenDetailModalOpen} onDismiss={onDismiss}>\r\n        {selectedToken && (\r\n          <Box width=\"100%\">\r\n            <TrendingSoonTokenItem\r\n              isSelected={true}\r\n              tokenIndex={undefined}\r\n              tokenData={selectedToken}\r\n              onSelect={undefined}\r\n              setIsOpenChartModal={setIsOpenChartModal}\r\n              setFilter={undefined}\r\n              isShowMedal={false}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Modal>\r\n      <MobileChartModal\r\n        isOpen={isOpenChartModal}\r\n        setIsOpen={setIsOpenChartModal}\r\n        chartData={chartData}\r\n        isLoading={isChartDataLoading}\r\n        chartCategory={chartCategory}\r\n        setChartCategory={setChartCategory}\r\n        chartTimeframe={chartTimeframe}\r\n        setChartTimeframe={setChartTimeframe}\r\n      />\r\n      <FadeInAnimation>\r\n        <TrendingSoonTokensMobileContainer>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text\r\n              color={theme.subText}\r\n              fontSize=\"14px\"\r\n              fontWeight={500}\r\n              style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\r\n            >\r\n              <MouseoverTooltip text={t`Best Swapping Prices and lower fees.`}>\r\n                <TextTooltip color={theme.subText}>\r\n                  <Trans>Trending Soon</Trans>\r\n                </TextTooltip>\r\n              </MouseoverTooltip>\r\n              <DiscoverIcon color={theme.subText} />\r\n            </Text>\r\n            <ExternalLink\r\n              href={window.location.origin + '/discover?tab=trending_soon'}\r\n              target=\"_blank\"\r\n              style={{\r\n                fontSize: '12px',\r\n                marginTop: '4px',\r\n                fontWeight: 500,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Trans>Discover more</Trans>\r\n              <ChevronRight color={theme.primary} size={16} />\r\n            </ExternalLink>\r\n          </Flex>\r\n\r\n          <Flex\r\n            marginTop=\"12px\"\r\n            marginBottom=\"20px\"\r\n            style={{\r\n              gap: '12px',\r\n            }}\r\n          >\r\n            <Flex\r\n              ref={marqueeContainerRef}\r\n              alignItems=\"center\"\r\n              style={{ overflow: 'auto', background: theme.buttonBlack, borderRadius: '999px' }}\r\n            >\r\n              {topTrendingSoonTokens.map((tokenData, index) => (\r\n                <React.Fragment key={tokenData.token_id}>\r\n                  <TopTrendingSoonTokenItem tokenData={tokenData} setSelectedToken={setSelectedToken} />\r\n                  {index !== topTrendingSoonTokens.length - 1 && (\r\n                    <div style={{ height: '16px', width: '0px', borderRight: '1px solid #40505A' }} />\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </Flex>\r\n          </Flex>\r\n          <Divider />\r\n        </TrendingSoonTokensMobileContainer>\r\n      </FadeInAnimation>\r\n    </>\r\n  )\r\n}\r\n\r\nconst TrendingSoonTokensAndNoteContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 8px;\r\n  overflow: hidden;\r\n  margin: auto;\r\n  align-self: center;\r\n  @media screen and (min-width: 1100px) {\r\n    max-width: 1054px;\r\n  }\r\n  @media screen and (min-width: 1240px) {\r\n    max-width: 1154px;\r\n  }\r\n  @media screen and (min-width: 1320px) {\r\n    max-width: 1226px;\r\n  }\r\n  @media screen and (min-width: 1500px) {\r\n    max-width: 1394px;\r\n  }\r\n`\r\n\r\nconst TrendingSoonTokensContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  padding: 6px 6px 6px 12px;\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 999px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 6px;\r\n  `}\r\n`\r\n\r\nconst TrendingSoonTokensMobileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nconst TextNote = styled(Text)`\r\n  padding: 0 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n  font-style: italic;\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  text-align: end;\r\n`\r\n\r\nexport default TopTrendingSoonTokensInCurrentNetwork\r\n","import { Token } from '@kyberswap/ks-sdk-core'\r\nimport useSWR from 'swr'\r\n\r\nimport { TRUESIGHT_API } from 'constants/env'\r\nimport { TRENDING_SOON_MAX_ITEMS } from 'constants/index'\r\nimport { TrueSightTokenResponse } from 'pages/TrueSight/hooks/useGetTrendingSoonData'\r\n\r\nexport default function useGetTrendingSoonTokenId(token?: Token): number | undefined {\r\n  const { data: tokenId } = useSWR(\r\n    token &&\r\n      `${TRUESIGHT_API}/api/v1/trending-soon?timeframe=24h&page_number=0&page_size=${TRENDING_SOON_MAX_ITEMS}&search_token_address=${token.address}`,\r\n    async (url: string) => {\r\n      try {\r\n        const responses = await Promise.all([fetch(url)])\r\n        for (let i = 0; i < responses.length; i++) {\r\n          const response = responses[i]\r\n          if (response.ok) {\r\n            const { data }: { data: TrueSightTokenResponse } = await response.json()\r\n            if (data.tokens.length) {\r\n              return data.tokens[0].token_id\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n      return undefined\r\n    },\r\n  )\r\n\r\n  return tokenId\r\n}\r\n","import { Currency, Token, WETH } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport { CSSProperties, memo, useMemo } from 'react'\r\nimport { Flex } from 'rebass'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport DiscoverIcon from 'components/Icons/DiscoverIcon'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetTrendingSoonTokenId from 'pages/TrueSight/hooks/useGetTrendingSoonTokenId'\r\nimport { Field } from 'state/swap/actions'\r\nimport { ExternalLink } from 'theme'\r\n\r\nconst TrendingSoonTokenBanner = ({\r\n  currencies,\r\n  style,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  style?: CSSProperties\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const theme = useTheme()\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const token0 = currencies[Field.INPUT]?.wrapped\r\n  const token1 = currencies[Field.OUTPUT]?.wrapped\r\n  const trendingToken0Id = useGetTrendingSoonTokenId(token0)\r\n  const trendingToken1Id = useGetTrendingSoonTokenId(token1)\r\n  const trendingSoonCurrency = useMemo(\r\n    () => (trendingToken0Id ? currencies[Field.INPUT] : trendingToken1Id ? currencies[Field.OUTPUT] : undefined),\r\n    [currencies, trendingToken0Id, trendingToken1Id],\r\n  )\r\n\r\n  if (trendingSoonCurrency === undefined) return null\r\n\r\n  const currencySymbol = trendingSoonCurrency instanceof Token ? trendingSoonCurrency.symbol : WETH[chainId].name\r\n\r\n  return (\r\n    <Container style={style}>\r\n      <DiscoverIconWrapper>\r\n        <DiscoverIcon size={16} color={theme.primary} />\r\n      </DiscoverIconWrapper>\r\n      <Flex alignItems=\"center\">\r\n        <CurrencyLogo currency={trendingSoonCurrency} size=\"16px\" style={{ marginRight: '4px' }} />\r\n        <BannerText>\r\n          {currencySymbol} <Trans>could be trending very soon!</Trans> <Trans>View</Trans>{' '}\r\n          <ExternalLink\r\n            href={\r\n              window.location.origin + '/discover?tab=trending_soon&token_id=' + (trendingToken0Id ?? trendingToken1Id)\r\n            }\r\n            target=\"_blank\"\r\n            onClickCapture={() => {\r\n              mixpanelHandler(MIXPANEL_TYPE.DISCOVER_SWAP_SEE_HERE_CLICKED, { trending_token: currencySymbol })\r\n            }}\r\n          >\r\n            <Trans>here</Trans>\r\n          </ExternalLink>\r\n        </BannerText>\r\n      </Flex>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  background: ${({ theme }) => rgba(theme.primary, 0.25)};\r\n  border-radius: 999px;\r\n  padding: 8px 12px;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  row-gap: 4px;\r\n  column-gap: 8px;\r\n  animation: ${fadeIn} 0.3s linear;\r\n`\r\n\r\nconst DiscoverIconWrapper = styled.div`\r\n  place-self: center;\r\n`\r\n\r\nconst BannerText = styled.div`\r\n  font-size: 12px;\r\n`\r\n\r\nexport default memo(TrendingSoonTokenBanner)\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTouchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.79006 9.24V5.5C8.79006 4.12 9.91006 3 11.2901 3C12.6701 3 13.7901 4.12 13.7901 5.5V9.24C15.0001 8.43 15.7901 7.06 15.7901 5.5C15.7901 3.01 13.7801 1 11.2901 1C8.80006 1 6.79006 3.01 6.79006 5.5C6.79006 7.06 7.58006 8.43 8.79006 9.24ZM14.2901 11.71C14.0101 11.57 13.7101 11.5 13.4001 11.5H12.7901V5.5C12.7901 4.67 12.1201 4 11.2901 4C10.4601 4 9.79006 4.67 9.79006 5.5V16.24L6.35006 15.52C5.98006 15.44 5.59006 15.56 5.32006 15.83C4.89006 16.27 4.89006 16.97 5.32006 17.41L9.33006 21.42C9.71006 21.79 10.2201 22 10.7501 22H16.8501C17.8501 22 18.6901 21.27 18.8301 20.28L19.4601 15.81C19.5801 14.96 19.1401 14.12 18.3701 13.74L14.2901 11.71Z\",\n    fill: \"#A9A9A9\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTouchIcon);\nexport default __webpack_public_path__ + \"static/media/touch_icon.7687567d.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { DefaultTheme, keyframes } from 'styled-components'\r\nimport { MaskOptions } from 'walktour'\r\n\r\nimport { ReactComponent as TouchIcon } from 'assets/svg/touch_icon.svg'\r\n\r\nimport { StepTutorial } from './constant'\r\n\r\nconst pointerToSetting = keyframes`\r\n  from {\r\n    transform: translateY(25px)\r\n  }\r\n  to {\r\n    transform: translateY(0px);\r\n  }\r\n`\r\n\r\nconst TouchIconWrapper = styled(TouchIcon)`\r\n  position: absolute;\r\n  animation-fill-mode: forwards;\r\n  animation: ${pointerToSetting} 3s;\r\n  bottom: -10px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  path {\r\n    stroke: ${({ theme }) => theme.text};\r\n    fill: ${({ theme }) => theme.text};\r\n  }\r\n`\r\n\r\nconst highlightSpotLight = (theme: DefaultTheme, blurWidth: number, hasSpotlight: boolean) => keyframes` \r\n  0% {\r\n    box-shadow: ${[\r\n      '0px 0px 4px 2px rgba(0,0,0,0.45) inset',\r\n      hasSpotlight && `0 0 4px 1px ${theme.primary}`,\r\n      `0px 0px 0px ${blurWidth}px rgba(0,0,0,0.45)`,\r\n    ]\r\n      .filter(Boolean)\r\n      .join(', ')}\r\n  }\r\n  100% {\r\n    box-shadow: ${[\r\n      '0px 0px 4px 2px rgba(0,0,0,0.45) inset',\r\n      hasSpotlight && `0 0 8px 2px ${theme.primary}`,\r\n      `0px 0px 0px ${blurWidth}px rgba(0,0,0,0.45)`,\r\n    ]\r\n      .filter(Boolean)\r\n      .join(', ')}\r\n  }\r\n`\r\nconst SpotLight = styled.div<{ blurWidth: number; hasSpotlight: boolean }>`\r\n  position: absolute;\r\n  animation: ${({ theme, blurWidth, hasSpotlight }) => highlightSpotLight(theme, blurWidth, hasSpotlight)} 2s infinite\r\n    alternate;\r\n  border-radius: 30px;\r\n  transition: 0.3s;\r\n`\r\ntype Props = { options: MaskOptions; stepInfo: StepTutorial }\r\n\r\nfunction CustomMask({ options, stepInfo }: Props) {\r\n  const { hasPointer, spotlightInteraction, selector, stopPropagationMouseDown } = stepInfo || ({} as StepTutorial)\r\n  const { targetInfo, padding = 0, tourRoot, disableMaskInteraction } = options\r\n  const containerHeight = document.body.scrollHeight\r\n  const containerWidth = tourRoot.scrollWidth\r\n  const { coords, dims } = targetInfo || { coords: { x: 0, y: 0 }, dims: { width: 0, height: 0 } }\r\n  const width = dims.width + 2 * padding\r\n  const height = dims.height + 2 * padding\r\n\r\n  const onClickSpotlight = () => {\r\n    if (!spotlightInteraction) return\r\n    const element: HTMLDivElement | null = document.querySelector(selector)\r\n    element?.click()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id=\"customMaskWalkTour\"\r\n      style={{\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        pointerEvents: disableMaskInteraction ? 'auto' : 'none',\r\n      }}\r\n      onMouseDown={e => stopPropagationMouseDown && e.stopPropagation()}\r\n    >\r\n      <SpotLight\r\n        onClick={onClickSpotlight}\r\n        hasSpotlight={!!targetInfo}\r\n        blurWidth={Math.max(containerWidth, containerHeight)}\r\n        style={{\r\n          left: (coords.x || window.innerWidth / 2) - padding,\r\n          top: (coords.y || window.innerHeight / 2) - padding,\r\n          width,\r\n          height,\r\n          padding,\r\n          cursor: spotlightInteraction ? 'pointer' : 'unset',\r\n        }}\r\n      >\r\n        {hasPointer && <TouchIconWrapper />}\r\n      </SpotLight>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomMask\r\n","import { Trans, t } from '@lingui/macro'\r\nimport { CSSProperties, useMemo } from 'react'\r\nimport { X } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\nimport { CardinalOrientation, OrientationCoords, WalktourLogic } from 'walktour'\r\n\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nimport { Heading } from '.'\r\nimport { StepTutorial } from './constant'\r\n\r\nconst PopupWrapper = styled.div<{ center: boolean }>`\r\n  background-color: ${({ theme }) => theme.tableHeader};\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  position: relative;\r\n\r\n  ${({ center }) =>\r\n    center &&\r\n    css`\r\n      width: 500px;\r\n      position: fixed;\r\n      left: 0;\r\n      right: 0;\r\n      margin: auto;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    `};\r\n`\r\ntype Direction = 'left' | 'right' | 'bottom' | 'top'\r\n\r\nconst ARROW_SIZE = 16\r\nconst BORDER_TRANSPARENT = `${ARROW_SIZE}px solid transparent`\r\n\r\nconst getStyleArrow = (arrowColor: string, dir: string) =>\r\n  ({\r\n    left: {\r\n      borderTop: BORDER_TRANSPARENT,\r\n      borderRight: arrowColor,\r\n      borderBottom: BORDER_TRANSPARENT,\r\n    },\r\n    right: {\r\n      borderBottom: BORDER_TRANSPARENT,\r\n      borderLeft: arrowColor,\r\n      borderTop: BORDER_TRANSPARENT,\r\n    },\r\n    top: {\r\n      borderLeft: BORDER_TRANSPARENT,\r\n      borderBottom: arrowColor,\r\n      borderRight: BORDER_TRANSPARENT,\r\n    },\r\n    bottom: {\r\n      borderLeft: BORDER_TRANSPARENT,\r\n      borderTop: arrowColor,\r\n      borderRight: BORDER_TRANSPARENT,\r\n    },\r\n  }[dir])\r\n\r\nconst Arrow = ({\r\n  color,\r\n  tooltipPosition,\r\n  target,\r\n}: {\r\n  tooltipPosition: OrientationCoords\r\n  color: string\r\n  target: string\r\n}) => {\r\n  const targetElement = useMemo(() => {\r\n    return document.querySelector(target)\r\n  }, [target])\r\n\r\n  if (!tooltipPosition?.orientation) return null\r\n  const { orientation } = tooltipPosition\r\n  let arrowDir: Direction = 'top'\r\n  let position: CSSProperties = {}\r\n\r\n  const paddingV = (targetElement?.clientHeight || 0) / 2 ?? 15\r\n  const paddingH = (targetElement?.clientWidth || 0) / 2 ?? 15\r\n  switch (orientation) {\r\n    case CardinalOrientation.SOUTH:\r\n      position = { display: 'flex', justifyContent: 'center', top: -ARROW_SIZE, left: 0, right: 0 }\r\n      arrowDir = 'top'\r\n      break\r\n    case CardinalOrientation.SOUTHEAST:\r\n      position = { right: paddingH, top: -ARROW_SIZE }\r\n      arrowDir = 'top'\r\n      break\r\n    case CardinalOrientation.SOUTHWEST:\r\n      position = { top: -ARROW_SIZE, left: paddingH }\r\n      arrowDir = 'top'\r\n      break\r\n    case CardinalOrientation.EAST:\r\n      position = { left: -ARROW_SIZE, top: 0, bottom: 0, display: 'flex', alignItems: 'center' }\r\n      arrowDir = 'left'\r\n      break\r\n    case CardinalOrientation.EASTNORTH:\r\n      position = { left: -ARROW_SIZE, top: paddingV }\r\n      arrowDir = 'left'\r\n      break\r\n    case CardinalOrientation.EASTSOUTH:\r\n      position = { left: -ARROW_SIZE, bottom: paddingV }\r\n      arrowDir = 'left'\r\n      break\r\n    case CardinalOrientation.WESTNORTH:\r\n      position = { right: -ARROW_SIZE, top: paddingV }\r\n      arrowDir = 'right'\r\n      break\r\n    case CardinalOrientation.WEST:\r\n      position = { right: -ARROW_SIZE, top: 0, bottom: 0, display: 'flex', alignItems: 'center' }\r\n      arrowDir = 'right'\r\n      break\r\n    case CardinalOrientation.WESTSOUTH:\r\n      position = { right: -ARROW_SIZE, bottom: paddingV }\r\n      arrowDir = 'right'\r\n      break\r\n    case CardinalOrientation.NORTHWEST:\r\n      position = { bottom: -ARROW_SIZE, left: paddingH }\r\n      arrowDir = 'bottom'\r\n      break\r\n    case CardinalOrientation.NORTH:\r\n      position = { display: 'flex', justifyContent: 'center', bottom: -ARROW_SIZE, left: 0, right: 0 }\r\n      arrowDir = 'bottom'\r\n      break\r\n    case CardinalOrientation.NORTHEAST:\r\n      position = { bottom: -ARROW_SIZE, right: paddingH }\r\n      arrowDir = 'bottom'\r\n      break\r\n    case CardinalOrientation.CENTER:\r\n      return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        ...position,\r\n      }}\r\n    >\r\n      <div style={{ width: 0, height: 0, ...(getStyleArrow(`${ARROW_SIZE}px solid ${color}`, arrowDir) || {}) }}></div>\r\n    </div>\r\n  )\r\n}\r\nconst TitlePopup = ({ stepNumber, totalStep }: { stepNumber: number; totalStep: number }) => {\r\n  const theme = useTheme()\r\n  return (\r\n    <Heading style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n      <Trans>\r\n        <span>Step: {stepNumber}/</span>\r\n        <span style={{ color: theme.subText, fontSize: '0.85em' }}>{totalStep}</span>\r\n      </Trans>\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default function CustomPopup(props: WalktourLogic | undefined): JSX.Element {\r\n  const { stepContent, stepIndex, next, prev, close, allSteps = [] } = props || ({} as WalktourLogic)\r\n  const theme = useTheme()\r\n  const {\r\n    customFooterRenderer,\r\n    customTitleRenderer,\r\n    popupStyle,\r\n    center = false,\r\n    stopPropagationMouseDown,\r\n    lastStep,\r\n    stepNumber = 1,\r\n  } = stepContent as StepTutorial\r\n  const totalStep = allSteps.reduce(\r\n    (maxStep, step: StepTutorial) => Math.max(maxStep, step.stepNumber ?? stepNumber),\r\n    0,\r\n  )\r\n  return (\r\n    <PopupWrapper\r\n      center={center}\r\n      style={popupStyle || { width: 400 }}\r\n      onMouseDown={e => {\r\n        const target = e.target as HTMLButtonElement | HTMLDivElement\r\n        // not next/back button\r\n        if (stopPropagationMouseDown && !target.classList.contains('action-walktour')) {\r\n          e.stopPropagation()\r\n        }\r\n      }}\r\n    >\r\n      <Arrow\r\n        target={stepContent.selector}\r\n        tooltipPosition={props?.tooltipPosition || ({} as OrientationCoords)}\r\n        color={theme.tableHeader}\r\n      />\r\n      <Flex justifyContent={'space-between'}>\r\n        {customTitleRenderer ? customTitleRenderer() : <TitlePopup stepNumber={stepNumber} totalStep={totalStep} />}\r\n        <span>\r\n          <X cursor={'pointer'} onClick={() => close()} />\r\n        </span>\r\n      </Flex>\r\n      <div>{stepContent.description}</div>\r\n      {customFooterRenderer ? (\r\n        customFooterRenderer(props)\r\n      ) : (\r\n        <Flex alignItems=\"center\" justifyContent=\"flex-end\" marginTop={20}>\r\n          {stepIndex > 0 && (\r\n            <Text\r\n              className=\"action-walktour\"\r\n              onClick={() => prev()}\r\n              style={{ cursor: 'pointer', color: theme.primary, marginRight: 30, fontSize: 14 }}\r\n            >\r\n              <Trans>Back</Trans>\r\n            </Text>\r\n          )}\r\n          <ButtonPrimary className=\"action-walktour\" onClick={() => next()} style={{ width: 72, height: 36 }}>\r\n            {lastStep ? t`Done` : t`Next`}\r\n          </ButtonPrimary>\r\n        </Flex>\r\n      )}\r\n    </PopupWrapper>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { X } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport ToggleCollapse, { ToggleItemType } from 'components/Collapse'\r\nimport { Z_INDEXS } from 'constants/styles'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst Wrapper = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: ${Z_INDEXS.MODAL};\r\n  position: fixed;\r\n  background: ${({ theme }) => theme.buttonGray};\r\n`\r\nexport default function TutorialMobile({ stopTutorial, steps }: { stopTutorial: () => void; steps: ToggleItemType[] }) {\r\n  const theme = useTheme()\r\n  return (\r\n    <Wrapper>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" style={{ overflowY: 'scroll', height: '100%', width: '100%' }}>\r\n        <div style={{ padding: 16, marginBottom: 3, width: '100%' }}>\r\n          <Flex justifyContent=\"space-between\" marginBottom=\"10px\">\r\n            <Text fontSize={16} fontWeight={500} color={theme.text}>\r\n              <Trans>Gtps.Finance</Trans>\r\n            </Text>\r\n            <X color={theme.subText} size={24} onClick={stopTutorial} />\r\n          </Flex>\r\n          <Text fontSize={12} color={theme.subText}>\r\n            <Trans>{steps.length} </Trans>\r\n          </Text>\r\n        </div>\r\n        <div style={{ width: '100%' }}>\r\n          <ToggleCollapse\r\n            data={steps}\r\n            itemStyle={{ background: theme.buttonGray, padding: '16px' }}\r\n            itemActiveStyle={{ background: theme.background }}\r\n          />\r\n        </div>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport React, { CSSProperties, memo, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { BrowserView } from 'react-device-detect'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Flex } from 'rebass'\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\nimport { CardinalOrientation, Step, Walktour, WalktourLogic } from 'walktour'\r\n\r\nimport WelcomeImage from 'assets/images/tutorial_swap/welcome.png'\r\nimport { ButtonOutlined, ButtonPrimary } from 'components/Button'\r\nimport { ToggleItemType } from 'components/Collapse'\r\nimport { TutorialType, getTutorialVideoId } from 'components/Tutorial'\r\nimport { SUPPORTED_WALLETS } from 'constants/wallets'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { useTutorialSwapGuide } from 'state/tutorial/hooks'\r\nimport { useIsDarkMode } from 'state/user/hooks'\r\nimport { ExternalLink } from 'theme'\r\nimport { filterTruthy } from 'utils'\r\n\r\nimport CustomMask from './CustomMask'\r\nimport CustomPopup from './CustomPopup'\r\nimport TutorialMobile from './TutorialMobile'\r\nimport { LIST_TITLE, StepTutorial, TutorialIds } from './constant'\r\n\r\nconst isMobile = window.innerWidth < 1200 // best resolution for this tutorial\r\n\r\nexport const Heading = styled.h5`\r\n  color: ${({ theme }) => theme.text};\r\n  user-select: none;\r\n  margin: 5px 0px 10px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16px;\r\n`\r\n\r\nconst LayoutWrapper = styled.div`\r\n  color: ${({ theme }) => theme.subText};\r\n  text-align: left;\r\n  font-size: 14px;\r\n`\r\n\r\nconst Layout = ({ children, title }: { title?: string; children: React.ReactNode }) => {\r\n  return (\r\n    <LayoutWrapper>\r\n      {!isMobile && title && <Heading>{title}</Heading>}\r\n      {children}\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nconst ArrowWrapper = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.text};\r\n  svg {\r\n    transition: all 150ms ease-in-out;\r\n  }\r\n  &[data-expanded='false'] {\r\n    svg {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n`\r\n\r\nconst NetworkItemWrapper = styled.div`\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  border-radius: 42px;\r\n  display: flex;\r\n  padding: 10px 15px;\r\n  gap: 10px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst NetworkWrapper = styled.div`\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 20px;\r\n  padding: 15px;\r\n  gap: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ImageMobile = ({ imageName, marginTop = false }: { imageName: string; marginTop?: boolean }) =>\r\n  isMobile ? (\r\n    <Flex justifyContent={'center'}>\r\n      <img\r\n        style={{ marginTop: marginTop ? 20 : 0, width: '100%', maxWidth: 800 }}\r\n        src={require(`../../../assets/images/tutorial_swap/${imageName}`).default}\r\n        alt={imageName}\r\n      />\r\n    </Flex>\r\n  ) : null\r\n\r\nconst Desc = styled.p`\r\n  line-height: 20px;\r\n`\r\n\r\nconst HighlightText = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n`\r\nfunction Welcome() {\r\n  return (\r\n    <Layout>\r\n      <img src={WelcomeImage} alt=\"Gtps.Finance\" style={{ maxWidth: '100%', marginTop: 10 }} />\r\n      <Desc>\r\n        <Trans>\r\n          Gtps.Finance leading the world to the next stage of development through low fees and fast transactions. Get\r\n          the the <HighlightText>best swapping experience</HighlightText> on our exchange.\r\n        </Trans>\r\n      </Desc>\r\n      <Desc>\r\n        <Trans>\r\n          Gtps.Finance is an automated market maker (AMM) for fast <HighlightText>lower fees</HighlightText>. You can\r\n          add liquidity to our pools & <HighlightText>for great returns through fees</HighlightText>!\r\n        </Trans>\r\n      </Desc>\r\n      <Desc>\r\n        <Trans>\r\n          Visit our website <HighlightText> www.gtpsfinance.org</HighlightText>\r\n          today.\r\n        </Trans>\r\n      </Desc>\r\n      <Desc>\r\n        <Trans></Trans>\r\n      </Desc>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nfunction ConnectWallet() {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const toggleExpand = () => setIsExpanded(!isExpanded)\r\n  const isDarkMode = useIsDarkMode()\r\n  return (\r\n    <Layout title={LIST_TITLE.CONNECT_WALLET}>\r\n      <Desc>\r\n        <Trans>Connect to a wallet of your choice.</Trans>\r\n      </Desc>\r\n      <ImageMobile imageName=\"step1.png\" />\r\n      <BrowserView>\r\n        <Heading onClick={toggleExpand} style={{ cursor: 'pointer' }}>\r\n          <Trans>Download Wallet</Trans>\r\n          <ArrowWrapper data-expanded={isExpanded}>\r\n            <ChevronUp size={15} onClick={toggleExpand} />\r\n          </ArrowWrapper>\r\n        </Heading>\r\n        {isExpanded && (\r\n          <NetworkWrapper>\r\n            {Object.values(SUPPORTED_WALLETS)\r\n              .filter(e => e.installLink)\r\n              .map(item => (\r\n                <NetworkItemWrapper key={item.name} onClick={() => window.open(item.installLink)}>\r\n                  <img src={isDarkMode ? item.icon : item.iconLight} alt={item.name} width=\"20\" height=\"20\" />\r\n                  <span>{item.name}</span>\r\n                </NetworkItemWrapper>\r\n              ))}\r\n          </NetworkWrapper>\r\n        )}\r\n      </BrowserView>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst TouchAbleVideo = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nfunction VideoSwap({ videoStyle = {} }: { videoStyle: CSSProperties }) {\r\n  const { mixpanelHandler } = useMixpanel()\r\n  const [playedVideo, setPlayedVideo] = useState(false)\r\n  const ref = useRef<HTMLIFrameElement | null>(null)\r\n\r\n  const playVideo = () => {\r\n    const iframe = ref.current\r\n    if (iframe) {\r\n      // play video\r\n      iframe.setAttribute('src', iframe.getAttribute('src') + '?autoplay=1')\r\n      mixpanelHandler(MIXPANEL_TYPE.TUTORIAL_VIEW_VIDEO_SWAP)\r\n      setPlayedVideo(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout title={LIST_TITLE.START_TRADING}>\r\n      <Desc>\r\n        <Trans>Swap today!</Trans>\r\n      </Desc>\r\n      <div style={{ position: 'relative' }}>\r\n        <iframe\r\n          ref={ref}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          style={videoStyle}\r\n          src={`https://www.youtube.com/embed/${getTutorialVideoId(TutorialType.SWAP)}`}\r\n          frameBorder=\"0\"\r\n          title=\"Tutorial\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        />\r\n        {/** because we need tracking we user click video, iframe youtube not fire any event for us. */}\r\n        {!playedVideo && !isMobile && <TouchAbleVideo onClick={playVideo} />}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n// override lib css\r\nconst CustomCss = createGlobalStyle`\r\n  [id^=walktour-tooltip-container]:focus-visible {\r\n    outline: none;\r\n  };\r\n`\r\nconst getListSteps = (isLogin: boolean, isSolana: boolean) => {\r\n  let stepNumber = 0\r\n  const isHighlightBtnConnectWallet = !isLogin || isMobile\r\n  return filterTruthy([\r\n    {\r\n      customTitleRenderer: () => (\r\n        <Heading style={{ fontSize: 20 }}>\r\n          <Trans>{LIST_TITLE.WELCOME}</Trans>\r\n        </Heading>\r\n      ),\r\n      customFooterRenderer: (logic: WalktourLogic) => (\r\n        <Flex justifyContent={'space-between'} style={{ gap: 25, marginTop: 20 }}>\r\n          <ButtonOutlined onClick={() => logic.close()}>\r\n            <Trans>Maybe later</Trans>\r\n          </ButtonOutlined>\r\n          <ButtonPrimary onClick={() => logic.next()}>\r\n            <Trans>Let’s get started</Trans>\r\n          </ButtonPrimary>\r\n        </Flex>\r\n      ),\r\n      stepNumber: stepNumber++,\r\n      description: <Welcome />,\r\n      pcOnly: true,\r\n      center: true,\r\n      popupStyle: { width: 500 },\r\n    },\r\n    {\r\n      selector: isHighlightBtnConnectWallet ? TutorialIds.BUTTON_CONNECT_WALLET : TutorialIds.BUTTON_ADDRESS_WALLET,\r\n      title: isHighlightBtnConnectWallet ? LIST_TITLE.CONNECT_WALLET : LIST_TITLE.YOUR_WALLET,\r\n      stepNumber: stepNumber++,\r\n      description: <ConnectWallet />,\r\n      orientationPreferences: [CardinalOrientation.SOUTHEAST, CardinalOrientation.NORTHWEST],\r\n    },\r\n    {\r\n      selector: TutorialIds.SELECT_NETWORK,\r\n      title: LIST_TITLE.SELECT_NETWORK,\r\n      stepNumber: stepNumber++,\r\n      description: (\r\n        <Layout title={LIST_TITLE.SELECT_NETWORK}>\r\n          <Desc>\r\n            <Trans>Swap. Choose your network and swap.</Trans>\r\n          </Desc>\r\n          <ImageMobile imageName=\"step2.png\" />\r\n        </Layout>\r\n      ),\r\n      orientationPreferences: [CardinalOrientation.SOUTHEAST, CardinalOrientation.NORTHWEST],\r\n    },\r\n    {\r\n      selector: TutorialIds.SWAP_FORM,\r\n      title: LIST_TITLE.START_TRADING,\r\n      stepNumber: stepNumber++,\r\n      description: <VideoSwap videoStyle={{ minHeight: Math.min(window.innerHeight / 2, 500) }} />,\r\n      popupStyle: { width: Math.min(0.8 * window.innerWidth, 700) },\r\n      requiredClickSelector: '#' + TutorialIds.BUTTON_SETTING_SWAP_FORM,\r\n      selectorHint: '#' + TutorialIds.SWAP_FORM_CONTENT,\r\n    },\r\n    {\r\n      selector: TutorialIds.BUTTON_SETTING_SWAP_FORM,\r\n      title: LIST_TITLE.SETTING,\r\n      stepNumber: stepNumber,\r\n      maskPadding: 10,\r\n      description: (\r\n        <Layout title={LIST_TITLE.SETTING}>\r\n          <Desc>\r\n            <Trans></Trans>\r\n          </Desc>\r\n          <ImageMobile imageName=\"step4.1.png\" />\r\n          <ImageMobile imageName=\"step4.2.png\" marginTop />\r\n        </Layout>\r\n      ),\r\n      hasPointer: true,\r\n      orientationPreferences: [CardinalOrientation.EAST, CardinalOrientation.NORTH],\r\n      spotlightInteraction: true,\r\n    },\r\n    {\r\n      selector: TutorialIds.SWAP_FORM,\r\n      title: LIST_TITLE.SETTING,\r\n      stepNumber: stepNumber++,\r\n      requiredClickSelector: '#' + TutorialIds.BUTTON_SETTING_SWAP_FORM,\r\n      selectorHint: '#' + TutorialIds.TRADING_SETTING_CONTENT,\r\n      description: (\r\n        <Layout title={LIST_TITLE.SETTING}>\r\n          <Desc>\r\n            <Trans></Trans>\r\n          </Desc>\r\n          <Desc>\r\n            <Trans></Trans>\r\n          </Desc>\r\n        </Layout>\r\n      ),\r\n      pcOnly: true,\r\n      callbackEndStep: () => document.getElementById(TutorialIds.BUTTON_SETTING_SWAP_FORM)?.click(),\r\n      orientationPreferences: [CardinalOrientation.EAST, CardinalOrientation.NORTH],\r\n      maskPadding: 10,\r\n    },\r\n    {\r\n      selector: TutorialIds.BRIDGE_LINKS,\r\n      title: LIST_TITLE.BRIDGE,\r\n      stepNumber: stepNumber++,\r\n      description: (\r\n        <Layout title={LIST_TITLE.BRIDGE}>\r\n          <Desc>\r\n            <Trans>\r\n              You can <b>Buy crypto easily with over 50+ currencies using a wide range of payment options!</b> or{' '}\r\n              <b>Easily transfer tokens from one chain to another</b>\r\n            </Trans>\r\n          </Desc>\r\n        </Layout>\r\n      ),\r\n      orientationPreferences: [CardinalOrientation.SOUTH],\r\n    },\r\n    isSolana\r\n      ? null\r\n      : {\r\n          selector: TutorialIds.EARNING_LINKS,\r\n          title: LIST_TITLE.EARN,\r\n          stepNumber: stepNumber++,\r\n          description: (\r\n            <Layout title={LIST_TITLE.EARN}>\r\n              <Desc>\r\n                <Trans>Easily earn fees as a liquidity provider.</Trans>\r\n              </Desc>\r\n              <ImageMobile imageName=\"step5.png\" />\r\n            </Layout>\r\n          ),\r\n          orientationPreferences: [CardinalOrientation.SOUTH],\r\n        },\r\n    {\r\n      selector: TutorialIds.CAMPAIGN_LINK,\r\n      title: LIST_TITLE.CAMPAIGN,\r\n      stepNumber: stepNumber++,\r\n      description: (\r\n        <Layout title={LIST_TITLE.CAMPAIGN}>\r\n          <Desc>\r\n            <Trans></Trans>\r\n          </Desc>\r\n          <ImageMobile imageName=\"menu.png\" />\r\n          <ImageMobile imageName=\"step7.png\" marginTop />\r\n        </Layout>\r\n      ),\r\n      orientationPreferences: [CardinalOrientation.SOUTH],\r\n    },\r\n    {\r\n      selector: TutorialIds.DISCOVER_LINK,\r\n      title: LIST_TITLE.DISCOVER,\r\n      stepNumber: stepNumber++,\r\n      description: (\r\n        <Layout title={LIST_TITLE.DISCOVER}>\r\n          <Desc>\r\n            <Trans>Gtps.Finance</Trans>\r\n          </Desc>\r\n          <ImageMobile imageName=\"menu.png\" />\r\n          <ImageMobile imageName=\"step6.png\" marginTop />\r\n        </Layout>\r\n      ),\r\n      orientationPreferences: [CardinalOrientation.SOUTH, CardinalOrientation.SOUTHEAST],\r\n    },\r\n    {\r\n      selector: TutorialIds.BUTTON_VIEW_GUIDE_SWAP,\r\n      title: LIST_TITLE.VIEW_GUIDE,\r\n      stepNumber: stepNumber++,\r\n      maskPadding: 10,\r\n      requiredClickSelector: '#' + TutorialIds.BUTTON_SETTING,\r\n      stopPropagationMouseDown: true,\r\n      lastStep: true,\r\n      description: (\r\n        <Layout title={LIST_TITLE.VIEW_GUIDE}>\r\n          <Desc>\r\n            <Trans></Trans>\r\n          </Desc>\r\n          <Desc>\r\n            <Trans>\r\n              For a more detailed user guide, <ExternalLink href=\"https://gtpsfinance.org\">click here.</ExternalLink>\r\n            </Trans>\r\n          </Desc>\r\n          <ImageMobile imageName=\"step8.1.png\" />\r\n          <ImageMobile imageName=\"step8.2.png\" marginTop />\r\n        </Layout>\r\n      ),\r\n    },\r\n  ])\r\n}\r\n\r\nconst TutorialKeys = {\r\n  SHOWED_SWAP_GUIDE: 'showedTutorialSwapGuide',\r\n}\r\n\r\nexport default memo(function TutorialSwap() {\r\n  const [{ show = false, step = 0 }, setShowTutorial] = useTutorialSwapGuide()\r\n  const stopTutorial = () => setShowTutorial({ show: false })\r\n  const { account, isSolana } = useActiveWeb3React()\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(TutorialKeys.SHOWED_SWAP_GUIDE)) {\r\n      // auto show for first time all user\r\n      setShowTutorial({ show: true, step: 0 })\r\n      localStorage.setItem(TutorialKeys.SHOWED_SWAP_GUIDE, '1')\r\n    }\r\n  }, [setShowTutorial])\r\n\r\n  const steps = useMemo(() => {\r\n    const list = getListSteps(!!account, isSolana)\r\n    if (isMobile) {\r\n      return list\r\n        .filter(e => !e.pcOnly)\r\n        .map(({ title, description }, i) => ({\r\n          title: `${i + 1}. ${title}`,\r\n          content: description,\r\n        }))\r\n    }\r\n    return list.map(e => ({\r\n      ...e,\r\n      description: e.description as unknown as string, // because this lib type check description is string but actually it accept any\r\n      selector: '#' + e.selector,\r\n    }))\r\n  }, [account, isSolana])\r\n\r\n  const stepInfo = (steps[step] || {}) as StepTutorial\r\n\r\n  const onDismiss = (logic: WalktourLogic) => {\r\n    const { stepNumber } = stepInfo\r\n    mixpanelHandler(MIXPANEL_TYPE.TUTORIAL_CLICK_DENY, stepNumber)\r\n    stopTutorial()\r\n    logic.close()\r\n  }\r\n\r\n  const onFinished = () => {\r\n    mixpanelHandler(MIXPANEL_TYPE.TUTORIAL_CLICK_DONE)\r\n    stopTutorial()\r\n  }\r\n\r\n  const checkRequiredClick = (nextStep: StepTutorial) => {\r\n    const { requiredClickSelector, selectorHint } = nextStep\r\n    const needClick = requiredClickSelector && !document.querySelector(selectorHint || nextStep?.selector)\r\n    // target next step has not render yet, => click other button to render it\r\n    // ex: click button setting to show setting popup, and then highlight content of setting\r\n    if (needClick) {\r\n      const button: HTMLButtonElement | null = document.querySelector(requiredClickSelector)\r\n      button?.click()\r\n    }\r\n    return needClick\r\n  }\r\n\r\n  const processNextStep = ({ allSteps, prev, next, stepIndex }: WalktourLogic, isNext: boolean) => {\r\n    const nextIndex = isNext ? stepIndex + 1 : stepIndex - 1\r\n    const needClickAnyElement = checkRequiredClick(allSteps[nextIndex])\r\n    const { callbackEndStep } = stepInfo\r\n    callbackEndStep && callbackEndStep()\r\n    setTimeout(\r\n      () => {\r\n        setShowTutorial({ step: nextIndex, stepInfo: allSteps[nextIndex] })\r\n        isNext ? next() : prev()\r\n      },\r\n      needClickAnyElement ? 400 : 0,\r\n    )\r\n  }\r\n\r\n  const onNext = (logic: WalktourLogic) => {\r\n    const { stepIndex, close, allSteps } = logic\r\n    const { lastStep } = allSteps[stepIndex] as StepTutorial\r\n    if (lastStep) {\r\n      onFinished()\r\n      close()\r\n      return\r\n    }\r\n    // next\r\n    processNextStep(logic, true)\r\n  }\r\n\r\n  const onBack = (logic: WalktourLogic) => {\r\n    processNextStep(logic, false)\r\n  }\r\n\r\n  if (!show) return null\r\n  if (isMobile) return <TutorialMobile stopTutorial={stopTutorial} steps={steps as ToggleItemType[]} />\r\n  return (\r\n    <>\r\n      <Walktour\r\n        tooltipSeparation={25}\r\n        disableMaskInteraction\r\n        customTooltipRenderer={(props: WalktourLogic | undefined) => (\r\n          <CustomPopup {...(props || ({} as WalktourLogic))} />\r\n        )}\r\n        steps={steps as Step[]}\r\n        isOpen={show}\r\n        initialStepIndex={step}\r\n        customNextFunc={onNext}\r\n        customPrevFunc={onBack}\r\n        customCloseFunc={onDismiss}\r\n        renderMask={options => <CustomMask options={options} stepInfo={stepInfo} />}\r\n      />\r\n      <CustomCss />\r\n    </>\r\n  )\r\n})\r\n","import { Currency, TradeType } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport { useMemo, useState } from 'react'\r\nimport { AlertTriangle, Repeat } from 'react-feather'\r\nimport { Text } from 'rebass'\r\n\r\nimport { ButtonError } from 'components/Button'\r\nimport { GreyCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport { Dots } from 'components/swapv2/styleds'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { FeeConfig } from 'hooks/useSwapV2Callback'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useEncodeSolana } from 'state/swap/hooks'\r\nimport { TYPE } from 'theme'\r\nimport { formattedNum } from 'utils'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { getFormattedFeeAmountUsd } from 'utils/fee'\r\nimport { computeSlippageAdjustedAmounts, formatExecutionPrice } from 'utils/prices'\r\n\r\nimport HurryUpBanner from './HurryUpBanner'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n  feeConfig,\r\n  startedTime,\r\n}: {\r\n  trade: Aggregator\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n  feeConfig: FeeConfig | undefined\r\n  startedTime: number | undefined\r\n}) {\r\n  const { chainId, isSolana, isEVM } = useActiveWeb3React()\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const theme = useTheme()\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const [encodeSolana] = useEncodeSolana()\r\n\r\n  const nativeInput = useCurrencyConvertedToNative(trade.inputAmount.currency as Currency)\r\n\r\n  const nativeOutput = useCurrencyConvertedToNative(trade.outputAmount.currency as Currency)\r\n\r\n  const formattedFeeAmountUsd = useMemo(() => getFormattedFeeAmountUsd(trade, feeConfig), [trade, feeConfig])\r\n  const { priceImpact } = trade\r\n  const highPriceImpact = priceImpact > 5\r\n  const veryHighPriceImpact = priceImpact > 15\r\n\r\n  return (\r\n    <>\r\n      <AutoColumn gap=\"0.5rem\" style={{ padding: '1rem', border: `1px solid ${theme.border}`, borderRadius: '8px' }}>\r\n        <RowBetween align=\"center\">\r\n          <Text fontWeight={400} fontSize={14} color={theme.subText}>\r\n            <Trans>Current Price</Trans>\r\n          </Text>\r\n          <Text\r\n            fontWeight={500}\r\n            fontSize={14}\r\n            color={theme.text}\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted, chainId)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <Repeat size={14} color={theme.text} />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.subText}>\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? t`Minimum Received` : t`Maximum Sold`}\r\n            </TYPE.black>\r\n            <InfoHelper size={14} text={t`Minimum amount you will receive or your transaction will revert`} />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <TYPE.black fontSize={14}>\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </TYPE.black>\r\n            <TYPE.black fontSize={14} marginLeft={'4px'}>\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? nativeOutput?.symbol : nativeInput?.symbol}\r\n            </TYPE.black>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {isEVM && (\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={14} fontWeight={400} color={theme.subText}>\r\n                <Trans>Gas Fee</Trans>\r\n              </TYPE.black>\r\n              <InfoHelper size={14} text={t`Estimated network fee for your transaction`} />\r\n            </RowFixed>\r\n\r\n            <TYPE.black color={theme.text} fontSize={14}>\r\n              {trade.gasUsd ? formattedNum(trade.gasUsd?.toString(), true) : '--'}\r\n            </TYPE.black>\r\n          </RowBetween>\r\n        )}\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.subText}>\r\n              <Trans>Price Impact</Trans>\r\n            </TYPE.black>\r\n            <InfoHelper size={14} text={t`Estimated change in price due to the size of your transaction`} />\r\n          </RowFixed>\r\n          <TYPE.black\r\n            fontSize={14}\r\n            color={veryHighPriceImpact ? theme.red : highPriceImpact ? theme.warning : theme.text}\r\n          >\r\n            {priceImpact > 0.01 ? parseFloat(priceImpact.toFixed(3)) : '< 0.01'}%\r\n          </TYPE.black>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.subText}>\r\n              <Trans>Slippage</Trans>\r\n            </TYPE.black>\r\n          </RowFixed>\r\n          <TYPE.black fontSize={14}>{allowedSlippage / 100}%</TYPE.black>\r\n        </RowBetween>\r\n\r\n        {feeConfig && (\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <TYPE.black fontSize={14} fontWeight={400} color={theme.subText}>\r\n                <Trans>Referral Fee</Trans>\r\n              </TYPE.black>\r\n              <InfoHelper size={14} text={t`Commission fee to be paid directly to your referrer`} />\r\n            </RowFixed>\r\n            <TYPE.black color={theme.text} fontSize={14}>\r\n              {formattedFeeAmountUsd}\r\n            </TYPE.black>\r\n          </RowBetween>\r\n        )}\r\n      </AutoColumn>\r\n      {highPriceImpact && (\r\n        <AutoRow\r\n          style={{\r\n            marginTop: '16px',\r\n            padding: '15px 20px',\r\n            borderRadius: '16px',\r\n            backgroundColor: rgba(veryHighPriceImpact ? theme.red : theme.warning, 0.35),\r\n            color: theme.text,\r\n            fontSize: '12px',\r\n            fontWeight: 400,\r\n            lineHeight: '18px',\r\n          }}\r\n        >\r\n          <AlertTriangle\r\n            color={veryHighPriceImpact ? theme.red : theme.warning}\r\n            size={16}\r\n            style={{ marginRight: '10px' }}\r\n          />\r\n          {veryHighPriceImpact ? <Trans>Price impact is Very High!</Trans> : <Trans>Price impact is High!</Trans>}\r\n        </AutoRow>\r\n      )}\r\n      <HurryUpBanner startedTime={startedTime} />\r\n      <AutoRow>\r\n        {isSolana && !encodeSolana ? (\r\n          <GreyCard\r\n            style={{ textAlign: 'center', borderRadius: '999px', padding: '12px', marginTop: '24px' }}\r\n            id=\"confirm-swap-or-send\"\r\n          >\r\n            <Dots>\r\n              <Trans>Checking accounts</Trans>\r\n            </Dots>\r\n          </GreyCard>\r\n        ) : (\r\n          <ButtonError\r\n            onClick={onConfirm}\r\n            disabled={disabledConfirm}\r\n            style={{\r\n              marginTop: '24px',\r\n              ...((highPriceImpact || veryHighPriceImpact) && {\r\n                border: 'none',\r\n                background: veryHighPriceImpact ? theme.red : theme.warning,\r\n                color: theme.text,\r\n              }),\r\n            }}\r\n            id=\"confirm-swap-or-send\"\r\n          >\r\n            <Text fontSize={16} fontWeight={500}>\r\n              <Trans>Confirm Swap</Trans>\r\n            </Text>\r\n          </ButtonError>\r\n        )}\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import { TradeType } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport React, { useMemo } from 'react'\r\nimport { AlertTriangle, ArrowDown } from 'react-feather'\r\nimport { Text } from 'rebass'\r\n\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useSwapState } from 'state/swap/hooks'\r\nimport { TYPE } from 'theme'\r\nimport { isAddress, shortenAddress } from 'utils'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\n\r\nimport { SwapShowAcceptChanges, TruncatedText } from './styleds'\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Aggregator\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const { chainId, isSolana } = useActiveWeb3React()\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  const theme = useTheme()\r\n\r\n  const nativeInput = useCurrencyConvertedToNative(trade.inputAmount.currency)\r\n\r\n  const nativeOutput = useCurrencyConvertedToNative(trade.outputAmount.currency)\r\n\r\n  const { feeConfig, typedValue } = useSwapState()\r\n  return (\r\n    <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap={'0px'}>\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size={'24px'} style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize={24}\r\n            fontWeight={500}\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.primary : ''}\r\n          >\r\n            {!!feeConfig ? typedValue : trade.inputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap={'0px'}>\r\n          <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\r\n            {nativeInput?.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDown size=\"16\" color={theme.text2} style={{ marginLeft: '4px', minWidth: '16px' }} />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap={'0px'}>\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size={'24px'} style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize={24}\r\n            fontWeight={500}\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT ? theme.primary : ''}\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap={'0px'}>\r\n          <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\r\n            {nativeOutput?.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap={'0px'}>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\r\n              <TYPE.main color={theme.primary}> Price Updated</TYPE.main>\r\n            </RowFixed>\r\n            <ButtonPrimary\r\n              style={{ padding: '.5rem', width: 'fit-content', fontSize: '0.825rem', borderRadius: '12px' }}\r\n              onClick={onAcceptChanges}\r\n            >\r\n              <Trans>Accept</Trans>\r\n            </ButtonPrimary>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\r\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\r\n          <TYPE.italic textAlign=\"left\" style={{ width: '100%' }}>\r\n            {t`Output is estimated. You will receive at least `}{' '}\r\n            <b>\r\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {nativeOutput?.symbol}\r\n            </b>{' '}\r\n            {t` or the transaction will revert.`}\r\n            {isSolana && <> {t` We may send multiple tx to complete the swap`}</>}\r\n          </TYPE.italic>\r\n        ) : (\r\n          <TYPE.italic textAlign=\"left\" style={{ width: '100%' }}>\r\n            {t`Input is estimated. You will sell at most `}\r\n            <b>\r\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {nativeInput?.symbol}\r\n            </b>\r\n            {t` or the transaction will revert.`}\r\n          </TYPE.italic>\r\n        )}\r\n      </AutoColumn>\r\n      {recipient !== null && (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\r\n          <TYPE.main>\r\n            Output will be sent to{' '}\r\n            <b title={recipient}>{isAddress(chainId, recipient) ? shortenAddress(chainId, recipient) : recipient}</b>\r\n          </TYPE.main>\r\n        </AutoColumn>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { Currency } from '@kyberswap/ks-sdk-core'\r\nimport { t } from '@lingui/macro'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\n\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useEncodeSolana, useSwapState } from 'state/swap/hooks'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Aggregator, tradeB: Aggregator): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\n\r\nexport default function ConfirmSwapModal({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  isOpen,\r\n  attemptingTxn,\r\n  txHash,\r\n  tokenAddToMetaMask,\r\n  showTxBanner,\r\n}: {\r\n  isOpen: boolean\r\n  trade: Aggregator | undefined\r\n  originalTrade: Aggregator | undefined\r\n  attemptingTxn: boolean\r\n  txHash: string | undefined\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  tokenAddToMetaMask: Currency | undefined\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  onDismiss: () => void\r\n  showTxBanner?: boolean\r\n}) {\r\n  const { isSolana } = useActiveWeb3React()\r\n  const { feeConfig, typedValue } = useSwapState()\r\n  const [startedTime, setStartedTime] = useState<number | undefined>(undefined)\r\n  const [encodeSolana] = useEncodeSolana()\r\n\r\n  useEffect(() => {\r\n    if (isSolana && encodeSolana) setStartedTime(Date.now())\r\n    else setStartedTime(undefined)\r\n  }, [encodeSolana, isOpen, isSolana])\r\n\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges || (isSolana && !encodeSolana)}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n        feeConfig={feeConfig}\r\n        startedTime={startedTime}\r\n      />\r\n    ) : null\r\n  }, [\r\n    allowedSlippage,\r\n    onConfirm,\r\n    showAcceptChanges,\r\n    swapErrorMessage,\r\n    trade,\r\n    feeConfig,\r\n    isSolana,\r\n    startedTime,\r\n    encodeSolana,\r\n  ])\r\n\r\n  const nativeInput = useCurrencyConvertedToNative(originalTrade?.inputAmount?.currency)\r\n  const nativeOutput = useCurrencyConvertedToNative(originalTrade?.outputAmount?.currency)\r\n  // text to show while loading\r\n  const pendingText = `Swapping ${!!feeConfig ? typedValue : originalTrade?.inputAmount?.toSignificant(6)} ${\r\n    nativeInput?.symbol\r\n  } for ${originalTrade?.outputAmount?.toSignificant(6)} ${nativeOutput?.symbol}`\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent\r\n          title={t`Confirm Swap`}\r\n          onDismiss={onDismiss}\r\n          topContent={modalHeader}\r\n          bottomContent={modalBottom}\r\n        />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      isOpen={isOpen}\r\n      onDismiss={onDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n      tokenAddToMetaMask={tokenAddToMetaMask}\r\n      showTxBanner={showTxBanner}\r\n      startedTime={startedTime}\r\n    />\r\n  )\r\n}\r\n","import useSWR from 'swr'\r\n\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useETHPrice } from 'state/application/hooks'\r\n\r\nexport enum GasLevel {\r\n  SLOW = 'slow',\r\n  NORMAL = 'normal',\r\n  FAST = 'fast',\r\n}\r\n\r\ntype Response = Array<{\r\n  level: GasLevel\r\n  front_tx_count: number\r\n  price: number // in wei\r\n  estimated_seconds: number\r\n}>\r\n\r\ntype GasPriceTrackerData = Record<\r\n  GasLevel,\r\n  {\r\n    gasPriceInGwei?: number\r\n    minimumTxFeeInUSD?: string\r\n  }\r\n>\r\n\r\nconst calculateGasPrices = (resp: Response, currentPrice?: string | number): GasPriceTrackerData => {\r\n  const levels = [GasLevel.SLOW, GasLevel.NORMAL, GasLevel.FAST]\r\n\r\n  const gasPricesInWei = levels.map(level => resp.find(item => item.level === level)?.price)\r\n  const gasPricesInGwei = gasPricesInWei.map(price => (price ? price / 1e9 : undefined))\r\n\r\n  const parsedCurrentPrice = currentPrice ? Number.parseFloat(String(currentPrice)) : NaN\r\n\r\n  const costs = gasPricesInWei.map(gasPrice => {\r\n    if (!gasPrice || Number.isNaN(parsedCurrentPrice)) {\r\n      return ''\r\n    }\r\n    // 190_000 is the minimum gas units needed for a swap\r\n    const cost = ((gasPrice / 1e18) * parsedCurrentPrice * 190_000).toFixed(2)\r\n    return cost\r\n  })\r\n\r\n  return {\r\n    [GasLevel.SLOW]: {\r\n      gasPriceInGwei: gasPricesInGwei[0],\r\n      minimumTxFeeInUSD: costs[0],\r\n    },\r\n    [GasLevel.NORMAL]: {\r\n      gasPriceInGwei: gasPricesInGwei[1],\r\n      minimumTxFeeInUSD: costs[1],\r\n    },\r\n    [GasLevel.FAST]: {\r\n      gasPriceInGwei: gasPricesInGwei[2],\r\n      minimumTxFeeInUSD: costs[2],\r\n    },\r\n  }\r\n}\r\n\r\nconst useGasPriceFromDeBank = (): GasPriceTrackerData | undefined => {\r\n  const { chainId, networkInfo, isEVM } = useActiveWeb3React()\r\n  const nativeTokenPriceData = useETHPrice()\r\n  const chainSlug = isEVM ? (networkInfo as EVMNetworkInfo).deBankSlug : ''\r\n  const { data, error } = useSWR<Response>(\r\n    `https://openapi.debank.com/v1/wallet/gas_market?chain_id=${chainSlug}`,\r\n    async (url: string) => {\r\n      if (!isEVM) throw new Error()\r\n      if (!chainSlug) {\r\n        const err = `chain (${chainId}) is not supported`\r\n        console.error(err)\r\n        throw err\r\n      }\r\n\r\n      const response = await fetch(url)\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        if (data && Array.isArray(data)) {\r\n          return data\r\n        }\r\n\r\n        const err = `invalid data in chain (${chainSlug})`\r\n        console.error(err)\r\n        throw err\r\n      }\r\n\r\n      const err = `fetching data on chain (${chainSlug}) failed`\r\n      console.error(err)\r\n      throw err\r\n    },\r\n  )\r\n\r\n  if (error || !data) {\r\n    return undefined\r\n  }\r\n\r\n  return calculateGasPrices(data, nativeTokenPriceData.currentPrice)\r\n}\r\n\r\nexport default useGasPriceFromDeBank\r\n","import { t } from '@lingui/macro'\r\nimport React from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Box, Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { GasStation } from 'components/Icons'\r\nimport useGasPriceFromDeBank, { GasLevel } from 'hooks/useGasPriceFromDeBank'\r\n\r\ntype Props = {\r\n  className?: string\r\n  onBack: () => void\r\n}\r\n\r\nconst mappings = [\r\n  {\r\n    gasLevel: GasLevel.SLOW,\r\n    label: t`Low`,\r\n  },\r\n  {\r\n    gasLevel: GasLevel.NORMAL,\r\n    label: t`Average`,\r\n  },\r\n  {\r\n    gasLevel: GasLevel.FAST,\r\n    label: t`High`,\r\n  },\r\n]\r\n\r\nconst BackIconWrapper = styled(ArrowLeft)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  path {\r\n    stroke: ${({ theme }) => theme.text} !important;\r\n  }\r\n`\r\n\r\nconst BackText = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst GasPriceList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n`\r\n\r\nconst GasPriceItem = styled.div`\r\n  flex: 1 1 33%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  row-gap: 8px;\r\n\r\n  &[data-type='${GasLevel.SLOW}'] {\r\n    color: ${({ theme }) => theme.green};\r\n  }\r\n  &[data-type='${GasLevel.NORMAL}'] {\r\n    color: ${({ theme }) => theme.text};\r\n\r\n    border-left: 1px solid ${({ theme }) => theme.border};\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n  }\r\n  &[data-type='${GasLevel.FAST}'] {\r\n    color: ${({ theme }) => theme.red};\r\n  }\r\n`\r\n\r\nconst GasPriceItemTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  column-gap: 4px;\r\n\r\n  height: 16px;\r\n\r\n  color: inherit;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n\r\n  svg {\r\n    height: 100%;\r\n    width: auto;\r\n  }\r\n\r\n  span {\r\n    text-transform: capitalize;\r\n  }\r\n`\r\n\r\nconst PriceInGwei = styled.div`\r\n  color: inherit;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n`\r\n\r\nconst PriceInUSD = styled.div`\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n`\r\n\r\nconst getPriceInGweiText = (value: number | undefined) => {\r\n  return value ? `${value} gwei` : '-'\r\n}\r\n\r\nconst getPriceInUSDText = (value: string | undefined) => {\r\n  return value ? `$${value}` : '-'\r\n}\r\n\r\nconst GasPriceTrackerPanel: React.FC<Props> = ({ className, onBack }) => {\r\n  const data = useGasPriceFromDeBank()\r\n\r\n  if (!data) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Box minHeight=\"300px\" width=\"100%\" className={className}>\r\n      <Flex\r\n        width={'100%'}\r\n        flexDirection={'column'}\r\n        sx={{\r\n          rowGap: '16px',\r\n        }}\r\n      >\r\n        <Flex\r\n          alignItems=\"center\"\r\n          sx={{\r\n            // this is to make the arrow stay exactly where it stays in Swap panel\r\n            marginTop: '5px',\r\n          }}\r\n        >\r\n          <BackIconWrapper onClick={onBack}></BackIconWrapper>\r\n          <BackText>{t`Gas Price Tracker`}</BackText>\r\n        </Flex>\r\n\r\n        <GasPriceList>\r\n          {mappings.map(({ gasLevel, label }) => (\r\n            <GasPriceItem key={gasLevel} data-type={gasLevel}>\r\n              <GasPriceItemTitle>\r\n                <GasStation />\r\n                <span>{label}</span>\r\n              </GasPriceItemTitle>\r\n\r\n              <PriceInGwei>{getPriceInGweiText(data[gasLevel].gasPriceInGwei)}</PriceInGwei>\r\n              <PriceInUSD>{getPriceInUSDText(data[gasLevel].minimumTxFeeInUSD)}</PriceInUSD>\r\n            </GasPriceItem>\r\n          ))}\r\n        </GasPriceList>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default GasPriceTrackerPanel\r\n","import { t } from '@lingui/macro'\r\nimport React from 'react'\r\nimport { Search } from 'react-feather'\r\nimport styled from 'styled-components'\r\n\r\ntype Props = {\r\n  text: string\r\n  setText: (txt: string) => void\r\n}\r\n\r\nconst SearchBarWrapper = styled.div`\r\n  width: 100%;\r\n  height: 36px;\r\n  position: relative;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 8px 36px 8px 12px;\r\n\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  border: 0px;\r\n  border-radius: 40px;\r\n  color: inherit;\r\n  outline: none;\r\n\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 12px;\r\n  top: 0;\r\n\r\n  width: 18px;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nconst SearchBar: React.FC<Props> = ({ text, setText }) => {\r\n  return (\r\n    <SearchBarWrapper>\r\n      <Input value={text} onChange={e => setText(e.target.value)} placeholder={t`Search for a liquidity source`} />\r\n      <IconWrapper>\r\n        <Search />\r\n      </IconWrapper>\r\n    </SearchBarWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import { Trans, t } from '@lingui/macro'\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport Checkbox from 'components/CheckBox'\r\nimport { kyberswapDexes } from 'constants/dexes'\r\nimport { ELASTIC_NOT_SUPPORTED } from 'constants/v2'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport { useAllDexes, useExcludeDexes } from 'state/customizeDexes/hooks'\r\n\r\nimport SearchBar from './SearchBar'\r\n\r\ntype Props = {\r\n  onBack: () => void\r\n}\r\n\r\nconst BackIconWrapper = styled(ArrowLeft)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  path {\r\n    stroke: ${({ theme }) => theme.text} !important;\r\n  }\r\n`\r\n\r\nconst BackText = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst SourceList = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  max-height: 300px;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 24px;\r\n\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    display: unset;\r\n    width: 8px;\r\n    border-radius: 999px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: transparent;\r\n    border-radius: 999px;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.disableText};\r\n    border-radius: 999px;\r\n  }\r\n`\r\n\r\nconst Source = styled.div`\r\n  width: 100%;\r\n  height: 32px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 16px;\r\n  padding: 12px;\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n`\r\n\r\nconst SourceName = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst LiquiditySourceHeader = styled.div`\r\n  border-top-right-radius: 8px;\r\n  border-top-left-radius: 8px;\r\n  background: ${({ theme }) => theme.tableHeader};\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  padding: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`\r\n\r\nconst LiquiditySourcesPanel: React.FC<Props> = ({ onBack }) => {\r\n  const [searchText, setSearchText] = useState('')\r\n  const debouncedSearchText = useDebounce(searchText.toLowerCase(), 200).trim()\r\n  const { chainId, isEVM } = useActiveWeb3React()\r\n\r\n  const dexes = useAllDexes()\r\n  const [excludeDexes, setExcludeDexes] = useExcludeDexes()\r\n\r\n  const checkAllRef = useRef<HTMLInputElement>(null)\r\n  const kyberSwapRef = useRef<HTMLInputElement>(null)\r\n\r\n  useEffect(() => {\r\n    const selectedDexes = dexes?.filter(item => !excludeDexes.includes(item.id)) || []\r\n\r\n    if (!checkAllRef.current) return\r\n\r\n    if (selectedDexes.length === dexes?.length) {\r\n      checkAllRef.current.checked = true\r\n      checkAllRef.current.indeterminate = false\r\n    } else if (!selectedDexes.length) {\r\n      checkAllRef.current.checked = false\r\n      checkAllRef.current.indeterminate = false\r\n    } else if (selectedDexes.length < (dexes?.length || 0)) {\r\n      checkAllRef.current.checked = false\r\n      checkAllRef.current.indeterminate = true\r\n    }\r\n  }, [excludeDexes, dexes])\r\n\r\n  const ksDexes = useMemo(\r\n    () => kyberswapDexes.filter(item => (ELASTIC_NOT_SUPPORTED[chainId] ? item.id !== 'kyberswapv2' : true)),\r\n    [chainId],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!kyberSwapRef.current) return\r\n    const ksDexesId = ksDexes.map(i => i.id)\r\n    if (ksDexesId.every(item => excludeDexes.includes(item))) {\r\n      kyberSwapRef.current.checked = false\r\n      kyberSwapRef.current.indeterminate = false\r\n    } else if (ksDexesId.some(item => excludeDexes.includes(item))) {\r\n      kyberSwapRef.current.checked = false\r\n      kyberSwapRef.current.indeterminate = true\r\n    } else {\r\n      kyberSwapRef.current.checked = true\r\n      kyberSwapRef.current.indeterminate = false\r\n    }\r\n  }, [excludeDexes, ksDexes])\r\n\r\n  const handleToggleDex = (id: string) => {\r\n    const isExclude = excludeDexes.find(item => item === id)\r\n    if (isExclude) {\r\n      setExcludeDexes(excludeDexes.filter(item => item !== id))\r\n    } else {\r\n      setExcludeDexes([...excludeDexes, id])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box width=\"100%\">\r\n      <Flex\r\n        width={'100%'}\r\n        flexDirection={'column'}\r\n        sx={{\r\n          rowGap: '20px',\r\n        }}\r\n      >\r\n        <Flex\r\n          alignItems=\"center\"\r\n          sx={{\r\n            // this is to make the arrow stay exactly where it stays in Swap panel\r\n            marginTop: '5px',\r\n          }}\r\n        >\r\n          <BackIconWrapper onClick={onBack}></BackIconWrapper>\r\n          <BackText>{t`Liquidity Sources`}</BackText>\r\n        </Flex>\r\n\r\n        <SearchBar text={searchText} setText={setSearchText} />\r\n\r\n        <LiquiditySourceHeader>\r\n          <Checkbox\r\n            type=\"checkbox\"\r\n            ref={checkAllRef}\r\n            onChange={e => {\r\n              if (!e.currentTarget.checked) {\r\n                setExcludeDexes(dexes?.map(item => item.id) || [])\r\n              } else {\r\n                setExcludeDexes([])\r\n              }\r\n            }}\r\n          />\r\n          <Text>\r\n            <Trans>Liquidity Sources</Trans>\r\n          </Text>\r\n        </LiquiditySourceHeader>\r\n\r\n        <SourceList>\r\n          {isEVM && !!ksDexes.filter(item => item.name.toLowerCase().includes(debouncedSearchText)).length && (\r\n            <>\r\n              <Source>\r\n                <Checkbox\r\n                  type=\"checkbox\"\r\n                  ref={kyberSwapRef}\r\n                  checked={!ksDexes.map(i => i.id).every(item => excludeDexes.includes(item))}\r\n                  onChange={e => {\r\n                    if (e.target.checked) {\r\n                      setExcludeDexes(excludeDexes.filter(item => !item.includes('kyberswap')))\r\n                    } else {\r\n                      const newData = [\r\n                        ...excludeDexes.filter(item => !item.includes('kyberswap')),\r\n                        ...ksDexes.map(item => item.id),\r\n                      ]\r\n                      setExcludeDexes(newData)\r\n                    }\r\n                  }}\r\n                />\r\n                <ImageWrapper>\r\n                  <img src=\"https://kyberswap.com/favicon.ico\" alt=\"ks logo\" />\r\n                </ImageWrapper>\r\n                <SourceName>Kyberswap - All</SourceName>\r\n              </Source>\r\n\r\n              {ksDexes\r\n                .filter(item => item.name.toLowerCase().includes(debouncedSearchText))\r\n                .map(({ name, logoURL, id }) => {\r\n                  return (\r\n                    <Source key={name} style={{ padding: '12px 48px' }}>\r\n                      <Checkbox\r\n                        type=\"checkbox\"\r\n                        checked={!excludeDexes.includes(id)}\r\n                        onChange={() => handleToggleDex(id)}\r\n                      />\r\n\r\n                      <ImageWrapper>\r\n                        <img src={logoURL} alt=\"\" />\r\n                      </ImageWrapper>\r\n\r\n                      <SourceName>{name}</SourceName>\r\n                    </Source>\r\n                  )\r\n                })}\r\n            </>\r\n          )}\r\n          {dexes\r\n            ?.filter(item => !item.id.includes('kyberswap') && item.name.toLowerCase().includes(debouncedSearchText))\r\n            .map(({ name, logoURL, id }) => (\r\n              <Source key={name}>\r\n                <Checkbox type=\"checkbox\" checked={!excludeDexes.includes(id)} onChange={() => handleToggleDex(id)} />\r\n\r\n                <ImageWrapper>\r\n                  <img src={logoURL} alt=\"\" />\r\n                </ImageWrapper>\r\n\r\n                <SourceName>{name}</SourceName>\r\n              </Source>\r\n            ))}\r\n        </SourceList>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default LiquiditySourcesPanel\r\n","export default __webpack_public_path__ + \"static/media/coingecko-light.9aa5643f.svg\";","export default __webpack_public_path__ + \"static/media/coingecko.4d308e0a.svg\";","import { Token } from '@kyberswap/ks-sdk-core'\r\nimport { createUserAssociatedTokenAccount } from '@kyberswap/ks-sdk-solana'\r\nimport { PublicKey } from '@solana/web3.js'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport { RowFixed } from 'components/Row'\r\nimport { SUPPORTED_WALLETS } from 'constants/wallets'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useProvider from 'hooks/solana/useProvider'\r\nimport { getTokenLogoURL, isAddress } from 'utils'\r\n\r\nconst StyledLogo = styled.img`\r\n  height: 16px;\r\n  width: 16px;\r\n`\r\n\r\nexport default function AddTokenToMetaMask({ token }: { token: Token }) {\r\n  const { chainId, walletKey, account, isEVM } = useActiveWeb3React()\r\n  const provider = useProvider()\r\n\r\n  async function addToMetaMask() {\r\n    const tokenAddress = token.address\r\n    const tokenSymbol = token.symbol\r\n    const tokenDecimals = token.decimals\r\n    const tokenImage = getTokenLogoURL(token.address, chainId)\r\n\r\n    if (isEVM) {\r\n      try {\r\n        await window.ethereum?.request({\r\n          method: 'wallet_watchAsset',\r\n          params: {\r\n            type: 'ERC20',\r\n            options: {\r\n              address: tokenAddress,\r\n              symbol: tokenSymbol,\r\n              decimals: tokenDecimals,\r\n              image: tokenImage,\r\n            },\r\n          },\r\n        })\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    } else {\r\n      if (!account || !provider || !isAddress(chainId, tokenAddress)) return\r\n      try {\r\n        await createUserAssociatedTokenAccount(provider, new PublicKey(tokenAddress), new PublicKey(account))\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n  if (!walletKey) return null\r\n  if (isEVM && walletKey === 'COINBASE') return null // Coinbase wallet no need to add since it automatically track token\r\n  return (\r\n    <ButtonEmpty mt=\"12px\" padding=\"0\" width=\"fit-content\" onClick={addToMetaMask}>\r\n      <RowFixed>\r\n        <StyledLogo src={SUPPORTED_WALLETS[walletKey].icon} />\r\n      </RowFixed>\r\n    </ButtonEmpty>\r\n  )\r\n}\r\n","import { Token, WETH } from '@kyberswap/ks-sdk-core'\r\nimport useSWR from 'swr'\r\n\r\nimport { COINGECKO_API_URL } from 'constants/index'\r\nimport { NETWORKS_INFO } from 'constants/networks'\r\nimport { useActiveWeb3React } from 'hooks'\r\n\r\nexport interface TokenInfo {\r\n  price: number\r\n  marketCap: number\r\n  marketCapRank: number\r\n  circulatingSupply: number\r\n  totalSupply: number\r\n  allTimeHigh: number\r\n  allTimeLow: number\r\n  tradingVolume: number\r\n  description: { en: string }\r\n  name: string\r\n}\r\n\r\nexport default function useTokenInfo(token: Token | undefined): { data: TokenInfo; loading: boolean; error: any } {\r\n  const { chainId, isSolana } = useActiveWeb3React()\r\n\r\n  const fetcher = (url: string) => (url ? fetch(url).then(r => r.json()) : Promise.reject({ data: {}, error: '' }))\r\n\r\n  const tokenAddress = isSolana ? token?.address || '' : (token?.address || '').toLowerCase()\r\n\r\n  let url = ''\r\n\r\n  if (tokenAddress.toLowerCase() === WETH[chainId].address.toLowerCase()) {\r\n    // If the token is native token, we have to use different endpoint\r\n    url = `${COINGECKO_API_URL}/coins/${NETWORKS_INFO[chainId].coingeckoNativeTokenId}`\r\n  } else if (tokenAddress) {\r\n    url = `${COINGECKO_API_URL}/coins/${NETWORKS_INFO[chainId].coingeckoNetworkId}/contract/${tokenAddress}`\r\n  }\r\n\r\n  const { data, error } = useSWR(url, fetcher, {\r\n    refreshInterval: 60000,\r\n    onErrorRetry: (error, key, config, revalidate, { retryCount }) => {\r\n      // Never retry on 404.\r\n      if (error.status === 404) return\r\n\r\n      // Only retry up to 10 times.\r\n      if (retryCount >= 10) return\r\n\r\n      if (error.status === 403) {\r\n        // If API return 403, retry after 30 seconds.\r\n        setTimeout(() => revalidate({ retryCount }), 30000)\r\n        return\r\n      }\r\n\r\n      // Retry after 20 seconds.\r\n      setTimeout(() => revalidate({ retryCount }), 20000)\r\n    },\r\n  })\r\n\r\n  if (error && process.env.NODE_ENV === 'development') {\r\n    console.error(error)\r\n  }\r\n\r\n  const loading = !data\r\n\r\n  const result = {\r\n    price: data?.market_data?.current_price?.usd || 0,\r\n    marketCap: data?.market_data?.market_cap?.usd || 0,\r\n    marketCapRank: data?.market_data?.market_cap_rank || 0,\r\n    circulatingSupply: data?.market_data?.circulating_supply || 0,\r\n    totalSupply: data?.market_data?.total_supply || 0,\r\n    allTimeHigh: data?.market_data?.ath?.usd || 0,\r\n    allTimeLow: data?.market_data?.atl?.usd || 0,\r\n    tradingVolume: data?.market_data?.total_volume?.usd || 0,\r\n    description: data?.description || { en: '' },\r\n    name: data?.name || '',\r\n  }\r\n\r\n  return { data: result, loading, error }\r\n}\r\n","import { Currency } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport CoingeckoLight from 'assets/svg/coingecko-light.svg'\r\nimport Coingecko from 'assets/svg/coingecko.svg'\r\nimport AddTokenToMetaMask from 'components/AddToMetamask'\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport Copy from 'components/Copy'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Loader from 'components/Loader'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useTokenInfo from 'hooks/useTokenInfo'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useIsDarkMode } from 'state/user/hooks'\r\nimport { formattedNum, shortenAddress } from 'utils'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { formatLongNumber } from 'utils/formatBalance'\r\n\r\nconst NOT_AVAIALBLE = '--'\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  border-radius: 999px;\r\n  background-color: ${({ theme }) => theme.tabBackgound};\r\n  padding: 2px;\r\n`\r\n\r\nconst Tab = styled(ButtonEmpty)<{ isActive?: boolean; isLeft?: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  background-color: ${({ theme, isActive }) => (isActive ? theme.tabActive : theme.tabBackgound)};\r\n  padding: 4px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  border-radius: 999px;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst TabText = styled.div<{ isActive: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2px;\r\n  color: ${({ theme, isActive }) => (isActive ? theme.text : theme.subText)};\r\n  margin-left: 4px;\r\n`\r\n\r\nconst InfoRow = styled(RowBetween)`\r\n  padding: 14px 0;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 12px 0\r\n  `}\r\n`\r\n\r\nconst InfoRowLabel = styled.div`\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: 12px;\r\n`\r\n\r\nconst InfoRowValue = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n`\r\n\r\nconst PoweredByWrapper = styled.div`\r\n  display: flex;\r\n  gap: 4px;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin-top: 14px;\r\n`\r\n\r\nconst PoweredByText = styled.span`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nconst BackText = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst BackIconWrapper = styled(ArrowLeft)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  path {\r\n    stroke: ${({ theme }) => theme.text} !important;\r\n  }\r\n`\r\nenum TAB {\r\n  TOKEN_IN,\r\n  TOKEN_OUT,\r\n}\r\nconst TokenInfo = ({ currencies, onBack }: { currencies: { [field in Field]?: Currency }; onBack?: () => void }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const inputNativeCurrency = useCurrencyConvertedToNative(currencies[Field.INPUT])\r\n  const outputNativeCurrency = useCurrencyConvertedToNative(currencies[Field.OUTPUT])\r\n  const inputToken = inputNativeCurrency?.wrapped\r\n  const outputToken = outputNativeCurrency?.wrapped\r\n  const [activeTab, setActiveTab] = useState(TAB.TOKEN_IN)\r\n  const selectedToken = activeTab === TAB.TOKEN_OUT ? outputToken : inputToken\r\n  const { data: tokenInfo, loading } = useTokenInfo(selectedToken)\r\n  const darkMode = useIsDarkMode()\r\n\r\n  // Handle switch network case\r\n  useEffect(() => {\r\n    inputToken?.address && setActiveTab(TAB.TOKEN_IN)\r\n  }, [chainId, inputToken])\r\n\r\n  const listData = [\r\n    { label: t`Price`, value: tokenInfo.price ? formattedNum(tokenInfo.price.toString(), true) : NOT_AVAIALBLE },\r\n    {\r\n      label: t`Trading Volume (24H)`,\r\n      value: tokenInfo.tradingVolume ? formatLongNumber(tokenInfo.tradingVolume.toString(), true) : NOT_AVAIALBLE,\r\n    },\r\n    {\r\n      label: t`Market Cap Rank`,\r\n      value: tokenInfo.marketCapRank ? `#${formattedNum(tokenInfo.marketCapRank.toString())}` : NOT_AVAIALBLE,\r\n    },\r\n    {\r\n      label: t`Market Cap`,\r\n      value: tokenInfo.marketCap ? formatLongNumber(tokenInfo.marketCap.toString(), true) : NOT_AVAIALBLE,\r\n    },\r\n    {\r\n      label: t`All-Time High`,\r\n      value: tokenInfo.allTimeHigh ? formattedNum(tokenInfo.allTimeHigh.toString(), true) : NOT_AVAIALBLE,\r\n    },\r\n    {\r\n      label: t`All-Time Low`,\r\n      value: tokenInfo.allTimeLow ? formattedNum(tokenInfo.allTimeLow.toString(), true) : NOT_AVAIALBLE,\r\n    },\r\n    {\r\n      label: t`Circulating Supply`,\r\n      value: tokenInfo.circulatingSupply ? formatLongNumber(tokenInfo.circulatingSupply.toString()) : NOT_AVAIALBLE,\r\n    },\r\n    {\r\n      label: t`Total Supply`,\r\n      value: tokenInfo.totalSupply ? formatLongNumber(tokenInfo.totalSupply.toString()) : NOT_AVAIALBLE,\r\n    },\r\n  ]\r\n\r\n  const isActiveTokenIn = activeTab === TAB.TOKEN_IN\r\n  const isActiveTokenOut = activeTab === TAB.TOKEN_OUT\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" marginBottom=\"4px\">\r\n          {onBack && (\r\n            <Flex alignItems=\"center\" marginRight={20}>\r\n              <BackIconWrapper onClick={onBack}></BackIconWrapper>\r\n              <BackText>{t`Info`}</BackText>\r\n            </Flex>\r\n          )}\r\n          <TabContainer>\r\n            <Tab isActive={isActiveTokenIn} padding=\"0\" onClick={() => setActiveTab(TAB.TOKEN_IN)}>\r\n              <CurrencyLogo currency={inputNativeCurrency} size=\"16px\" />\r\n              <TabText isActive={isActiveTokenIn}>{inputNativeCurrency?.symbol}</TabText>\r\n            </Tab>\r\n            <Tab isActive={isActiveTokenOut} padding=\"0\" onClick={() => setActiveTab(TAB.TOKEN_OUT)}>\r\n              <CurrencyLogo currency={outputNativeCurrency} size=\"16px\" />\r\n              <TabText isActive={isActiveTokenOut}>{outputNativeCurrency?.symbol}</TabText>\r\n            </Tab>\r\n          </TabContainer>\r\n        </Flex>\r\n\r\n        {listData.map(item => (\r\n          <InfoRow key={item.label}>\r\n            <InfoRowLabel>{item.label}</InfoRowLabel>\r\n            <InfoRowValue>{loading ? <Loader size=\"10px\" /> : item.value}</InfoRowValue>\r\n          </InfoRow>\r\n        ))}\r\n\r\n        <InfoRow style={{ borderBottom: 'none', paddingBottom: 0 }}>\r\n          <InfoRowLabel>\r\n            <Trans>Contract Address</Trans>\r\n          </InfoRowLabel>\r\n\r\n          <AutoRow width=\"fit-content\" gap=\"4px\">\r\n            {selectedToken ? (\r\n              <>\r\n                <CurrencyLogo currency={selectedToken} size=\"16px\" />\r\n                <InfoRowValue>{shortenAddress(chainId, selectedToken.address, 3)}</InfoRowValue>\r\n                <Copy toCopy={selectedToken.address} />\r\n                <AddTokenToMetaMask token={selectedToken} />\r\n              </>\r\n            ) : (\r\n              <Loader />\r\n            )}\r\n          </AutoRow>\r\n        </InfoRow>\r\n      </Wrapper>\r\n      <PoweredByWrapper>\r\n        <PoweredByText>\r\n          <Trans>Powered by</Trans>\r\n        </PoweredByText>{' '}\r\n        <img src={darkMode ? Coingecko : CoingeckoLight} alt=\"Coingecko logo\" />\r\n      </PoweredByWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TokenInfo\r\n","import { Currency } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { MobileView, isMobile } from 'react-device-detect'\r\nimport { Info, X } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { RowBetween } from 'components/Row'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport TokenInfo from 'components/swapv2/TokenInfo'\r\nimport { MobileModalWrapper, StyledActionButtonSwapForm } from 'components/swapv2/styleds'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ApplicationModal } from 'state/application/actions'\r\nimport { useModalOpen, useToggleModal } from 'state/application/hooks'\r\nimport { Field } from 'state/swap/actions'\r\nimport { ButtonText } from 'theme/components'\r\n\r\nfunction MobileTradeRoutes({\r\n  currencies,\r\n  onClick,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  onClick?: () => void\r\n}) {\r\n  const theme = useTheme()\r\n  const isOpen = useModalOpen(ApplicationModal.MOBILE_TOKEN_INFO)\r\n  const toggle = useToggleModal(ApplicationModal.MOBILE_TOKEN_INFO)\r\n\r\n  return (\r\n    <>\r\n      <MobileView>\r\n        <MobileModalWrapper isOpen={isOpen} onDismiss={toggle} maxHeight={80}>\r\n          <Flex flexDirection=\"column\" alignItems=\"center\" width=\"100%\">\r\n            <Flex flexDirection=\"column\" width=\"100%\" padding=\"16px 16px 0px\" marginBottom=\"1rem\">\r\n              <RowBetween>\r\n                <Text fontSize={16} fontWeight={500}>\r\n                  <Trans>Info</Trans>\r\n                </Text>\r\n                <ButtonText onClick={toggle} style={{ alignSelf: 'flex-end', lineHeight: 0 }}>\r\n                  <X color={theme.subText} size={24} />\r\n                </ButtonText>\r\n              </RowBetween>\r\n            </Flex>\r\n            <Flex flexDirection=\"column\" width=\"100%\" padding=\"0px 16px\" marginBottom={20}>\r\n              <TokenInfo currencies={currencies} />\r\n            </Flex>\r\n          </Flex>\r\n        </MobileModalWrapper>\r\n      </MobileView>\r\n      <StyledActionButtonSwapForm onClick={isMobile ? toggle : onClick}>\r\n        <MouseoverTooltip text={t`Token Info`} placement=\"top\" width=\"fit-content\">\r\n          <Info color={theme.subText} size={20} />\r\n        </MouseoverTooltip>\r\n      </StyledActionButtonSwapForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileTradeRoutes\r\n","import { ChainId } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { ETHER_ADDRESS } from 'constants/index'\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport { TokenMap } from 'hooks/Tokens'\r\nimport { getTokenLogoURL } from 'utils'\r\nimport { currencyId } from 'utils/currencyId'\r\n\r\nimport { SuggestionPairData } from './request'\r\n\r\nexport const isFavoritePair = (favoritePairs: SuggestionPairData[], item: SuggestionPairData) => {\r\n  return favoritePairs.some(({ tokenIn, tokenOut }) => item.tokenIn === tokenIn && item.tokenOut === tokenOut)\r\n}\r\n\r\n// address is lowercase\r\nconst isTokenInWhiteList = (activeTokens: TokenMap, address: string) =>\r\n  address.toLowerCase() === ETHER_ADDRESS.toLowerCase() ? true : !!activeTokens[address]\r\n\r\n// at least tokenIn or tokeOut not in whitelist\r\nexport const isActivePair = (activeTokens: TokenMap, pair: SuggestionPairData) =>\r\n  isTokenInWhiteList(activeTokens, pair.tokenIn) && isTokenInWhiteList(activeTokens, pair.tokenOut)\r\n\r\nexport const findLogoAndSortPair = (activeTokens: TokenMap, list: SuggestionPairData[], chainId: ChainId) => {\r\n  return list\r\n    .map(token => {\r\n      // find logo\r\n      if (!token.tokenInImgUrl) {\r\n        token.tokenInImgUrl = getTokenLogoURL(token.tokenIn, chainId)\r\n      }\r\n      if (!token.tokenOutImgUrl) {\r\n        token.tokenOutImgUrl = getTokenLogoURL(token.tokenOut, chainId)\r\n      }\r\n      return token\r\n    })\r\n    .sort((a, b) => {\r\n      // sort token pair in whitelist appear first\r\n      const activeA = [isTokenInWhiteList(activeTokens, a.tokenIn), isTokenInWhiteList(activeTokens, a.tokenOut)]\r\n      const activeB = [isTokenInWhiteList(activeTokens, b.tokenIn), isTokenInWhiteList(activeTokens, b.tokenOut)]\r\n      return activeA.filter(Boolean).length > activeB.filter(Boolean).length ? -1 : 1\r\n    })\r\n}\r\n\r\nexport const getAddressParam = (address: string, chainId: ChainId | undefined) =>\r\n  address.toLowerCase() === ETHER_ADDRESS.toLowerCase() && chainId\r\n    ? currencyId(NativeCurrencies[chainId], chainId)\r\n    : address\r\n","import { t } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport React from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { Star } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport Logo from 'components/Logo'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nimport { SuggestionPairData } from './request'\r\nimport { isActivePair } from './utils'\r\n\r\nconst ItemWrapper = styled.div<{ isActive: boolean }>`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: ${({ theme, isActive }) => (isActive ? rgba(theme.buttonBlack, 0.5) : 'transparent')};\r\n  padding: 1em;\r\n  &:hover {\r\n    background-color: ${({ theme }) => rgba(theme.buttonBlack, 0.5)};\r\n  }\r\n`\r\n\r\nconst StyledLogo = styled(Logo)`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 100%;\r\n`\r\n\r\ntype PropsType = {\r\n  onClickStar: () => void\r\n  onSelectPair: () => void\r\n  data: SuggestionPairData\r\n  isActive: boolean\r\n  amount: string\r\n  isFavorite?: boolean\r\n  isFullFavoritePair?: boolean\r\n}\r\nexport default function SuggestItem({\r\n  data,\r\n  isFavorite,\r\n  isFullFavoritePair,\r\n  isActive,\r\n  amount,\r\n  onClickStar,\r\n  onSelectPair,\r\n}: PropsType) {\r\n  const theme = useTheme()\r\n  const activeTokens = useAllTokens(true)\r\n  const { account } = useActiveWeb3React()\r\n  const { tokenInSymbol, tokenOutSymbol, tokenInImgUrl, tokenOutImgUrl, tokenInName, tokenOutName } = data\r\n\r\n  const handleClickStar = (e: React.MouseEvent) => {\r\n    e.stopPropagation()\r\n    onClickStar()\r\n  }\r\n\r\n  const isTokenNotImport = !isActivePair(activeTokens, data)\r\n  const star = (\r\n    <Star\r\n      fill={isFavorite ? theme.primary : 'none'}\r\n      color={isFavorite ? theme.primary : theme.subText}\r\n      onClick={handleClickStar}\r\n      size={20}\r\n    />\r\n  )\r\n  return (\r\n    <ItemWrapper\r\n      tabIndex={isTokenNotImport ? 0 : undefined}\r\n      className={isTokenNotImport ? 'no-blur' : ''}\r\n      onClick={onSelectPair}\r\n      isActive={isActive && !isMobile}\r\n    >\r\n      <Flex alignItems=\"center\" style={{ gap: 10 }}>\r\n        <Flex alignItems=\"flex-start\" height=\"100%\">\r\n          <StyledLogo style={{ marginRight: 5 }} srcs={[tokenInImgUrl]} alt={tokenInSymbol} />\r\n          <StyledLogo srcs={[tokenOutImgUrl]} alt={tokenOutSymbol} />\r\n        </Flex>\r\n        <div style={{ flex: 1 }}>\r\n          <Text color={theme.text}>\r\n            {amount} {tokenInSymbol} - {tokenOutSymbol}\r\n          </Text>\r\n          <Text color={theme.border} fontSize={14}>\r\n            {tokenInName} - {tokenOutName}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n      <Flex height=\"100%\" tabIndex={0} className=\"no-blur\" minWidth={20}>\r\n        {account &&\r\n          (isFullFavoritePair && !isMobile ? (\r\n            <MouseoverTooltip text={t`You can only favorite up to three token pairs`}>{star}</MouseoverTooltip>\r\n          ) : (\r\n            star\r\n          ))}\r\n      </Flex>\r\n    </ItemWrapper>\r\n  )\r\n}\r\n","import { Trans, t } from '@lingui/macro'\r\nimport { AlertTriangle, Star } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport { Z_INDEXS } from 'constants/styles'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nimport PairSuggestionItem from './PairSuggestionItem'\r\nimport { Container, MAX_FAVORITE_PAIRS } from './index'\r\nimport { SuggestionPairData } from './request'\r\nimport { isFavoritePair } from './utils'\r\n\r\nconst Break = styled.div`\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n`\r\n\r\nconst Title = styled.div`\r\n  font-size: 13px;\r\n  color: ${({ theme }) => theme.subText};\r\n  margin: 1em 0 1em 0;\r\n`\r\n\r\nconst MenuFlyout = styled.div<{ showList: boolean; hasShadow?: boolean }>`\r\n  overflow: auto;\r\n  background-color: ${({ theme, showList }) => (showList ? theme.tabActive : theme.background)};\r\n  border-radius: 20px;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  top: 55px;\r\n  left: 0;\r\n  right: 0;\r\n  outline: none;\r\n  z-index: ${Z_INDEXS.SUGGESTION_PAIR};\r\n  ${({ hasShadow }) =>\r\n    hasShadow\r\n      ? css`\r\n          box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\r\n          position: absolute;\r\n        `\r\n      : css`\r\n          box-shadow: unset;\r\n          position: unset;\r\n        `};\r\n`\r\n\r\nconst TextWithIcon = ({ text, icon, color }: { text: string; icon?: JSX.Element; color: string }) => (\r\n  <Container>\r\n    <Flex alignItems=\"center\" style={{ margin: '1em 0' }}>\r\n      {icon}\r\n      <Text style={{ marginLeft: icon ? 7 : 0, color }}>{text}</Text>\r\n    </Flex>\r\n  </Container>\r\n)\r\n\r\nexport default function ListPair({\r\n  isShowListPair,\r\n  isFullFavoritePair,\r\n  hasShadow,\r\n  suggestedAmount,\r\n  favoritePairs,\r\n  suggestedPairs,\r\n  isSearch,\r\n  selectedIndex,\r\n  onSelectPair,\r\n  onClickStar,\r\n}: {\r\n  isFullFavoritePair: boolean\r\n  suggestedAmount: string\r\n  hasShadow?: boolean\r\n  selectedIndex: number\r\n  isShowListPair: boolean\r\n  favoritePairs: SuggestionPairData[]\r\n  suggestedPairs: SuggestionPairData[]\r\n  isSearch: boolean\r\n  onSelectPair: (item: SuggestionPairData) => void\r\n  onClickStar: (item: SuggestionPairData) => void\r\n}) {\r\n  const theme = useTheme()\r\n  const { account } = useActiveWeb3React()\r\n  const isShowNotfound = isSearch && !suggestedPairs.length && !favoritePairs.length\r\n  const isShowNotfoundFavoritePair = !favoritePairs.length && !isSearch\r\n\r\n  return isShowListPair ? (\r\n    <MenuFlyout showList={isShowListPair} tabIndex={0} className=\"no-blur\" hasShadow={hasShadow}>\r\n      {isShowNotfound && (\r\n        <TextWithIcon\r\n          color={theme.subText}\r\n          text={t`We could not find anything. Try again.`}\r\n          icon={<AlertTriangle color={theme.subText} size={17} />}\r\n        />\r\n      )}\r\n      {account && (\r\n        <>\r\n          {!isSearch && (\r\n            <Container>\r\n              <Title>\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Trans>Favourites</Trans>\r\n                  <div>\r\n                    {favoritePairs.length}/{MAX_FAVORITE_PAIRS}\r\n                  </div>\r\n                </Flex>\r\n              </Title>\r\n            </Container>\r\n          )}\r\n          {isShowNotfoundFavoritePair && (\r\n            <TextWithIcon\r\n              color={theme.subText}\r\n              icon={<Star color={theme.subText} size={20} fill={theme.subText} />}\r\n              text={t`Your favourite pairs will appear here`}\r\n            />\r\n          )}\r\n          {favoritePairs.map((item, i) => (\r\n            <PairSuggestionItem\r\n              onSelectPair={() => onSelectPair(item)}\r\n              onClickStar={() => onClickStar(item)}\r\n              amount={suggestedAmount}\r\n              isActive={selectedIndex === i}\r\n              data={item}\r\n              isFavorite\r\n              key={item.tokenIn + item.tokenOut}\r\n              isFullFavoritePair={isFullFavoritePair}\r\n            />\r\n          ))}\r\n          {!isSearch && <Break />}\r\n        </>\r\n      )}\r\n      {suggestedPairs.length > 0 && (\r\n        <>\r\n          {!isSearch && (\r\n            <Container>\r\n              <Title>\r\n                <Trans>Top traded pairs</Trans>\r\n              </Title>\r\n            </Container>\r\n          )}\r\n          {suggestedPairs.map((item, i) => (\r\n            <PairSuggestionItem\r\n              onSelectPair={() => onSelectPair(item)}\r\n              onClickStar={() => onClickStar(item)}\r\n              amount={suggestedAmount}\r\n              isActive={selectedIndex === favoritePairs.length + i}\r\n              data={item}\r\n              key={item.tokenIn + item.tokenOut}\r\n              isFavorite={isFavoritePair(favoritePairs, item)}\r\n              isFullFavoritePair={isFullFavoritePair}\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n      <Break />\r\n      <TextWithIcon color={theme.subText} text={t`Try typing \"10 ETH to KNC\"`} />\r\n    </MenuFlyout>\r\n  ) : null\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport React, { RefObject, forwardRef } from 'react'\r\nimport { BrowserView, isMacOs, isMobile } from 'react-device-detect'\r\nimport { Command, Search } from 'react-feather'\r\nimport { Flex } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\n\r\nconst SearchWrapper = styled.div<{ showList: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  position: relative;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  background-color: ${({ theme, showList }) => (showList ? theme.tabActive : theme.background)};\r\n  height: 45px;\r\n`\r\nconst SearchInput = styled.input<{ hasBorder?: boolean }>`\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.border};\r\n  }\r\n  transition: border 100ms;\r\n  color: ${({ theme }) => theme.text};\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  padding: 16px;\r\n  padding-left: 35px;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  ${({ theme, hasBorder }) =>\r\n    hasBorder\r\n      ? css`\r\n          border-radius: 20px;\r\n          border: 1px solid ${theme.primary};\r\n        `\r\n      : css`\r\n          border: none;\r\n        `};\r\n`\r\n\r\nconst DisabledFrame = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n`\r\n\r\nconst SearchIcon = styled(Search)<{ $showList: boolean }>`\r\n  position: absolute;\r\n  left: 10px;\r\n  color: ${({ theme, $showList }) => ($showList ? theme.subText : theme.border)};\r\n  font-size: 14px;\r\n`\r\nconst InputIcon = styled.div`\r\n  background: ${({ theme }) => theme.buttonBlack};\r\n  padding: 3px 8px;\r\n  margin-right: 10px;\r\n  border-radius: 22px;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.subText};\r\n  cursor: pointer;\r\n`\r\n\r\ntype Props = {\r\n  value: string\r\n  isShowListPair: boolean\r\n  disabled?: boolean\r\n  ref: RefObject<HTMLInputElement>\r\n  hasBorder?: boolean\r\n  showListView: () => void\r\n  hideListView: () => void\r\n  onChangeInput: (value: string) => void\r\n  onKeyPressInput: (e: React.KeyboardEvent) => void\r\n}\r\n\r\nexport default forwardRef<HTMLInputElement, Props>(function SearchComponent(\r\n  { isShowListPair, hasBorder, disabled, value, onChangeInput, onKeyPressInput, showListView, hideListView },\r\n  ref,\r\n) {\r\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const { value } = event.currentTarget\r\n    onChangeInput(value)\r\n  }\r\n\r\n  const onBlurInput = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    if (isMobile) return\r\n    const relate = e.relatedTarget as HTMLDivElement\r\n    if (relate && relate.classList.contains('no-blur')) {\r\n      return // press star / import icon\r\n    }\r\n    hideListView()\r\n  }\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const showListViewWithTracking = () => {\r\n    showListView()\r\n    mixpanelHandler(MIXPANEL_TYPE.TAS_PRESS_CTRL_K, 'mouse click')\r\n  }\r\n\r\n  return (\r\n    <SearchWrapper showList={isShowListPair}>\r\n      <SearchIcon size={18} $showList={isShowListPair} />\r\n      <SearchInput\r\n        ref={ref}\r\n        hasBorder={hasBorder}\r\n        onBlur={onBlurInput}\r\n        onFocus={disabled ? undefined : showListViewWithTracking}\r\n        placeholder={t`\"Search\"`}\r\n        value={value}\r\n        onChange={onChange}\r\n        autoComplete=\"off\"\r\n        onKeyDown={onKeyPressInput}\r\n      />\r\n      {disabled && <DisabledFrame onClick={showListViewWithTracking} />}\r\n      <BrowserView>\r\n        {isShowListPair ? (\r\n          <InputIcon onClick={hideListView} key={1}>\r\n            Esc\r\n          </InputIcon>\r\n        ) : (\r\n          <InputIcon onClick={showListView} key={2}>\r\n            <Flex>\r\n              {isMacOs ? (\r\n                <>\r\n                  <Command size={13} /> <span style={{ marginLeft: 3 }}>K</span>\r\n                </>\r\n              ) : (\r\n                <span style={{ whiteSpace: 'nowrap' }}>Ctrl+K</span>\r\n              )}\r\n            </Flex>\r\n          </InputIcon>\r\n        )}\r\n      </BrowserView>\r\n    </SearchWrapper>\r\n  )\r\n})\r\n","import { ChainId } from '@kyberswap/ks-sdk-core'\r\nimport Axios from 'axios'\r\n\r\nimport { TYPE_AND_SWAP_URL } from 'constants/env'\r\n\r\nconst formatData = (obj: any) => {\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] === undefined || obj[key] === '') {\r\n      delete obj[key]\r\n    }\r\n  })\r\n  return obj\r\n}\r\n\r\nexport type SuggestionPairData = {\r\n  tokenIn: string\r\n  tokenInSymbol: string\r\n  tokenInImgUrl: string\r\n  tokenOut: string\r\n  tokenOutSymbol: string\r\n  tokenOutImgUrl: string\r\n  tokenInName: string\r\n  tokenOutName: string\r\n}\r\n\r\nexport function reqGetSuggestionPair(\r\n  chainId: ChainId | undefined,\r\n  wallet: string | null | undefined,\r\n  query: string,\r\n): Promise<{ favoritePairs: SuggestionPairData[]; recommendedPairs: SuggestionPairData[]; amount: string }> {\r\n  return Axios.get(`${TYPE_AND_SWAP_URL}/v1/suggested-pairs`, { params: formatData({ chainId, query, wallet }) }).then(\r\n    ({ data }) => data.data,\r\n  )\r\n}\r\n\r\nexport function reqRemoveFavoritePair(\r\n  item: SuggestionPairData,\r\n  wallet: string | null | undefined,\r\n  chainId: ChainId | undefined,\r\n): Promise<any> {\r\n  return Axios.delete(`${TYPE_AND_SWAP_URL}/v1/favorite-pairs`, {\r\n    data: { wallet, chainId: chainId + '', tokenIn: item.tokenIn, tokenOut: item.tokenOut },\r\n  })\r\n}\r\n\r\nexport function reqAddFavoritePair(\r\n  item: SuggestionPairData,\r\n  wallet: string | null | undefined,\r\n  chainId: ChainId | undefined,\r\n): Promise<any> {\r\n  return Axios.post(`${TYPE_AND_SWAP_URL}/v1/favorite-pairs`, {\r\n    wallet,\r\n    chainId: chainId + '',\r\n    tokenIn: item.tokenIn,\r\n    tokenOut: item.tokenOut,\r\n  })\r\n}\r\n","import { Currency, NativeCurrency, Token } from '@kyberswap/ks-sdk-core'\r\nimport { t } from '@lingui/macro'\r\nimport { debounce } from 'lodash'\r\nimport { stringify } from 'querystring'\r\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react'\r\nimport { BrowserView, MobileView, isIOS, isMobile } from 'react-device-detect'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport Modal from 'components/Modal'\r\nimport { ETHER_ADDRESS } from 'constants/index'\r\nimport { NativeCurrencies } from 'constants/tokens'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { NotificationType, useNotify } from 'state/application/hooks'\r\nimport { filterTokens } from 'utils/filtering'\r\n\r\nimport ListPair from './ListPair'\r\nimport SearchInput from './SearchInput'\r\nimport { SuggestionPairData, reqAddFavoritePair, reqGetSuggestionPair, reqRemoveFavoritePair } from './request'\r\nimport { findLogoAndSortPair, getAddressParam, isActivePair, isFavoritePair } from './utils'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst WrapperPopup = styled(Wrapper)`\r\n  height: 75vh;\r\n  background-color: ${({ theme }) => theme.tabActive};\r\n`\r\n\r\nexport const Container = styled.div`\r\n  padding-left: 1em;\r\n  padding-right: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 1em;\r\n`\r\n\r\nexport const MAX_FAVORITE_PAIRS = 3\r\n\r\ntype Props = {\r\n  onSelectSuggestedPair: (fromToken: Currency | undefined, toToken: Currency | undefined, amount: string) => void\r\n  setShowModalImportToken: (val: boolean) => void\r\n}\r\n\r\nexport type PairSuggestionHandle = {\r\n  onConfirmImportToken: () => void\r\n}\r\n\r\nexport default forwardRef<PairSuggestionHandle, Props>(function PairSuggestionInput(\r\n  { onSelectSuggestedPair, setShowModalImportToken },\r\n  ref,\r\n) {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(0) // index selected when press up/down arrow\r\n  const [isShowListPair, setIsShowListPair] = useState(false)\r\n\r\n  const [suggestedPairs, setSuggestions] = useState<SuggestionPairData[]>([])\r\n  const [favoritePairs, setListFavorite] = useState<SuggestionPairData[]>([])\r\n\r\n  const [suggestedAmount, setSuggestedAmount] = useState<string>('')\r\n  const [totalFavoritePair, setTotalFavoritePair] = useState(0) // to save actual total suggestedPairs because when searching, suggestedPairs being filter\r\n\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const qs = useParsedQueryString()\r\n  const history = useHistory()\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const refLoading = useRef(false) // prevent spam call api\r\n  const refInput = useRef<HTMLInputElement>(null)\r\n\r\n  const activeTokens = useAllTokens(true)\r\n\r\n  const findToken = (search: string): NativeCurrency | Token | undefined => {\r\n    if (search.toLowerCase() === ETHER_ADDRESS.toLowerCase()) {\r\n      return NativeCurrencies[chainId]\r\n    }\r\n    return filterTokens(chainId, Object.values(activeTokens), search)[0]\r\n  }\r\n\r\n  const focusInput = useCallback(() => {\r\n    const input = refInput.current\r\n    if (!input) return\r\n    input.focus()\r\n    if (isIOS) input?.setSelectionRange(searchQuery.length, searchQuery.length) // fix focus input cursor at front (ios)\r\n  }, [searchQuery])\r\n\r\n  const refKeywordSearching = useRef('')\r\n  const searchSuggestionPair = useCallback(\r\n    (keyword = '') => {\r\n      refKeywordSearching.current = keyword\r\n      reqGetSuggestionPair(chainId, account, keyword)\r\n        .then(({ recommendedPairs = [], favoritePairs = [], amount }) => {\r\n          // make sure same query when typing too fast\r\n          if (refKeywordSearching.current === keyword) {\r\n            setSuggestions(findLogoAndSortPair(activeTokens, recommendedPairs, chainId))\r\n            setListFavorite(findLogoAndSortPair(activeTokens, favoritePairs, chainId))\r\n            setSuggestedAmount(amount || '')\r\n            if (!keyword) setTotalFavoritePair(favoritePairs.length)\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n          setSuggestions([])\r\n          setListFavorite([])\r\n        })\r\n      keyword && mixpanelHandler(MIXPANEL_TYPE.TAS_TYPING_KEYWORD, keyword)\r\n    },\r\n    [account, chainId, mixpanelHandler, activeTokens],\r\n  )\r\n\r\n  const searchDebounce = useMemo(() => debounce(searchSuggestionPair, 100), [searchSuggestionPair])\r\n  const notify = useNotify()\r\n  const addToFavorite = (item: SuggestionPairData) => {\r\n    focusInput()\r\n    if (refLoading.current) return // prevent spam api\r\n    if (totalFavoritePair === MAX_FAVORITE_PAIRS && isMobile) {\r\n      // PC we already has tool tip\r\n      notify({\r\n        title: t`You can only favorite up to three token pairs.`,\r\n        type: NotificationType.WARNING,\r\n      })\r\n      return\r\n    }\r\n    refLoading.current = true\r\n    reqAddFavoritePair(item, account, chainId)\r\n      .then(() => {\r\n        searchSuggestionPair(searchQuery)\r\n        setTotalFavoritePair(prev => prev + 1)\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => {\r\n        refLoading.current = false\r\n      })\r\n    mixpanelHandler(MIXPANEL_TYPE.TAS_LIKE_PAIR, { token_1: item.tokenInSymbol, token_2: item.tokenOutSymbol })\r\n  }\r\n\r\n  const removeFavorite = (item: SuggestionPairData) => {\r\n    focusInput()\r\n    if (refLoading.current) return // prevent spam api\r\n    refLoading.current = true\r\n    reqRemoveFavoritePair(item, account, chainId)\r\n      .then(() => {\r\n        searchSuggestionPair(searchQuery)\r\n        setTotalFavoritePair(prev => prev - 1)\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => {\r\n        refLoading.current = false\r\n      })\r\n    mixpanelHandler(MIXPANEL_TYPE.TAS_DISLIKE_PAIR, { token_1: item.tokenInSymbol, token_2: item.tokenOutSymbol })\r\n  }\r\n\r\n  const onClickStar = (item: SuggestionPairData) => {\r\n    if (isFavoritePair(favoritePairs, item)) {\r\n      removeFavorite(item)\r\n    } else {\r\n      addToFavorite(item)\r\n    }\r\n  }\r\n\r\n  const hideListView = () => {\r\n    setIsShowListPair(false)\r\n    setSelectedIndex(0)\r\n    refInput.current?.blur()\r\n  }\r\n  const showListView = useCallback(() => {\r\n    setIsShowListPair(true)\r\n    focusInput()\r\n  }, [focusInput])\r\n\r\n  useEffect(() => {\r\n    function onKeydown(e: KeyboardEvent) {\r\n      if (e.key === 'k' && (e.metaKey || e.ctrlKey)) {\r\n        // cmd+k or ctrl+k\r\n        e.preventDefault()\r\n        showListView()\r\n        mixpanelHandler(MIXPANEL_TYPE.TAS_PRESS_CTRL_K, 'keyboard hotkey')\r\n      }\r\n    }\r\n    window.addEventListener('keydown', onKeydown)\r\n    return () => {\r\n      window.removeEventListener('keydown', onKeydown)\r\n    }\r\n  }, [showListView, mixpanelHandler])\r\n\r\n  useEffect(() => {\r\n    if (isShowListPair) {\r\n      searchDebounce(searchQuery)\r\n    }\r\n  }, [isShowListPair, searchQuery, searchDebounce])\r\n\r\n  useEffect(() => {\r\n    setSearchQuery('')\r\n  }, [chainId])\r\n\r\n  const onChangeInput = (value: string) => {\r\n    setSearchQuery(value)\r\n    searchDebounce(value)\r\n  }\r\n\r\n  const onSelectPair = (item: SuggestionPairData) => {\r\n    mixpanelHandler(MIXPANEL_TYPE.TAS_SELECT_PAIR, `${item.tokenIn} to ${item.tokenOut}`)\r\n    if (!isActivePair(activeTokens, item)) {\r\n      // show import modal\r\n      const newQs = {\r\n        ...qs,\r\n        inputCurrency: getAddressParam(item.tokenIn, chainId),\r\n        outputCurrency: getAddressParam(item.tokenOut, chainId),\r\n      }\r\n      history.push({\r\n        search: stringify(newQs),\r\n      })\r\n      setShowModalImportToken(true)\r\n      refInput.current?.blur()\r\n      return\r\n    }\r\n    // select pair fill input swap form\r\n    const fromToken = findToken(item.tokenIn)\r\n    const toToken = findToken(item.tokenOut)\r\n    onSelectSuggestedPair(fromToken, toToken, suggestedAmount)\r\n    hideListView()\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onConfirmImportToken() {\r\n      setIsShowListPair(false)\r\n      if (suggestedAmount) {\r\n        onSelectSuggestedPair(undefined, undefined, suggestedAmount) // fill input amount\r\n      }\r\n    },\r\n  }))\r\n\r\n  const onKeyPressInput = (e: React.KeyboardEvent) => {\r\n    const lastIndex = suggestedPairs.length + favoritePairs.length - 1\r\n    switch (e.key) {\r\n      case 'ArrowDown':\r\n        if (selectedIndex < lastIndex) {\r\n          setSelectedIndex(prev => prev + 1)\r\n        } else setSelectedIndex(0)\r\n        break\r\n      case 'ArrowUp':\r\n        if (selectedIndex > 0) {\r\n          setSelectedIndex(prev => prev - 1)\r\n        } else setSelectedIndex(lastIndex)\r\n        break\r\n      case 'Escape':\r\n        hideListView()\r\n        break\r\n      case 'Enter':\r\n        const selectedPair = favoritePairs.concat(suggestedPairs)[selectedIndex]\r\n        onSelectPair(selectedPair)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const propsListPair = {\r\n    suggestedAmount,\r\n    selectedIndex,\r\n    isSearch: !!searchQuery,\r\n    isShowListPair,\r\n    suggestedPairs,\r\n    favoritePairs,\r\n    isFullFavoritePair: totalFavoritePair === MAX_FAVORITE_PAIRS,\r\n    onClickStar,\r\n    onSelectPair,\r\n  }\r\n\r\n  const propsSearch = {\r\n    isShowListPair,\r\n    value: searchQuery,\r\n    showListView,\r\n    hideListView,\r\n    onChangeInput,\r\n    onKeyPressInput,\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SearchInput ref={refInput} {...propsSearch} disabled={isMobile} />\r\n      <BrowserView>\r\n        <ListPair {...propsListPair} hasShadow />\r\n      </BrowserView>\r\n      <MobileView>\r\n        <Modal isOpen={isShowListPair} onDismiss={hideListView} enableInitialFocusInput={true}>\r\n          <WrapperPopup>\r\n            <Container style={{ paddingTop: 20 }}>\r\n              <SearchInput ref={refInput} hasBorder {...propsSearch} />\r\n            </Container>\r\n            <ListPair {...propsListPair} />\r\n          </WrapperPopup>\r\n        </Modal>\r\n      </MobileView>\r\n    </Wrapper>\r\n  )\r\n})\r\n","import React, { useEffect, useMemo, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { AGGREGATOR_WAITING_TIME, TIME_TO_REFRESH_SWAP_RATE } from 'constants/index'\r\nimport { Aggregator } from 'utils/aggregator'\r\n\r\nimport { IconButton } from './styleds'\r\n\r\nconst ArrowLocatorLoading = React.forwardRef<any, any>((props, ref) => {\r\n  return (\r\n    <svg\r\n      ref={ref}\r\n      id=\"arrow_loading\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"2 2 20 20\"\r\n      className=\"arrow-loading\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      {...props}\r\n    >\r\n      <path\r\n        stroke=\"none\"\r\n        fill=\"none\"\r\n        d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\r\n        className=\"background-path\"\r\n      />\r\n      <defs>\r\n        <path\r\n          id=\"arrow\"\r\n          stroke=\"none\"\r\n          fill=\"none\"\r\n          d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\r\n        />\r\n        <clipPath id=\"arrow-clip\">\r\n          <use xlinkHref=\"#arrow\" />\r\n        </clipPath>\r\n      </defs>\r\n      <g clipPath=\"url(#arrow-clip)\">\r\n        <circle\r\n          cx=\"12\"\r\n          cy=\"12\"\r\n          r=\"5\"\r\n          transform=\"rotate(365,12,12)\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"16\"\r\n          strokeDasharray=\"30\"\r\n          strokeDashoffset=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"stroke-dashoffset\"\r\n            values=\"0;-30\"\r\n            begin={props.enable_click_to_refresh ? 'arrow_loading.click; 0.7s' : '0s'}\r\n            repeatCount=\"indefinite\"\r\n            dur={`${TIME_TO_REFRESH_SWAP_RATE}s`}\r\n          />\r\n        </circle>\r\n      </g>\r\n      <use xlinkHref=\"#arrow\" />\r\n      <animateTransform\r\n        id=\"transform_0\"\r\n        attributeName=\"transform\"\r\n        attributeType=\"XML\"\r\n        type=\"rotate\"\r\n        from=\"0 0 0\"\r\n        to=\"-10 0 0\"\r\n        dur=\"0.07s\"\r\n        begin={props.enable_click_to_refresh ? 'arrow_loading.click;' : 'transform_0.start'}\r\n        repeatCount=\"1\"\r\n      />\r\n      <animateTransform\r\n        id=\"transform_1\"\r\n        attributeName=\"transform\"\r\n        attributeType=\"XML\"\r\n        type=\"rotate\"\r\n        from=\"-45 0 0\"\r\n        to=\"390 0 0\"\r\n        dur=\"0.6s\"\r\n        begin=\"transform_0.end\"\r\n        repeatCount=\"1\"\r\n      />\r\n      <animateTransform\r\n        id=\"transform_2\"\r\n        attributeName=\"transform\"\r\n        attributeType=\"XML\"\r\n        type=\"rotate\"\r\n        from=\"390 0 0\"\r\n        to=\"360 0 0\"\r\n        dur=\"0.15s\"\r\n        begin=\"transform_1.end\"\r\n        repeatCount=\"1\"\r\n      />\r\n    </svg>\r\n  )\r\n})\r\n\r\nArrowLocatorLoading.displayName = 'ArrowLocatorLoading'\r\n\r\nconst StyledArrowLocatorLoading = styled(ArrowLocatorLoading)<{ enable_click_to_refresh: number }>`\r\n  color: ${({ theme }) => theme.subText};\r\n  .background-path {\r\n    fill: ${({ theme }) => theme.disableText};\r\n  }\r\n`\r\n\r\ninterface RefreshButtonProps {\r\n  isConfirming?: boolean\r\n  trade?: Aggregator\r\n  onRefresh: (resetRoute: boolean, minimumLoadingTime: number) => void\r\n}\r\n\r\nexport default function RefreshButton({ isConfirming, trade, onRefresh }: RefreshButtonProps) {\r\n  const svgLoadingRef = useRef<SVGSVGElement>(null)\r\n\r\n  const hasOutput = useMemo((): boolean => {\r\n    return !!trade?.outputAmount\r\n  }, [trade])\r\n\r\n  useEffect(() => {\r\n    let interval: any\r\n    if (svgLoadingRef?.current) {\r\n      if (!isConfirming && hasOutput) {\r\n        // reset svg animate duration to 0 and UNPAUSE animations\r\n        svgLoadingRef.current.setCurrentTime(0)\r\n        svgLoadingRef.current.unpauseAnimations()\r\n        interval = setInterval(() => onRefresh(false, AGGREGATOR_WAITING_TIME), TIME_TO_REFRESH_SWAP_RATE * 1000)\r\n      } else {\r\n        interval && clearInterval(interval)\r\n        // reset svg animate duration to 0 and PAUSE animations\r\n        svgLoadingRef.current.setCurrentTime(0)\r\n        svgLoadingRef.current.pauseAnimations()\r\n      }\r\n    }\r\n    return () => {\r\n      interval && clearInterval(interval)\r\n    }\r\n  }, [hasOutput, isConfirming, onRefresh])\r\n\r\n  const enableClickToRefresh = false\r\n\r\n  return (\r\n    <IconButton\r\n      enableClickToRefresh={enableClickToRefresh}\r\n      onClick={() => enableClickToRefresh && onRefresh(false, AGGREGATOR_WAITING_TIME)}\r\n    >\r\n      <StyledArrowLocatorLoading enable_click_to_refresh={enableClickToRefresh ? 1 : 0} ref={svgLoadingRef} />\r\n    </IconButton>\r\n  )\r\n}\r\n","import { Trans, t } from '@lingui/macro'\r\nimport { useState } from 'react'\r\nimport { Flex } from 'rebass'\r\n\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport Toggle from 'components/Toggle'\r\nimport AdvanceModeModal from 'components/TransactionSettings/AdvanceModeModal'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\n\r\nconst AdvancedModeSetting = () => {\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [showConfirmation, setShowConfirmation] = useState(false)\r\n\r\n  const handleToggleAdvancedMode = () => {\r\n    if (expertMode /* is already ON */) {\r\n      toggleExpertMode()\r\n      setShowConfirmation(false)\r\n      return\r\n    }\r\n\r\n    // need confirmation before turning it on\r\n    setShowConfirmation(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Flex width=\"fit-content\" alignItems=\"center\">\r\n          <span className=\"settingLabel\">\r\n            <Trans>Advanced Mode</Trans>\r\n          </span>\r\n          <QuestionHelper\r\n            text={t`You can make trades with high price impact and without any confirmation prompts. Enable at your own risk`}\r\n          />\r\n        </Flex>\r\n        <Toggle id=\"toggle-expert-mode-button\" isActive={expertMode} toggle={handleToggleAdvancedMode} />\r\n      </Flex>\r\n\r\n      <AdvanceModeModal show={showConfirmation} setShow={setShowConfirmation} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdvancedModeSetting\r\n","import { Trans } from '@lingui/macro'\r\nimport React from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { ChevronRight } from 'react-feather'\r\nimport styled from 'styled-components'\r\n\r\nimport useGasPriceFromDeBank, { GasLevel } from 'hooks/useGasPriceFromDeBank'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ntype Props = {\r\n  onClick: () => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n`\r\n\r\nconst SettingLabel = styled.span`\r\n  font-size: ${isMobile ? '14px' : '12px'};\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n`\r\n\r\nconst Group = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Separator = styled.span`\r\n  margin-left: 4px;\r\n  margin-right: 4px;\r\n`\r\n\r\nconst PriceInWei = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: ${isMobile ? '14px' : '12px'};\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n`\r\n\r\nconst PriceInUSD = styled.span`\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: ${isMobile ? '14px' : '12px'};\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n`\r\n\r\nconst getPriceInGweiText = (value: number | undefined) => {\r\n  return value ? `${value} gwei` : '-'\r\n}\r\n\r\nconst getPriceInUSDText = (value: string | undefined) => {\r\n  return value ? `$${value}` : '-'\r\n}\r\n\r\nconst GasPriceTrackerSetting: React.FC<Props> = ({ onClick }) => {\r\n  const data = useGasPriceFromDeBank()\r\n  const theme = useTheme()\r\n\r\n  if (!data) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container onClick={onClick}>\r\n      <SettingLabel>\r\n        <Trans>Gas Price Tracker</Trans>\r\n      </SettingLabel>\r\n\r\n      <Group>\r\n        <PriceInWei>{getPriceInGweiText(data[GasLevel.NORMAL].gasPriceInGwei)}</PriceInWei>\r\n        <Separator>|</Separator>\r\n        <PriceInUSD>{getPriceInUSDText(data[GasLevel.NORMAL].minimumTxFeeInUSD)}</PriceInUSD>\r\n        <ChevronRight size={20} color={theme.subText} />\r\n      </Group>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GasPriceTrackerSetting\r\n","import { Trans, t } from '@lingui/macro'\r\nimport React from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { ChevronRight } from 'react-feather'\r\nimport { Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useAllDexes, useExcludeDexes } from 'state/customizeDexes/hooks'\r\n\r\ntype Props = {\r\n  onClick: () => void\r\n}\r\n\r\nconst SettingLabel = styled.span`\r\n  font-size: ${isMobile ? '14px' : '12px'};\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n`\r\n\r\nconst Group = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: ${isMobile ? '14px' : '12px'};\r\n`\r\n\r\nconst NumberOfSources = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n`\r\n\r\nconst LiquiditySourcesSetting: React.FC<Props> = ({ onClick }) => {\r\n  const theme = useTheme()\r\n\r\n  const allDexes = useAllDexes()\r\n  const [excludeDexes] = useExcludeDexes()\r\n\r\n  if (!allDexes?.length) {\r\n    return null\r\n  }\r\n\r\n  const numberOfDEXes = allDexes?.length\r\n  const selectedDexes = allDexes.filter(item => !excludeDexes.includes(item.id))\r\n\r\n  return (\r\n    <Flex\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Group>\r\n        <SettingLabel>\r\n          <Trans>Liquidity Sources</Trans>\r\n        </SettingLabel>\r\n        <QuestionHelper text={t`Your trade is routed through one or more of these liquidity sources`} />\r\n      </Group>\r\n\r\n      <Group>\r\n        <NumberOfSources>\r\n          {selectedDexes.length || numberOfDEXes} out of {numberOfDEXes} selected\r\n        </NumberOfSources>\r\n        <ChevronRight size={20} color={theme.subText} />\r\n      </Group>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default LiquiditySourcesSetting\r\n","import { Trans, t } from '@lingui/macro'\r\nimport React, { useRef, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { MAX_SLIPPAGE_IN_BIPS } from 'constants/index'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\n\r\nconst DefaultSlippages = [5, 10, 50, 100]\r\n\r\nconst parseSlippageInput = (str: string): number => Math.round(Number.parseFloat(str) * 100)\r\n\r\n// isValid = true means it's OK to process with the number with an extra parse\r\n// isValid = true with message means warning\r\n// isValid = false with/without message means error\r\nconst validateSlippageInput = (str: string): { isValid: boolean; message?: string } => {\r\n  if (str === '') {\r\n    return {\r\n      isValid: true,\r\n    }\r\n  }\r\n\r\n  const numberRegex = /^\\s*([0-9]+)(\\.\\d+)?\\s*$/\r\n  if (!str.match(numberRegex)) {\r\n    return {\r\n      isValid: false,\r\n      message: t`Enter a valid slippage percentage`,\r\n    }\r\n  }\r\n\r\n  const rawSlippage = parseSlippageInput(str)\r\n  if (Number.isNaN(rawSlippage)) {\r\n    return {\r\n      isValid: false,\r\n      message: t`Enter a valid slippage percentage`,\r\n    }\r\n  }\r\n\r\n  if (rawSlippage < 0) {\r\n    return {\r\n      isValid: false,\r\n      message: t`Enter a valid slippage percentage`,\r\n    }\r\n  } else if (rawSlippage < 50) {\r\n    return {\r\n      isValid: true,\r\n      message: t`Your transaction may fail`,\r\n    }\r\n  } else if (rawSlippage > MAX_SLIPPAGE_IN_BIPS) {\r\n    return {\r\n      isValid: false,\r\n      message: t`Enter a smaller slippage percentage`,\r\n    }\r\n  } else if (rawSlippage > 500) {\r\n    return {\r\n      isValid: true,\r\n      message: t`Your transaction may be frontrun`,\r\n    }\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n  }\r\n}\r\n\r\nconst EmojiContainer = styled.span`\r\n  flex: 0 0 12px;\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n        display: none;\r\n  `}\r\n`\r\n\r\nconst SlippageOptionCSS = css`\r\n  flex: 0 0 24%;\r\n  height: 100%;\r\n  padding: 0;\r\n  border: 1px solid transparent;\r\n  border-radius: 20px;\r\n\r\n  background-color: ${({ theme }) => theme.tabBackgound};\r\n  color: ${({ theme }) => theme.subText};\r\n  text-align: center;\r\n\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    border: 1px solid ${({ theme }) => theme.bg4};\r\n  }\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  &[data-active='true'] {\r\n    background-color: ${({ theme }) => theme.tabActive};\r\n    color: ${({ theme }) => theme.text};\r\n\r\n    font-weight: 500;\r\n  }\r\n`\r\nconst DefaultSlippageOption = styled.button`\r\n  ${SlippageOptionCSS}\r\n  flex: 0 0 18%;\r\n  @media only screen and (max-width: 375px) {\r\n    font-size: 10px;\r\n    flex: 0 0 15%;\r\n  }\r\n`\r\n\r\nconst CustomSlippageOption = styled.div`\r\n  ${SlippageOptionCSS}\r\n\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 0 4px;\r\n  column-gap: 2px;\r\n  flex: 1;\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0px;\r\n    border-radius: inherit;\r\n\r\n    color: inherit;\r\n    background: transparent;\r\n    outline: none;\r\n    text-align: right;\r\n\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n    }\r\n  }\r\n\r\n  &[data-active='true'] {\r\n    color: ${({ theme }) => theme.text};\r\n    font-weight: 500;\r\n  }\r\n\r\n  &[data-warning='true'] {\r\n    border: 1px solid;\r\n    border-color: ${({ theme }) => theme.warning};\r\n\r\n    ${EmojiContainer} {\r\n      color: ${({ theme }) => theme.warning};\r\n    }\r\n  }\r\n\r\n  &[data-error='true'] {\r\n    border: 1px solid;\r\n    border-color: ${({ theme }) => theme.red1};\r\n  }\r\n`\r\n\r\nconst Message = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n\r\n  &[data-warning='true'] {\r\n    color: ${({ theme }) => theme.warning};\r\n  }\r\n\r\n  &[data-error='true'] {\r\n    color: ${({ theme }) => theme.red1};\r\n  }\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n  ::placeholder {\r\n    font-size: 12px;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    font-size: 10px;\r\n  }\r\n`\r\nconst SlippageSetting: React.FC = () => {\r\n  const theme = useTheme()\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  // rawSlippage = 10\r\n  // slippage = 10 / 10_000 = 0.001 = 0.1%\r\n  const [rawSlippage, setRawSlippage] = useUserSlippageTolerance()\r\n\r\n  const isCustomOptionActive = !DefaultSlippages.includes(rawSlippage)\r\n  const [slippageInput, setSlippageInput] = useState(isCustomOptionActive ? (rawSlippage / 100).toFixed(2) : '')\r\n  const { isValid, message } = validateSlippageInput(slippageInput || String(rawSlippage / 100))\r\n\r\n  const isWarning = isValid && !!message\r\n  const isError = !isValid\r\n  const { mixpanelHandler } = useMixpanel()\r\n  const handleCommitChange = () => {\r\n    if (!isValid || slippageInput === '') {\r\n      return\r\n    }\r\n\r\n    const newRawSlippage = parseSlippageInput(slippageInput)\r\n    if (Number.isNaN(newRawSlippage)) {\r\n      return\r\n    }\r\n    mixpanelHandler(MIXPANEL_TYPE.SLIPPAGE_CHANGED, { new_slippage: newRawSlippage / 100 })\r\n\r\n    setRawSlippage(newRawSlippage)\r\n  }\r\n\r\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleCommitChange()\r\n      inputRef.current?.blur()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        flexDirection: 'column',\r\n        rowGap: '8px',\r\n      }}\r\n    >\r\n      <Flex\r\n        sx={{\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Text\r\n          sx={{\r\n            fontSize: isMobile ? '14px' : '12px',\r\n            color: theme.text,\r\n            fontWeight: 400,\r\n            lineHeight: '16px',\r\n          }}\r\n        >\r\n          <Trans>Max Slippage</Trans>\r\n        </Text>\r\n        <QuestionHelper\r\n          text={t`Transaction will revert if there is an adverse rate change that is higher than this %`}\r\n        />\r\n      </Flex>\r\n\r\n      <Flex\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          width: '100%',\r\n          maxWidth: '100%',\r\n          height: '28px',\r\n          borderRadius: '20px',\r\n          background: theme.tabBackgound,\r\n          padding: '2px',\r\n        }}\r\n      >\r\n        {DefaultSlippages.map(slp => (\r\n          <DefaultSlippageOption\r\n            key={slp}\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setRawSlippage(slp)\r\n              mixpanelHandler(MIXPANEL_TYPE.SLIPPAGE_CHANGED, { new_slippage: slp / 100 })\r\n            }}\r\n            data-active={rawSlippage === slp}\r\n          >\r\n            {slp / 100}%\r\n          </DefaultSlippageOption>\r\n        ))}\r\n\r\n        <CustomSlippageOption\r\n          data-active={isCustomOptionActive}\r\n          data-warning={isCustomOptionActive && isWarning}\r\n          data-error={isCustomOptionActive && isError}\r\n        >\r\n          {isCustomOptionActive && isWarning && (\r\n            <EmojiContainer>\r\n              <span role=\"img\" aria-label=\"warning\">\r\n                ⚠️\r\n              </span>\r\n            </EmojiContainer>\r\n          )}\r\n          <CustomInput\r\n            ref={inputRef}\r\n            placeholder={t`Custom`}\r\n            value={slippageInput}\r\n            onChange={e => setSlippageInput(e.target.value)}\r\n            onBlur={handleCommitChange}\r\n            onKeyUp={handleKeyUp}\r\n          />\r\n          <Text\r\n            as=\"span\"\r\n            sx={{\r\n              flex: '0 0 12px',\r\n            }}\r\n          >\r\n            %\r\n          </Text>\r\n        </CustomSlippageOption>\r\n      </Flex>\r\n\r\n      {!!message && (\r\n        <Message data-warning={isWarning} data-error={isError}>\r\n          {message}\r\n        </Message>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SlippageSetting\r\n","import { Trans, t } from '@lingui/macro'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useUserTransactionTTL } from 'state/user/hooks'\r\n\r\ntype Props = {\r\n  className?: string\r\n}\r\n\r\nconst validateDeadlineString = (str: string): boolean => {\r\n  const value = Number.parseInt(str, 10)\r\n\r\n  // must not be longer than 10000 (5 chars)\r\n  if (str.length > '10000'.length) {\r\n    return false\r\n  }\r\n\r\n  // must be an integer\r\n  if (Number.isNaN(value) || String(Math.floor(value)) !== str) {\r\n    return false\r\n  }\r\n\r\n  // must be in (0, 1000)\r\n  if (0 < value && value < 10000) {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nconst TransactionTimeLimitSetting: React.FC<Props> = ({ className }) => {\r\n  const theme = useTheme()\r\n\r\n  const [deadline /* in seconds */, setDeadline] = useUserTransactionTTL()\r\n  const [deadlineInput, setDeadlineInput] = useState(String(Math.floor(deadline / 60)))\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const isValid = validateDeadlineString(deadlineInput)\r\n\r\n  const handleCommitChange = () => {\r\n    if (!validateDeadlineString(deadlineInput)) {\r\n      return\r\n    }\r\n\r\n    const newDeadline /* in seconds */ = parseInt(deadlineInput, 10) * 60\r\n    setDeadline(newDeadline)\r\n  }\r\n\r\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleCommitChange()\r\n      inputRef.current?.blur()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDeadlineInput(String(Math.floor(deadline / 60)))\r\n  }, [deadline])\r\n\r\n  return (\r\n    <Flex justifyContent={'space-between'} alignItems=\"center\" className={className}>\r\n      <Flex alignItems=\"center\">\r\n        <Text\r\n          className=\"label\"\r\n          sx={{\r\n            fontSize: isMobile ? '14px' : '12px',\r\n            color: theme.text,\r\n            fontWeight: 400,\r\n            lineHeight: '16px',\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n        >\r\n          <Trans>Transaction time limit</Trans>\r\n        </Text>\r\n        <QuestionHelper text={t`Transaction will revert if it is pending for longer than the indicated time`} />\r\n      </Flex>\r\n\r\n      <Flex\r\n        sx={{\r\n          height: '28px',\r\n          fontWeight: 500,\r\n          fontSize: '12px',\r\n          lineHeight: '16px',\r\n          columnGap: '2px',\r\n          alignItems: 'center',\r\n          backgroundColor: theme.tabBackgound,\r\n          padding: '0 8px',\r\n          borderRadius: '40px',\r\n        }}\r\n      >\r\n        <Box width={60}>\r\n          <input\r\n            ref={inputRef}\r\n            className=\"input\"\r\n            placeholder={String(deadline / 60)}\r\n            value={deadlineInput}\r\n            onChange={e => setDeadlineInput(e.target.value)}\r\n            onBlur={handleCommitChange}\r\n            onKeyUp={handleKeyUp}\r\n            data-valid={isValid}\r\n          />\r\n        </Box>\r\n        <Text fontWeight={500} fontSize=\"12px\" lineHeight={'16px'}>\r\n          <Trans>mins</Trans>\r\n        </Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default styled(TransactionTimeLimitSetting)`\r\n  .input {\r\n    width: 100%;\r\n    background: transparent;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    outline: none;\r\n    border: none;\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n    }\r\n    color: ${({ theme }) => theme.text};\r\n    text-align: right;\r\n\r\n    &[data-valid='false'] {\r\n      color: ${({ theme }) => theme.red1};\r\n    }\r\n  }\r\n`\r\n","import { Trans, t } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport React from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Box, Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { AutoColumn } from 'components/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport Toggle from 'components/Toggle'\r\nimport useTopTrendingSoonTokensInCurrentNetwork from 'components/TopTrendingSoonTokensInCurrentNetwork/useTopTrendingSoonTokensInCurrentNetwork'\r\nimport { TutorialIds } from 'components/Tutorial/TutorialSwap/constant'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport {\r\n  useShowLiveChart,\r\n  useShowTokenInfo,\r\n  useShowTopTrendingSoonTokens,\r\n  useShowTradeRoutes,\r\n  useToggleLiveChart,\r\n  useToggleTokenInfo,\r\n  useToggleTopTrendingTokens,\r\n  useToggleTradeRoutes,\r\n} from 'state/user/hooks'\r\n\r\nimport AdvancedModeSetting from './AdvancedModeSetting'\r\nimport GasPriceTrackerSetting from './GasPriceTrackerSetting'\r\nimport LiquiditySourcesSetting from './LiquiditySourcesSetting'\r\nimport SlippageSetting from './SlippageSetting'\r\nimport TransactionTimeLimitSetting from './TransactionTimeLimitSetting'\r\n\r\ntype Props = {\r\n  className?: string\r\n  onBack: () => void\r\n  onClickGasPriceTracker: () => void\r\n  onClickLiquiditySources: () => void\r\n}\r\nconst BackIconWrapper = styled(ArrowLeft)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  path {\r\n    stroke: ${({ theme }) => theme.text} !important;\r\n  }\r\n`\r\n\r\nconst BackText = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nconst SettingsPanel: React.FC<Props> = ({ className, onBack, onClickLiquiditySources, onClickGasPriceTracker }) => {\r\n  const theme = useTheme()\r\n\r\n  const { data: topTrendingSoonTokens } = useTopTrendingSoonTokensInCurrentNetwork()\r\n  const shouldShowTrendingSoonSetting = topTrendingSoonTokens.length > 0\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n  const isShowTradeRoutes = useShowTradeRoutes()\r\n  const isShowTokenInfo = useShowTokenInfo()\r\n\r\n  const isShowLiveChart = useShowLiveChart()\r\n  const toggleLiveChart = useToggleLiveChart()\r\n  const toggleTradeRoutes = useToggleTradeRoutes()\r\n  const toggleTokenInfo = useToggleTokenInfo()\r\n\r\n  const isShowTrendingSoonTokens = useShowTopTrendingSoonTokens()\r\n  const toggleTopTrendingTokens = useToggleTopTrendingTokens()\r\n\r\n  const handleToggleLiveChart = () => {\r\n    mixpanelHandler(MIXPANEL_TYPE.LIVE_CHART_ON_OFF, { live_chart_on_or_off: !isShowLiveChart })\r\n    toggleLiveChart()\r\n  }\r\n\r\n  const handleToggleTradeRoute = () => {\r\n    mixpanelHandler(MIXPANEL_TYPE.TRADING_ROUTE_ON_OFF, {\r\n      trading_route_on_or_off: !isShowTradeRoutes,\r\n    })\r\n    toggleTradeRoutes()\r\n  }\r\n\r\n  return (\r\n    <Box width=\"100%\" className={className} id={TutorialIds.TRADING_SETTING_CONTENT}>\r\n      <Flex width={'100%'} flexDirection={'column'} marginBottom=\"4px\">\r\n        <Flex\r\n          alignItems=\"center\"\r\n          sx={{\r\n            // this is to make the arrow stay exactly where it stays in Info panel\r\n            marginTop: '5px',\r\n          }}\r\n        >\r\n          <BackIconWrapper onClick={onBack}></BackIconWrapper>\r\n          <BackText>{t`Settings`}</BackText>\r\n        </Flex>\r\n\r\n        <Flex\r\n          sx={{\r\n            marginTop: '22px',\r\n            flexDirection: 'column',\r\n            rowGap: '12px',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <span className=\"settingTitle\">\r\n            <Trans>Advanced Settings</Trans>\r\n          </span>\r\n\r\n          <SlippageSetting />\r\n          <TransactionTimeLimitSetting />\r\n\r\n          <AdvancedModeSetting />\r\n\r\n          <GasPriceTrackerSetting onClick={onClickGasPriceTracker} />\r\n\r\n          <LiquiditySourcesSetting onClick={onClickLiquiditySources} />\r\n          <Flex\r\n            sx={{\r\n              flexDirection: 'column',\r\n              rowGap: '12px',\r\n              paddingTop: '16px',\r\n              borderTop: `1px solid ${theme.border}`,\r\n            }}\r\n          >\r\n            <span className=\"settingTitle\">\r\n              <Trans>Display Settings</Trans>\r\n            </span>\r\n            <AutoColumn gap=\"md\">\r\n              {shouldShowTrendingSoonSetting && (\r\n                <RowBetween>\r\n                  <RowFixed>\r\n                    <span className=\"settingLabel\">Trending Soon</span>\r\n                    <QuestionHelper text={t`Turn on to display tokens that could be trending soon`} />\r\n                  </RowFixed>\r\n                  <Toggle isActive={isShowTrendingSoonTokens} toggle={toggleTopTrendingTokens} />\r\n                </RowBetween>\r\n              )}\r\n              <RowBetween>\r\n                <RowFixed>\r\n                  <span className=\"settingLabel\">Live Chart</span>\r\n                  <QuestionHelper text={t`Turn on to display live chart`} />\r\n                </RowFixed>\r\n                <Toggle isActive={isShowLiveChart} toggle={handleToggleLiveChart} />\r\n              </RowBetween>\r\n              <RowBetween>\r\n                <RowFixed>\r\n                  <span className=\"settingLabel\">\r\n                    <Trans>Trade Route</Trans>\r\n                  </span>\r\n                  <QuestionHelper text={t`Turn on to display trade route`} />\r\n                </RowFixed>\r\n                <Toggle isActive={isShowTradeRoutes} toggle={handleToggleTradeRoute} />\r\n              </RowBetween>\r\n\r\n              <RowBetween>\r\n                <RowFixed>\r\n                  <span className=\"settingLabel\">\r\n                    <Trans>Token Info</Trans>\r\n                  </span>\r\n                  <QuestionHelper text={t`Turn on to display token info`} />\r\n                </RowFixed>\r\n                <Toggle isActive={isShowTokenInfo} toggle={toggleTokenInfo} />\r\n              </RowBetween>\r\n            </AutoColumn>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default styled(SettingsPanel)`\r\n  .settingTitle {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .settingLabel {\r\n    font-size: ${isMobile ? '14px' : '12px'};\r\n    color: ${({ theme }) => theme.text};\r\n    font-weight: 400;\r\n    line-height: 20px;\r\n  }\r\n\r\n  ${Toggle} {\r\n    background: ${({ theme }) => theme.buttonBlack};\r\n    &[data-active='true'] {\r\n      background: ${({ theme }) => rgba(theme.primary, 0.2)};\r\n    }\r\n  }\r\n`\r\n","import { Currency } from '@kyberswap/ks-sdk-core'\r\nimport { Trans } from '@lingui/macro'\r\nimport { useRef } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { BarChart2, DollarSign, Repeat } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { CollapseItem } from 'components/Collapse'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Loader from 'components/Loader'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { TokenInfo } from 'hooks/useTokenInfo'\r\nimport { formattedNum } from 'utils'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\n\r\nconst NOT_AVAILABLE = '--'\r\n\r\nconst CollapseItemWrapper = styled(CollapseItem)`\r\n  border-radius: 20px;\r\n`\r\n\r\nconst InfoRow = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 4px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    border: none;\r\n    padding: 20px 0px;\r\n  `}\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    :last-child {\r\n      border-bottom: none;\r\n    }\r\n  `}\r\n`\r\n\r\nconst InfoRowValue = styled.div`\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n`\r\n\r\nconst InfoRowLabel = styled.div`\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n`\r\n\r\nconst AboutText = styled.h2`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  margin: 0;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    font-size: 16px;\r\n  `}\r\n`\r\n\r\n/**\r\n * replace a tag, script tag.    the others tags will remain.\r\n * @param text\r\n * @returns\r\n */\r\nfunction replaceHtml(text: string) {\r\n  if (!text) return ''\r\n  return text\r\n    .replace(/\\u200B/g, '') // remove zero width space\r\n    .replace(/<a[^>]*>/g, '') // replace a tag\r\n    .replace(/<\\/a>/g, '') // replace a close tag\r\n    .replace(/<.*?script.*?>.*?<\\/.*?script.*?>/gim, '') // replace script tag\r\n}\r\n\r\n/**\r\n * Tether (USDT) => Tether\r\n * @param text\r\n * @returns\r\n */\r\nfunction formatString(text: string | undefined) {\r\n  return text ? text.replace(/\\s\\(.*\\)/i, '') : ''\r\n}\r\n\r\nconst SwapInstruction = styled.div`\r\n  margin-top: 16px;\r\n  color: ${({ theme }) => theme.subText};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n`\r\n\r\nconst InfoRowWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n    flex-direction: column;\r\n  `}\r\n`\r\n\r\nexport function HowToSwap({\r\n  fromCurrency,\r\n  toCurrency,\r\n  fromCurrencyInfo,\r\n  toCurrencyInfo,\r\n  expandedOnMount,\r\n}: {\r\n  fromCurrency: Currency | undefined\r\n  toCurrency: Currency | undefined\r\n  fromCurrencyInfo: TokenInfo\r\n  toCurrencyInfo: TokenInfo\r\n  expandedOnMount?: boolean\r\n}) {\r\n  if (!fromCurrency || !toCurrency || !fromCurrencyInfo || !toCurrencyInfo) return null\r\n  const symbol1 = fromCurrency.symbol\r\n  const symbol2 = toCurrency.symbol\r\n  const name1 = fromCurrency.name\r\n  const name2 = toCurrency.name\r\n\r\n  const fromName = formatString(fromCurrencyInfo.name || name1)\r\n  const toName = formatString(toCurrencyInfo.name || name2)\r\n\r\n  return (\r\n    <CollapseItemWrapper\r\n      expandedOnMount={expandedOnMount}\r\n      header={\r\n        <AboutText>\r\n          How to swap {symbol1} to {symbol2}?\r\n        </AboutText>\r\n      }\r\n    >\r\n      <SwapInstruction>\r\n        <Text as=\"span\">\r\n          {fromName} ({symbol1}) can be exchanged to {toName} ({symbol1} to {symbol2}) on KyberSwap, a cryptocurrency\r\n          decentralized exchange. By using KyberSwap, users can trade {symbol1} to {symbol2} on networks at the best\r\n          rates, and earn more with your {symbol1} token without needing to check rates across multiple platforms.\r\n        </Text>\r\n      </SwapInstruction>\r\n    </CollapseItemWrapper>\r\n  )\r\n}\r\n\r\nconst PriceLabel = () => {\r\n  const theme = useTheme()\r\n  return (\r\n    <Flex\r\n      alignItems={'center'}\r\n      sx={{\r\n        color: theme.text,\r\n        fontSize: '14px',\r\n        fontWeight: 500,\r\n        lineHeight: '24px',\r\n        columnGap: '4px',\r\n      }}\r\n    >\r\n      <Flex\r\n        sx={{\r\n          borderRadius: '99999px',\r\n          width: '14px',\r\n          height: '14px',\r\n          background: theme.text,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <DollarSign width=\"12px\" height=\"12px\" color={theme.background} />\r\n      </Flex>\r\n\r\n      <Text as=\"span\">\r\n        <Trans>Price</Trans>\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst MarketCapRankLabel = () => {\r\n  const theme = useTheme()\r\n  return (\r\n    <Flex\r\n      alignItems={'center'}\r\n      sx={{\r\n        color: theme.text,\r\n        fontSize: '14px',\r\n        fontWeight: 500,\r\n        lineHeight: '24px',\r\n        columnGap: '4px',\r\n      }}\r\n    >\r\n      <BarChart2 strokeWidth=\"5px\" fill=\"currentColor\" width=\"16px\" height=\"16px\" />\r\n      <Text as=\"span\">\r\n        <Trans>Market Cap Rank</Trans>\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst VolumeLabel = () => {\r\n  const theme = useTheme()\r\n  return (\r\n    <Flex\r\n      alignItems={'center'}\r\n      sx={{\r\n        color: theme.text,\r\n        fontSize: '14px',\r\n        fontWeight: 500,\r\n        lineHeight: '24px',\r\n        columnGap: '4px',\r\n      }}\r\n    >\r\n      <Repeat strokeWidth=\"4px\" width=\"14px\" height=\"14px\" />\r\n      <Text as=\"span\">\r\n        <Trans>24H Volume</Trans>\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst SingleTokenInfo = ({\r\n  data: tokenInfo,\r\n  currency,\r\n  loading,\r\n  expandedOnMount,\r\n}: {\r\n  data: TokenInfo\r\n  currency?: Currency\r\n  loading: boolean\r\n  expandedOnMount?: boolean\r\n}) => {\r\n  const description = replaceHtml(tokenInfo?.description?.en)\r\n\r\n  const ref = useRef<HTMLParagraphElement>(null)\r\n\r\n  const symbol = currency?.symbol\r\n  const currencyName = tokenInfo.name || currency?.name\r\n\r\n  const listField = [\r\n    { label: <PriceLabel />, value: tokenInfo.price ? formattedNum(tokenInfo.price.toString(), true) : NOT_AVAILABLE },\r\n    {\r\n      label: <MarketCapRankLabel />,\r\n      value: tokenInfo.marketCapRank ? `#${formattedNum(tokenInfo.marketCapRank.toString())}` : NOT_AVAILABLE,\r\n    },\r\n    {\r\n      label: <VolumeLabel />,\r\n      value: !tokenInfo.tradingVolume\r\n        ? NOT_AVAILABLE\r\n        : isMobile\r\n        ? formatDollarAmount(tokenInfo.tradingVolume, 2).toUpperCase()\r\n        : formattedNum(tokenInfo.tradingVolume.toString(), true),\r\n    },\r\n  ]\r\n  return (\r\n    <CollapseItemWrapper\r\n      expandedOnMount={expandedOnMount}\r\n      header={\r\n        <Flex alignItems=\"center\">\r\n          <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: 10 }} />\r\n          <AboutText>\r\n            {/* About Usdt (Tether(...)) => Usdt (Tether) */}\r\n            About {symbol} {currencyName !== symbol ? `(${formatString(currencyName)})` : null}\r\n          </AboutText>\r\n        </Flex>\r\n      }\r\n    >\r\n      <InfoRowLabel\r\n        className=\"desc\"\r\n        ref={ref}\r\n        dangerouslySetInnerHTML={{\r\n          __html: description.replace(/\\r\\n\\r\\n/g, '<br><br>'),\r\n        }}\r\n      />\r\n      <InfoRowWrapper>\r\n        {listField.map((item, i) => (\r\n          <InfoRow key={i}>\r\n            <InfoRowLabel>{item.label}</InfoRowLabel>\r\n            <InfoRowValue>{loading ? <Loader /> : item.value}</InfoRowValue>\r\n          </InfoRow>\r\n        ))}\r\n      </InfoRowWrapper>\r\n    </CollapseItemWrapper>\r\n  )\r\n}\r\n\r\nexport default SingleTokenInfo\r\n","import { ChainId, Currency } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { TokenInfoWrapper } from 'components/swapv2/styleds'\r\nimport { TOKEN_INFO_DESCRIPTION } from 'constants/tokenLists/token-info'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useTokenInfo, { TokenInfo } from 'hooks/useTokenInfo'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\nimport { getSymbolSlug } from 'utils/string'\r\nimport { checkPairInWhiteList } from 'utils/tokenInfo'\r\n\r\nimport SingleTokenInfo, { HowToSwap } from './SingleTokenInfo'\r\n\r\nconst isEmptyData = (tokenInfo: TokenInfo) => {\r\n  return !tokenInfo.price && !tokenInfo?.description?.en && !tokenInfo.tradingVolume && !tokenInfo.marketCapRank\r\n}\r\n\r\nconst copyToken = (tokenInfo: TokenInfo) => {\r\n  const result: TokenInfo = { ...tokenInfo, description: { ...tokenInfo.description } }\r\n  return result\r\n}\r\n\r\nconst checkTokenDescription = ({\r\n  tokenInfo1,\r\n  tokenInfo2,\r\n  tokenWrapped1,\r\n  tokenWrapped2,\r\n  chainId,\r\n}: {\r\n  tokenInfo1: TokenInfo\r\n  tokenInfo2: TokenInfo\r\n  tokenWrapped1: Currency | undefined\r\n  tokenWrapped2: Currency | undefined\r\n  chainId: ChainId | undefined\r\n}) => {\r\n  // hard code pair description for SEO\r\n  const rs1: TokenInfo = copyToken(tokenInfo1)\r\n  const rs2: TokenInfo = copyToken(tokenInfo2)\r\n  let inWhiteList = false\r\n  if (tokenWrapped1 && tokenWrapped2 && chainId) {\r\n    const symbol1 = getSymbolSlug(tokenWrapped1)\r\n    const symbol2 = getSymbolSlug(tokenWrapped2)\r\n    const { isInWhiteList, data } = checkPairInWhiteList(chainId, symbol1, symbol2)\r\n    if (isInWhiteList) {\r\n      inWhiteList = isInWhiteList\r\n      const descHardCode1 = TOKEN_INFO_DESCRIPTION[symbol1]\r\n      const descHardCode2 = TOKEN_INFO_DESCRIPTION[symbol2]\r\n      const nameHardCode1 = data[symbol1]?.name\r\n      const nameHardCode2 = data[symbol2]?.name\r\n      if (nameHardCode1) rs1.name = nameHardCode1\r\n      if (nameHardCode2) rs2.name = nameHardCode2\r\n      if (descHardCode1) rs1.description.en = descHardCode1\r\n      if (descHardCode2) rs2.description.en = descHardCode2\r\n    }\r\n  }\r\n  return {\r\n    tokenInfo1: rs1,\r\n    tokenInfo2: rs2,\r\n    isInWhiteList: inWhiteList,\r\n  }\r\n}\r\n\r\nconst TokenInfoV2 = ({ currencyIn, currencyOut }: { currencyIn?: Currency; currencyOut?: Currency }) => {\r\n  const inputNativeCurrency = useCurrencyConvertedToNative(currencyIn)\r\n  const outputNativeCurrency = useCurrencyConvertedToNative(currencyOut)\r\n\r\n  const inputToken = inputNativeCurrency?.wrapped\r\n  const outputToken = outputNativeCurrency?.wrapped\r\n\r\n  const { data: data1, loading: loading1 } = useTokenInfo(inputToken)\r\n  const { data: data2, loading: loading2 } = useTokenInfo(outputToken)\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { tokenInfo1, tokenInfo2, isInWhiteList } = checkTokenDescription({\r\n    tokenInfo1: data1,\r\n    tokenInfo2: data2,\r\n    tokenWrapped1: currencyIn,\r\n    tokenWrapped2: currencyOut,\r\n    chainId,\r\n  })\r\n\r\n  const showToken1 = !isEmptyData(tokenInfo1) && isInWhiteList\r\n  const showToken2 = !isEmptyData(tokenInfo2) && isInWhiteList\r\n\r\n  if (!showToken2 && !showToken1) return null\r\n  const showHow2Swap = Boolean(showToken1 && showToken2 && currencyIn && currencyOut && isInWhiteList)\r\n  return (\r\n    <TokenInfoWrapper>\r\n      {showToken1 && (\r\n        <SingleTokenInfo expandedOnMount data={tokenInfo1} loading={loading1} currency={inputNativeCurrency} />\r\n      )}\r\n      {showToken2 && <SingleTokenInfo data={tokenInfo2} loading={loading2} currency={outputNativeCurrency} />}\r\n      {showHow2Swap && (\r\n        <HowToSwap\r\n          fromCurrency={currencyIn}\r\n          toCurrency={currencyOut}\r\n          fromCurrencyInfo={tokenInfo1}\r\n          toCurrencyInfo={tokenInfo2}\r\n        />\r\n      )}\r\n    </TokenInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default TokenInfoV2\r\n","import { Currency, Price } from '@kyberswap/ks-sdk-core'\r\nimport { Repeat } from 'react-feather'\r\nimport { Text } from 'rebass'\r\n\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price<Currency, Currency>\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const theme = useTheme()\r\n\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const nativeQuote = useCurrencyConvertedToNative(price?.quoteCurrency)\r\n  const nativeBase = useCurrencyConvertedToNative(price?.baseCurrency)\r\n  const label = showInverted\r\n    ? `${nativeQuote?.symbol} = 1 ${nativeBase?.symbol}`\r\n    : `${nativeBase?.symbol} = 1 ${nativeQuote?.symbol}`\r\n\r\n  return (\r\n    <Text\r\n      fontWeight={500}\r\n      fontSize={12}\r\n      color={theme.subText}\r\n      style={{ alignItems: 'center', display: 'flex', cursor: 'pointer' }}\r\n      onClick={() => setShowInverted(!showInverted)}\r\n      height=\"22px\"\r\n    >\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini>\r\n            <Repeat size={12} />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Text } from 'rebass/styled-components'\r\n\r\nimport { GasStation, MoneyFill } from 'components/Icons'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\n\r\nimport { ButtonReturnType, GroupButtonReturnTypes } from './styleds'\r\n\r\nexport default function TradeTypeSelection() {\r\n  const { isSolana } = useActiveWeb3React()\r\n  const { saveGas } = useSwapState()\r\n  const { onChooseToSaveGas } = useSwapActionHandlers()\r\n  if (isSolana) return null\r\n  return (\r\n    <GroupButtonReturnTypes>\r\n      <ButtonReturnType onClick={() => onChooseToSaveGas(false)} active={!saveGas} role=\"button\">\r\n        <MoneyFill />\r\n        <Text marginLeft=\"4px\">\r\n          <Trans>Maximum Return</Trans>\r\n        </Text>\r\n      </ButtonReturnType>\r\n      <ButtonReturnType onClick={() => onChooseToSaveGas(true)} active={saveGas} role=\"button\">\r\n        <GasStation />\r\n        <Text marginLeft=\"4px\">\r\n          <Trans>Lowest Gas</Trans>\r\n        </Text>\r\n      </ButtonReturnType>\r\n    </GroupButtonReturnTypes>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { SignerWalletAdapter } from '@solana/wallet-adapter-base'\r\nimport { useCallback, useMemo } from 'react'\r\n\r\nimport { useActiveWeb3React, useWeb3React } from 'hooks/index'\r\nimport useENS from 'hooks/useENS'\r\nimport { useEncodeSolana, useSwapState } from 'state/swap/hooks'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { isAddress, shortenAddress } from 'utils'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\r\nimport { sendEVMTransaction, sendSolanaTransactions } from 'utils/sendTransaction'\r\n\r\nimport { ZERO_ADDRESS_SOLANA } from './../constants/index'\r\nimport useProvider from './solana/useProvider'\r\n\r\nenum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\nexport interface FeeConfig {\r\n  chargeFeeBy: 'currency_in' | 'currency_out'\r\n  feeReceiver: string\r\n  isInBps: boolean\r\n  feeAmount: string\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapV2Callback(\r\n  trade: Aggregator | undefined, // trade to execute, required\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, isEVM, isSolana, walletSolana } = useActiveWeb3React()\r\n  const { library } = useWeb3React()\r\n  const provider = useProvider()\r\n  const [encodeSolana] = useEncodeSolana()\r\n\r\n  const { typedValue, feeConfig, saveGas, recipient: recipientAddressOrName } = useSwapState()\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const addTransactionWithType = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n\r\n  const recipient = recipientAddressOrName === null || recipientAddressOrName === '' ? account : recipientAddress\r\n\r\n  const extractSwapData = useCallback(() => {\r\n    if (!trade) {\r\n      throw new Error('\"trade\" is undefined.')\r\n    }\r\n\r\n    const inputSymbol = trade.inputAmount.currency.symbol\r\n    const outputSymbol = trade.outputAmount.currency.symbol\r\n    const inputAddress = trade.inputAmount.currency.isNative ? ZERO_ADDRESS_SOLANA : trade.inputAmount.currency.address\r\n    const outputAddress = trade.outputAmount.currency.isNative\r\n      ? ZERO_ADDRESS_SOLANA\r\n      : trade.outputAmount.currency.address\r\n    const inputAmount = formatCurrencyAmount(trade.inputAmount, 6)\r\n    const outputAmount = formatCurrencyAmount(trade.outputAmount, 6)\r\n\r\n    const base = `${\r\n      feeConfig && feeConfig.chargeFeeBy === 'currency_in' && feeConfig.isInBps ? typedValue : inputAmount\r\n    } ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n    const withRecipient =\r\n      recipient === account\r\n        ? undefined\r\n        : `to ${\r\n            recipientAddressOrName && isAddress(chainId, recipientAddressOrName)\r\n              ? shortenAddress(chainId, recipientAddressOrName)\r\n              : recipientAddressOrName\r\n          }`\r\n\r\n    return {\r\n      hash: '',\r\n      type: TRANSACTION_TYPE.SWAP,\r\n      summary: `${base} ${withRecipient ?? ''}`,\r\n      arbitrary: {\r\n        inputSymbol,\r\n        outputSymbol,\r\n        inputAddress,\r\n        outputAddress,\r\n        inputDecimals: trade.inputAmount.currency.decimals,\r\n        outputDecimals: trade.outputAmount.currency.decimals,\r\n        withRecipient,\r\n        saveGas,\r\n        inputAmount: trade.inputAmount.toExact(),\r\n        slippageSetting: allowedSlippage ? allowedSlippage / 100 : 0,\r\n        priceImpact: trade && trade?.priceImpact > 0.01 ? trade?.priceImpact.toFixed(2) : '<0.01',\r\n      },\r\n    }\r\n  }, [account, allowedSlippage, chainId, feeConfig, recipient, recipientAddressOrName, saveGas, trade, typedValue])\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !account) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    const swapData = extractSwapData()\r\n    const onHandleSwapResponse = (tx: TransactionResponse) => {\r\n      addTransactionWithType({\r\n        ...swapData,\r\n        hash: tx.hash,\r\n      })\r\n    }\r\n\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      } else {\r\n        return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n      }\r\n    }\r\n\r\n    const value = BigNumber.from(trade.inputAmount.currency.isNative ? trade.inputAmount.quotient.toString() : 0)\r\n    const onSwapWithBackendEncode = async (): Promise<string> => {\r\n      const hash = await sendEVMTransaction(\r\n        account,\r\n        library,\r\n        trade.routerAddress,\r\n        trade.encodedSwapData,\r\n        value,\r\n        onHandleSwapResponse,\r\n      )\r\n      if (hash === undefined) throw new Error('sendTransaction returned undefined.')\r\n      return hash\r\n    }\r\n    const onSwapSolana = async (): Promise<string> => {\r\n      if (!provider) throw new Error('Please connect wallet first')\r\n      if (!walletSolana.wallet?.adapter) throw new Error('Please connect wallet first')\r\n      if (!encodeSolana) throw new Error('Encode not found')\r\n\r\n      const hash = await sendSolanaTransactions(\r\n        encodeSolana,\r\n        walletSolana.wallet.adapter as any as SignerWalletAdapter,\r\n        addTransactionWithType,\r\n        swapData,\r\n      )\r\n      if (hash === undefined) throw new Error('sendTransaction returned undefined.')\r\n      return hash[0]\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: isEVM ? onSwapWithBackendEncode : isSolana ? (encodeSolana ? onSwapSolana : null) : null,\r\n      error: null,\r\n    }\r\n  }, [\r\n    trade,\r\n    encodeSolana,\r\n    account,\r\n    recipient,\r\n    isEVM,\r\n    isSolana,\r\n    recipientAddressOrName,\r\n    library,\r\n    provider,\r\n    walletSolana,\r\n    addTransactionWithType,\r\n    extractSwapData,\r\n  ])\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { stringify } from 'querystring'\r\nimport { Suspense, lazy, useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { RouteComponentProps, useParams } from 'react-router-dom'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled, { DefaultTheme, keyframes } from 'styled-components'\r\n\r\nimport { ReactComponent as TutorialSvg } from 'assets/svg/play_circle_outline.svg'\r\nimport { ReactComponent as RoutingIcon } from 'assets/svg/routing-icon.svg'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport Banner from 'components/Banner'\r\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\r\nimport { GreyCard } from 'components/Card/index'\r\nimport Column from 'components/Column/index'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport { Swap as SwapIcon } from 'components/Icons'\r\nimport TransactionSettingsIcon from 'components/Icons/TransactionSettingsIcon'\r\nimport InfoHelper from 'components/InfoHelper'\r\nimport Loader from 'components/Loader'\r\nimport ProgressSteps from 'components/ProgressSteps'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport { SEOSwap } from 'components/SEO'\r\nimport { ShareButtonWithModal } from 'components/ShareModal'\r\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\r\nimport TokenWarningModal from 'components/TokenWarningModal'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport TopTrendingSoonTokensInCurrentNetwork from 'components/TopTrendingSoonTokensInCurrentNetwork'\r\nimport TrendingSoonTokenBanner from 'components/TrendingSoonTokenBanner'\r\nimport Tutorial, { TutorialType } from 'components/Tutorial'\r\nimport TutorialSwap from 'components/Tutorial/TutorialSwap'\r\nimport { TutorialIds } from 'components/Tutorial/TutorialSwap/constant'\r\nimport AdvancedSwapDetailsDropdown from 'components/swapv2/AdvancedSwapDetailsDropdown'\r\nimport ConfirmSwapModal from 'components/swapv2/ConfirmSwapModal'\r\nimport GasPriceTrackerPanel from 'components/swapv2/GasPriceTrackerPanel'\r\nimport LiquiditySourcesPanel from 'components/swapv2/LiquiditySourcesPanel'\r\nimport MobileTokenInfo from 'components/swapv2/MobileTokenInfo'\r\nimport PairSuggestion, { PairSuggestionHandle } from 'components/swapv2/PairSuggestion'\r\nimport RefreshButton from 'components/swapv2/RefreshButton'\r\nimport SettingsPanel from 'components/swapv2/SwapSettingsPanel'\r\nimport TokenInfo from 'components/swapv2/TokenInfo'\r\nimport TokenInfoV2 from 'components/swapv2/TokenInfoV2'\r\nimport TradePrice from 'components/swapv2/TradePrice'\r\nimport TradeTypeSelection from 'components/swapv2/TradeTypeSelection'\r\nimport {\r\n  ArrowWrapper,\r\n  BottomGrouping,\r\n  Container,\r\n  Dots,\r\n  InfoComponentsWrapper,\r\n  KyberTag,\r\n  LiveChartWrapper,\r\n  PageWrapper,\r\n  PriceImpactHigh,\r\n  RoutesWrapper,\r\n  StyledActionButtonSwapForm,\r\n  SwapCallbackError,\r\n  SwapFormActions,\r\n  SwapFormWrapper,\r\n  Tab,\r\n  TabContainer,\r\n  TabWrapper,\r\n  Wrapper,\r\n} from 'components/swapv2/styleds'\r\nimport { AGGREGATOR_WAITING_TIME, TIME_TO_REFRESH_SWAP_RATE } from 'constants/index'\r\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks'\r\nimport { Z_INDEXS } from 'constants/styles'\r\nimport { NativeCurrencies, STABLE_COINS_ADDRESS } from 'constants/tokens'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useAllTokens, useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTradeV2 } from 'hooks/useApproveCallback'\r\nimport { useChangeNetwork } from 'hooks/useChangeNetwork'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport usePrevious from 'hooks/usePrevious'\r\nimport { useSwapV2Callback } from 'hooks/useSwapV2Callback'\r\nimport { useSyncNetworkParamWithStore } from 'hooks/useSyncNetworkParamWithStore'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\r\nimport { BodyWrapper } from 'pages/AppBody'\r\nimport { ClickableText } from 'pages/Pool/styleds'\r\nimport { useToggleTransactionSettingsMenu, useWalletModalToggle } from 'state/application/hooks'\r\nimport { useAllDexes } from 'state/customizeDexes/hooks'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useDefaultsFromURLSearch, useEncodeSolana, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\nimport { useDerivedSwapInfoV2 } from 'state/swap/useAggregator'\r\nimport { useTutorialSwapGuide } from 'state/tutorial/hooks'\r\nimport {\r\n  useExpertModeManager,\r\n  useShowLiveChart,\r\n  useShowTokenInfo,\r\n  useShowTradeRoutes,\r\n  useUserAddedTokens,\r\n  useUserSlippageTolerance,\r\n} from 'state/user/hooks'\r\nimport { TYPE } from 'theme'\r\nimport { formattedNum, isAddressString } from 'utils'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport { filterTokensWithExactKeyword } from 'utils/filtering'\r\nimport { halfAmountSpend, maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { convertToSlug, getSymbolSlug } from 'utils/string'\r\nimport { checkPairInWhiteList, convertSymbol } from 'utils/tokenInfo'\r\n\r\nconst LiveChart = lazy(() => import('components/LiveChart'))\r\nconst Routing = lazy(() => import('components/swapv2/Routing'))\r\nconst TutorialIcon = styled(TutorialSvg)`\r\n  width: 22px;\r\n  height: 22px;\r\n  path {\r\n    fill: ${({ theme }) => theme.subText};\r\n    stroke: ${({ theme }) => theme.subText};\r\n  }\r\n`\r\n\r\nenum TAB {\r\n  SWAP = 'swap',\r\n  INFO = 'info',\r\n  SETTINGS = 'settings',\r\n  GAS_PRICE_TRACKER = 'gas_price_tracker',\r\n  LIQUIDITY_SOURCES = 'liquidity_sources',\r\n  // LIMIT = 'limit'\r\n}\r\n\r\nconst highlight = (theme: DefaultTheme) => keyframes`\r\n  0% {\r\n    box-shadow: 0 0 0 0 ${theme.primary};\r\n  }\r\n\r\n  70% {\r\n    box-shadow: 0 0 0 2px ${theme.primary};\r\n  }\r\n\r\n  100% {\r\n    box-shadow: 0 0 0 0 ${theme.primary};\r\n  }\r\n`\r\n\r\nconst AppBodyWrapped = styled(BodyWrapper)`\r\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.04);\r\n  z-index: ${Z_INDEXS.SWAP_FORM};\r\n  padding: 16px 16px 24px;\r\n  margin-top: 0;\r\n\r\n  &[data-highlight='true'] {\r\n    animation: ${({ theme }) => highlight(theme)} 2s 2 alternate ease-in-out;\r\n  }\r\n`\r\n\r\nconst SwitchLocaleLinkWrapper = styled.div`\r\n  margin-bottom: 30px;\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n  margin-bottom: 0px;\r\n`}\r\n`\r\n\r\nconst RoutingIconWrapper = styled(RoutingIcon)`\r\n  height: 27px;\r\n  width: 27px;\r\n  margin-right: 10px;\r\n  path {\r\n    fill: ${({ theme }) => theme.subText} !important;\r\n  }\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const { account, chainId, networkInfo, isSolana, isEVM } = useActiveWeb3React()\r\n  const [rotate, setRotate] = useState(false)\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const isShowLiveChart = useShowLiveChart()\r\n  const isShowTradeRoutes = useShowTradeRoutes()\r\n  const isShowTokenInfoSetting = useShowTokenInfo()\r\n  const qs = useParsedQueryString<{\r\n    highlightBox: string\r\n    outputCurrency: string\r\n    inputCurrency: string\r\n  }>()\r\n  const allDexes = useAllDexes()\r\n  const [{ show: isShowTutorial = false }] = useTutorialSwapGuide()\r\n  useSyncNetworkParamWithStore()\r\n  const [encodeSolana] = useEncodeSolana()\r\n\r\n  const refSuggestPair = useRef<PairSuggestionHandle>(null)\r\n  const [showingPairSuggestionImport, setShowingPairSuggestionImport] = useState<boolean>(false) // show modal import when click pair suggestion\r\n\r\n  const shouldHighlightSwapBox = qs.highlightBox === 'true'\r\n\r\n  const [isSelectCurrencyManually, setIsSelectCurrencyManually] = useState(false) // true when: select token input, output manualy or click rotate token.\r\n  // else select via url\r\n\r\n  const [activeTab, setActiveTab] = useState<TAB>(TAB.SWAP)\r\n\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !Boolean(token.address in defaultTokens)\r\n    })\r\n\r\n  const theme = useTheme()\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletModal = useWalletModalToggle()\r\n\r\n  // for expert mode\r\n  const toggleSettings = useToggleTransactionSettingsMenu()\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    recipient,\r\n    feeConfig,\r\n    [Field.INPUT]: INPUT,\r\n    [Field.OUTPUT]: OUTPUT,\r\n  } = useSwapState()\r\n\r\n  const {\r\n    onSwitchTokensV2,\r\n    onCurrencySelection,\r\n    onResetSelectCurrency,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n    onChangeTrade,\r\n  } = useSwapActionHandlers()\r\n\r\n  const {\r\n    v2Trade,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    currencies,\r\n    inputError: swapInputError,\r\n    tradeComparer,\r\n    onRefresh,\r\n    loading: loadingAPI,\r\n    isPairNotfound,\r\n  } = useDerivedSwapInfoV2()\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Aggregator | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const comparedDex = useMemo(\r\n    () => allDexes?.find(dex => dex.id === tradeComparer?.comparedDex),\r\n    [allDexes, tradeComparer],\r\n  )\r\n  const currencyIn: Currency | undefined = currencies[Field.INPUT]\r\n  const currencyOut: Currency | undefined = currencies[Field.OUTPUT]\r\n  const balanceIn: CurrencyAmount<Currency> | undefined = currencyBalances[Field.INPUT]\r\n  const balanceOut: CurrencyAmount<Currency> | undefined = currencyBalances[Field.OUTPUT]\r\n\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(currencyIn, currencyOut, typedValue)\r\n\r\n  const isSolanaUnwrap = isSolana && wrapType === WrapType.UNWRAP\r\n  useEffect(() => {\r\n    // reset value for unwrapping WSOL\r\n    // because on Solana, unwrap WSOL is closing WSOL account,\r\n    // which mean it will unwrap all WSOL at once and we can't unwrap partial amount of WSOL\r\n    if (isSolanaUnwrap) onUserInput(Field.INPUT, balanceIn?.toExact() ?? '')\r\n  }, [balanceIn, isSolanaUnwrap, onUserInput, parsedAmount])\r\n\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n  const isPriceImpactInvalid = !!trade?.priceImpact && trade?.priceImpact === -1\r\n  const isPriceImpactHigh = !!trade?.priceImpact && trade?.priceImpact > 5\r\n  const isPriceImpactVeryHigh = !!trade?.priceImpact && trade?.priceImpact > 15\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  // reset recipient\r\n  useEffect(() => {\r\n    onChangeRecipient(null)\r\n  }, [onChangeRecipient, isExpertMode])\r\n\r\n  useEffect(() => {\r\n    // Save current trade to store\r\n    onChangeTrade(trade)\r\n  }, [trade, onChangeTrade])\r\n\r\n  const handleRecipientChange = (value: string | null) => {\r\n    if (recipient === null && value !== null) {\r\n      mixpanelHandler(MIXPANEL_TYPE.ADD_RECIPIENT_CLICKED)\r\n    }\r\n    onChangeRecipient(value)\r\n  }\r\n\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback((): void => {\r\n    // ...\r\n  }, [])\r\n\r\n  // reset if they close warning without tokens in params\r\n  const handleDismissTokenWarning = useCallback(() => {\r\n    if (showingPairSuggestionImport) {\r\n      setShowingPairSuggestionImport(false)\r\n    } else {\r\n      setDismissTokenWarning(true)\r\n    }\r\n  }, [showingPairSuggestionImport])\r\n\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    handleDismissTokenWarning()\r\n    if (showingPairSuggestionImport) {\r\n      refSuggestPair.current?.onConfirmImportToken() // callback from children\r\n    }\r\n  }, [handleDismissTokenWarning, showingPairSuggestionImport])\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencyIn && currencyOut && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !trade?.swaps?.length\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTradeV2(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  const handleRotateClick = useCallback(() => {\r\n    setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n    setRotate(prev => !prev)\r\n    onSwitchTokensV2()\r\n    setIsSelectCurrencyManually(true)\r\n  }, [onSwitchTokensV2])\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n    if (approval === ApprovalState.NOT_APPROVED) {\r\n      setApprovalSubmitted(false)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: string | undefined = useMemo(() => maxAmountSpend(balanceIn)?.toExact(), [balanceIn])\r\n  const halfAmountInput: string | undefined = useMemo(() => halfAmountSpend(balanceIn)?.toExact(), [balanceIn])\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapV2Callback(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then(hash => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch(error => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          showConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [swapCallback, tradeToConfirm, showConfirm])\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED))\r\n\r\n  const tradeLoadedRef = useRef(0)\r\n  useEffect(() => {\r\n    tradeLoadedRef.current = Date.now()\r\n  }, [trade])\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n\r\n    // when open modal, trade is locked from to be updated\r\n    // if user open modal too long, trade is outdated\r\n    // need to refresh data on close modal\r\n    if (Date.now() - tradeLoadedRef.current > TIME_TO_REFRESH_SWAP_RATE * 1000) {\r\n      onRefresh(false, AGGREGATOR_WAITING_TIME)\r\n    }\r\n\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash, onRefresh])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\r\n  }, [attemptingTxn, setSwapState, showConfirm, swapErrorMessage, trade, txHash])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency: Currency) => {\r\n      setIsSelectCurrencyManually(true)\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    onUserInput(Field.INPUT, maxAmountInput || '')\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleHalfInput = useCallback(() => {\r\n    !isSolanaUnwrap && onUserInput(Field.INPUT, halfAmountInput || '')\r\n  }, [isSolanaUnwrap, halfAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency: Currency) => {\r\n      setIsSelectCurrencyManually(true)\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const isLoading = loadingAPI || ((!balanceIn || !balanceOut) && userHasSpecifiedInputOutput && !v2Trade)\r\n\r\n  const { mixpanelHandler } = useMixpanel(trade, currencies)\r\n  const mixpanelSwapInit = () => {\r\n    mixpanelHandler(MIXPANEL_TYPE.SWAP_INITIATED)\r\n  }\r\n\r\n  /** check url params format `/swap/network/x-to-y` and then auto select token input\r\n   * - Flow: check network first and find token pairs (x vs y)\r\n   */\r\n\r\n  const params = useParams<{\r\n    fromCurrency: string\r\n    toCurrency: string\r\n    network: string\r\n  }>()\r\n\r\n  const getUrlMatchParams = () => {\r\n    const fromCurrency = (params.fromCurrency || '').toLowerCase()\r\n    const toCurrency = (params.toCurrency || '').toLowerCase()\r\n    const network: string = convertToSlug(params.network || '')\r\n    return { fromCurrency, toCurrency, network }\r\n  }\r\n\r\n  const changeNetwork = useChangeNetwork()\r\n  const refIsCheckNetworkAutoSelect = useRef<boolean>(false) // has done check network\r\n  const refIsImportUserToken = useRef<boolean>(false)\r\n\r\n  const findToken = (keyword: string) => {\r\n    const nativeToken = NativeCurrencies[chainId]\r\n    if (keyword === getSymbolSlug(nativeToken)) {\r\n      return nativeToken\r\n    }\r\n    return filterTokensWithExactKeyword(chainId, Object.values(defaultTokens), keyword)[0]\r\n  }\r\n\r\n  const navigate = useCallback(\r\n    (url: string) => {\r\n      // /swap/net/symA-to-symB?inputCurrency= addressC/symC &outputCurrency= addressD/symD\r\n      const { inputCurrency, outputCurrency, ...newQs } = qs\r\n      history.push(`${url}?${stringify(newQs)}`) // keep query params\r\n    },\r\n    [history, qs],\r\n  )\r\n\r\n  function findTokenPairFromUrl() {\r\n    let { fromCurrency, toCurrency, network } = getUrlMatchParams()\r\n    if (!fromCurrency || !network) return\r\n\r\n    const compareNetwork = networkInfo.route\r\n\r\n    if (compareNetwork && network !== compareNetwork) {\r\n      // when select change network => force get new network\r\n      network = compareNetwork\r\n      navigate(`/swap/${network}/${fromCurrency}${toCurrency ? `-to-${toCurrency}` : ''}`)\r\n    }\r\n\r\n    const isSame = fromCurrency && fromCurrency === toCurrency\r\n    if (!toCurrency || isSame) {\r\n      // net/symbol\r\n      const fromToken = findToken(fromCurrency)\r\n      if (fromToken) {\r\n        onCurrencySelection(Field.INPUT, fromToken)\r\n        if (isSame) navigate(`/swap/${network}/${fromCurrency}`)\r\n      } else navigate('/swap')\r\n      return\r\n    }\r\n\r\n    const isAddress1 = isAddressString(chainId, fromCurrency)\r\n    const isAddress2 = isAddressString(chainId, toCurrency)\r\n\r\n    // net/add-to-add\r\n    if (isAddress1 && isAddress2) {\r\n      const fromToken = findToken(fromCurrency)\r\n      const toToken = findToken(toCurrency)\r\n      if (fromToken && toToken) {\r\n        navigate(`/swap/${network}/${getSymbolSlug(fromToken)}-to-${getSymbolSlug(toToken)}`)\r\n        onCurrencySelection(Field.INPUT, fromToken)\r\n        onCurrencySelection(Field.OUTPUT, toToken)\r\n      } else navigate('/swap')\r\n      return\r\n    }\r\n\r\n    // sym-to-sym\r\n    fromCurrency = convertSymbol(network, fromCurrency)\r\n    toCurrency = convertSymbol(network, toCurrency)\r\n\r\n    const fromToken = findToken(fromCurrency)\r\n    const toToken = findToken(toCurrency)\r\n\r\n    if (!toToken || !fromToken) {\r\n      navigate('/swap')\r\n      return\r\n    }\r\n    onCurrencySelection(Field.INPUT, fromToken)\r\n    onCurrencySelection(Field.OUTPUT, toToken)\r\n  }\r\n\r\n  const checkAutoSelectTokenFromUrl = () => {\r\n    // check case:  `/swap/net/sym-to-sym` or `/swap/net/sym` is valid\r\n    const { fromCurrency, network } = getUrlMatchParams()\r\n    if (!fromCurrency || !network) return\r\n\r\n    const findChainId = SUPPORTED_NETWORKS.find(chainId => NETWORKS_INFO[chainId].route === network)\r\n    if (!findChainId) {\r\n      return navigate('/swap')\r\n    }\r\n    if (findChainId !== chainId) {\r\n      changeNetwork(\r\n        findChainId,\r\n        () => {\r\n          refIsCheckNetworkAutoSelect.current = true\r\n        },\r\n        () => {\r\n          navigate('/swap')\r\n        },\r\n      )\r\n    } else {\r\n      refIsCheckNetworkAutoSelect.current = true\r\n    }\r\n  }\r\n\r\n  const syncUrl = useCallback(\r\n    (currencyIn: Currency | undefined, currencyOut: Currency | undefined) => {\r\n      const symbolIn = getSymbolSlug(currencyIn)\r\n      const symbolOut = getSymbolSlug(currencyOut)\r\n      if (symbolIn && symbolOut && chainId) {\r\n        navigate(`/swap/${networkInfo.route}/${symbolIn}-to-${symbolOut}`)\r\n      }\r\n    },\r\n    [navigate, networkInfo, chainId],\r\n  )\r\n\r\n  const onSelectSuggestedPair = useCallback(\r\n    (fromToken: Currency | undefined, toToken: Currency | undefined, amount: string) => {\r\n      if (fromToken) onCurrencySelection(Field.INPUT, fromToken)\r\n      if (toToken) onCurrencySelection(Field.OUTPUT, toToken)\r\n      if (amount) handleTypeInput(amount)\r\n    },\r\n    [handleTypeInput, onCurrencySelection],\r\n  )\r\n\r\n  const tokenImports: Token[] = useUserAddedTokens()\r\n  const prevTokenImports = usePrevious(tokenImports) || []\r\n\r\n  useEffect(() => {\r\n    const { network } = getUrlMatchParams()\r\n    const isChangeNetwork = network !== networkInfo.route\r\n    if (isChangeNetwork) return\r\n\r\n    // when import/remove token\r\n    const isRemoved = prevTokenImports?.length > tokenImports.length\r\n    const addressIn = currencyIn?.wrapped?.address\r\n    const addressOut = currencyOut?.wrapped?.address\r\n\r\n    if (isRemoved) {\r\n      // removed token => deselect input\r\n      const tokenRemoved = prevTokenImports.filter(\r\n        token => !tokenImports.find(token2 => token2.address === token.address),\r\n      )\r\n      tokenRemoved.forEach(({ address }: Token) => {\r\n        if (address === addressIn || !currencyIn) {\r\n          onResetSelectCurrency(Field.INPUT)\r\n        }\r\n        if (address === addressOut || !currencyOut) {\r\n          onResetSelectCurrency(Field.OUTPUT)\r\n        }\r\n      })\r\n    }\r\n    // import token\r\n    else if (tokenImports.find(({ address }: Token) => address === addressIn || address === addressOut)) {\r\n      refIsImportUserToken.current = true\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tokenImports])\r\n\r\n  const initialTotalTokenDefault = useRef<number | null>(null)\r\n\r\n  useEffect(() => {\r\n    checkAutoSelectTokenFromUrl()\r\n    initialTotalTokenDefault.current = Object.keys(defaultTokens).length // it will be equal with tokenImports.length\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const isLoadedTokenDefault = account\r\n    ? Object.keys(defaultTokens).length > tokenImports.length\r\n    : initialTotalTokenDefault.current !== null && Object.keys(defaultTokens).length > initialTotalTokenDefault.current //\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * defaultTokens change only when:\r\n     * - the first time get data\r\n     * - change network\r\n     * - import/remove token */\r\n    if (refIsCheckNetworkAutoSelect.current && !refIsImportUserToken.current && isLoadedTokenDefault) {\r\n      findTokenPairFromUrl()\r\n    }\r\n    refIsImportUserToken.current = false\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [defaultTokens, refIsCheckNetworkAutoSelect.current])\r\n\r\n  useEffect(() => {\r\n    if (isSelectCurrencyManually) syncUrl(currencyIn, currencyOut) // when we select token manual\r\n  }, [currencyIn, currencyOut, isSelectCurrencyManually, syncUrl])\r\n\r\n  // swap?inputCurrency=xxx&outputCurrency=yyy. xxx yyy not exist in chain => remove params => select default pair\r\n\r\n  const checkParamsWrong = () => {\r\n    if (isPairNotfound && !currencyIn && !currencyOut) {\r\n      const newQuery = { ...qs }\r\n      delete newQuery.inputCurrency\r\n      delete newQuery.outputCurrency\r\n      history.replace({\r\n        search: stringify(newQuery),\r\n      })\r\n    }\r\n  }\r\n\r\n  const refCheckParamWrong = useRef(checkParamsWrong)\r\n  refCheckParamWrong.current = checkParamsWrong\r\n  useEffect(() => {\r\n    refCheckParamWrong.current()\r\n  }, [chainId])\r\n\r\n  useEffect(() => {\r\n    if (isExpertMode) {\r\n      mixpanelHandler(MIXPANEL_TYPE.ADVANCED_MODE_ON)\r\n    }\r\n  }, [isExpertMode, mixpanelHandler])\r\n\r\n  const [rawSlippage, setRawSlippage] = useUserSlippageTolerance()\r\n\r\n  const isStableCoinSwap =\r\n    INPUT?.currencyId &&\r\n    OUTPUT?.currencyId &&\r\n    chainId &&\r\n    STABLE_COINS_ADDRESS[chainId].includes(INPUT?.currencyId) &&\r\n    STABLE_COINS_ADDRESS[chainId].includes(OUTPUT?.currencyId)\r\n\r\n  const rawSlippageRef = useRef(rawSlippage)\r\n  rawSlippageRef.current = rawSlippage\r\n\r\n  useEffect(() => {\r\n    if (isStableCoinSwap && rawSlippageRef.current > 10) {\r\n      setRawSlippage(10)\r\n    }\r\n    if (!isStableCoinSwap && rawSlippageRef.current === 10) {\r\n      setRawSlippage(50)\r\n    }\r\n  }, [isStableCoinSwap, setRawSlippage])\r\n\r\n  const shareUrl = useMemo(() => {\r\n    return `${window.location.origin}/swap/${networkInfo.route}${\r\n      currencyIn && currencyOut\r\n        ? `?${stringify({\r\n            inputCurrency: currencyId(currencyIn, chainId),\r\n            outputCurrency: currencyId(currencyOut, chainId),\r\n          })}`\r\n        : ''\r\n    }`\r\n  }, [networkInfo.route, currencyIn, currencyOut, chainId])\r\n\r\n  const { isInWhiteList: isPairInWhiteList, canonicalUrl } = checkPairInWhiteList(\r\n    chainId,\r\n    getSymbolSlug(currencyIn),\r\n    getSymbolSlug(currencyOut),\r\n  )\r\n\r\n  const shouldRenderTokenInfo = isShowTokenInfoSetting && currencyIn && currencyOut && isPairInWhiteList\r\n\r\n  const isShowModalImportToken =\r\n    isLoadedTokenDefault && importTokensNotInDefault.length > 0 && (!dismissTokenWarning || showingPairSuggestionImport)\r\n\r\n  const isLargeSwap = useMemo((): boolean => {\r\n    return false // todo: not used for current release yet\r\n    // if these line is 6 months old, feel free to delete it\r\n    /*\r\n    if (!isSolana) return false\r\n    if (!trade) return false\r\n    try {\r\n      return trade.swaps.some(swapPath =>\r\n        swapPath.some(swap => {\r\n          // return swapAmountInUsd / swap.reserveUsd > 1%\r\n          //  =  (swap.swapAmount / 10**decimal * tokenIn.price) / swap.reserveUsd > 1%\r\n          //  = swap.swapAmount * tokenIn.price / (10**decimal * swap.reserveUsd) > 1%\r\n          //  = 10**decimal * swap.reserveUsd / (swap.swapAmount * tokenIn.price) < 100\r\n          const tokenIn = trade.tokens[swap.tokenIn]\r\n          if (!tokenIn || !tokenIn.decimals) return false\r\n\r\n          return JSBI.lessThan(\r\n            JSBI.divide(\r\n              JSBI.multiply(\r\n                JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(tokenIn.decimals + 20)),\r\n                JSBI.BigInt(swap.reserveUsd * 10 ** 20),\r\n              ),\r\n              JSBI.multiply(JSBI.BigInt(tokenIn.price * 10 ** 20), JSBI.BigInt(Number(swap.swapAmount) * 10 ** 20)),\r\n            ),\r\n            JSBI.BigInt(100),\r\n          )\r\n        }),\r\n      )\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [isSolana, trade])\r\n  */\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/**\r\n       * /swap/bnb/knc-to-usdt vs /swap/bnb/usdt-to-knc has same content\r\n       * => add canonical link that specify which is main page, => /swap/bnb/knc-to-usdt\r\n       */}\r\n      <SEOSwap canonicalUrl={canonicalUrl} />\r\n      <TutorialSwap />\r\n      <TokenWarningModal\r\n        isOpen={isShowModalImportToken}\r\n        tokens={importTokensNotInDefault}\r\n        onConfirm={handleConfirmTokenWarning}\r\n        onDismiss={handleDismissTokenWarning}\r\n      />\r\n      <PageWrapper>\r\n        <Banner />\r\n        {chainId !== ChainId.ETHW && <TopTrendingSoonTokensInCurrentNetwork />}\r\n        <Container>\r\n          <SwapFormWrapper isShowTutorial={isShowTutorial}>\r\n            <RowBetween mb={'16px'}>\r\n              <TabContainer>\r\n                <TabWrapper>\r\n                  <Tab onClick={() => setActiveTab(TAB.SWAP)} isActive={activeTab === TAB.SWAP}>\r\n                    <Text fontSize={20} fontWeight={500}>\r\n                      <Trans>Swap</Trans>\r\n                    </Text>\r\n                  </Tab>\r\n                </TabWrapper>\r\n              </TabContainer>\r\n\r\n              <SwapFormActions>\r\n                <Tutorial\r\n                  type={TutorialType.SWAP}\r\n                  customIcon={\r\n                    <StyledActionButtonSwapForm>\r\n                      <TutorialIcon />\r\n                    </StyledActionButtonSwapForm>\r\n                  }\r\n                />\r\n                {chainId !== ChainId.ETHW && (\r\n                  <MobileTokenInfo\r\n                    currencies={currencies}\r\n                    onClick={() => setActiveTab(prev => (prev === TAB.INFO ? TAB.SWAP : TAB.INFO))}\r\n                  />\r\n                )}\r\n                <ShareButtonWithModal\r\n                  url={shareUrl}\r\n                  onShared={() => {\r\n                    mixpanelHandler(MIXPANEL_TYPE.TOKEN_SWAP_LINK_SHARED)\r\n                  }}\r\n                />\r\n                <StyledActionButtonSwapForm\r\n                  active={activeTab === TAB.SETTINGS}\r\n                  onClick={() => setActiveTab(prev => (prev === TAB.SETTINGS ? TAB.SWAP : TAB.SETTINGS))}\r\n                  aria-label=\"Swap Settings\"\r\n                >\r\n                  <MouseoverTooltip\r\n                    text={!isExpertMode ? <Trans>Settings</Trans> : <Trans>Advanced mode is on!</Trans>}\r\n                    placement=\"top\"\r\n                    width=\"fit-content\"\r\n                  >\r\n                    <span id={TutorialIds.BUTTON_SETTING_SWAP_FORM}>\r\n                      <TransactionSettingsIcon fill={isExpertMode ? theme.warning : theme.subText} />\r\n                    </span>\r\n                  </MouseoverTooltip>\r\n                </StyledActionButtonSwapForm>\r\n                {/* <TransactionSettings isShowDisplaySettings /> */}\r\n              </SwapFormActions>\r\n            </RowBetween>\r\n\r\n            {chainId !== ChainId.ETHW && !isSolana && (\r\n              <RowBetween mb={'16px'}>\r\n                <PairSuggestion\r\n                  ref={refSuggestPair}\r\n                  onSelectSuggestedPair={onSelectSuggestedPair}\r\n                  setShowModalImportToken={setShowingPairSuggestionImport}\r\n                />\r\n              </RowBetween>\r\n            )}\r\n\r\n            <AppBodyWrapped data-highlight={shouldHighlightSwapBox} id={TutorialIds.SWAP_FORM}>\r\n              {activeTab === TAB.SWAP && (\r\n                <>\r\n                  <Wrapper id={TutorialIds.SWAP_FORM_CONTENT}>\r\n                    <ConfirmSwapModal\r\n                      isOpen={showConfirm}\r\n                      trade={trade}\r\n                      originalTrade={tradeToConfirm}\r\n                      onAcceptChanges={handleAcceptChanges}\r\n                      attemptingTxn={attemptingTxn}\r\n                      txHash={txHash}\r\n                      recipient={recipient}\r\n                      allowedSlippage={allowedSlippage}\r\n                      onConfirm={handleSwap}\r\n                      swapErrorMessage={swapErrorMessage}\r\n                      onDismiss={handleConfirmDismiss}\r\n                      tokenAddToMetaMask={currencyOut}\r\n                    />\r\n\r\n                    <Flex flexDirection=\"column\" sx={{ gap: '0.75rem' }}>\r\n                      <CurrencyInputPanel\r\n                        value={formattedAmounts[Field.INPUT]}\r\n                        positionMax=\"top\"\r\n                        currency={currencyIn}\r\n                        onUserInput={handleTypeInput}\r\n                        onMax={handleMaxInput}\r\n                        onHalf={isSolanaUnwrap ? null : handleHalfInput}\r\n                        onCurrencySelect={handleInputSelect}\r\n                        otherCurrency={currencyOut}\r\n                        id=\"swap-currency-input\"\r\n                        showCommonBases={true}\r\n                        estimatedUsd={\r\n                          trade?.amountInUsd ? `${formattedNum(trade.amountInUsd.toString(), true)}` : undefined\r\n                        }\r\n                      />\r\n                      <AutoRow justify=\"space-between\">\r\n                        <Flex alignItems=\"center\">\r\n                          {!showWrap && (\r\n                            <>\r\n                              <RefreshButton isConfirming={showConfirm} trade={trade} onRefresh={onRefresh} />\r\n                              <TradePrice\r\n                                price={trade?.executionPrice}\r\n                                showInverted={showInverted}\r\n                                setShowInverted={setShowInverted}\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Flex>\r\n\r\n                        <ArrowWrapper rotated={rotate} onClick={handleRotateClick}>\r\n                          <SwapIcon size={24} color={theme.subText} />\r\n                        </ArrowWrapper>\r\n                      </AutoRow>\r\n                      <Box sx={{ position: 'relative' }}>\r\n                        {tradeComparer?.tradeSaved?.usd && comparedDex && (\r\n                          <KyberTag>\r\n                            <Trans>You save</Trans>{' '}\r\n                            {formattedNum(tradeComparer.tradeSaved.usd, true) +\r\n                              ` (${\r\n                                tradeComparer?.tradeSaved?.percent &&\r\n                                (tradeComparer.tradeSaved.percent < 0.01\r\n                                  ? '<0.01'\r\n                                  : tradeComparer.tradeSaved.percent.toFixed(2))\r\n                              }%)`}\r\n                            <InfoHelper\r\n                              text={\r\n                                <Text>\r\n                                  <Trans>\r\n                                    The amount you save compared to{' '}\r\n                                    <Text as=\"span\" color={theme.warning}>\r\n                                      {comparedDex.name}\r\n                                    </Text>\r\n                                    .\r\n                                  </Trans>{' '}\r\n                                  <Trans>\r\n                                    <Text color={theme.primary} fontWeight={500} as=\"span\">\r\n                                      KyberSwap\r\n                                    </Text>{' '}\r\n                                    gets you the best token rates\r\n                                  </Trans>\r\n                                </Text>\r\n                              }\r\n                              size={14}\r\n                              color={theme.apr}\r\n                            />\r\n                          </KyberTag>\r\n                        )}\r\n\r\n                        <CurrencyInputPanel\r\n                          disabledInput\r\n                          value={formattedAmounts[Field.OUTPUT]}\r\n                          onUserInput={handleTypeOutput}\r\n                          onMax={null}\r\n                          onHalf={null}\r\n                          currency={currencyOut}\r\n                          onCurrencySelect={handleOutputSelect}\r\n                          otherCurrency={currencyIn}\r\n                          id=\"swap-currency-output\"\r\n                          showCommonBases={true}\r\n                          estimatedUsd={\r\n                            trade?.amountOutUsd ? `${formattedNum(trade.amountOutUsd.toString(), true)}` : undefined\r\n                          }\r\n                        />\r\n                      </Box>\r\n\r\n                      {isExpertMode && isEVM && !showWrap && (\r\n                        <AddressInputPanel id=\"recipient\" value={recipient} onChange={handleRecipientChange} />\r\n                      )}\r\n\r\n                      {!showWrap && (\r\n                        <Flex\r\n                          alignItems=\"center\"\r\n                          fontSize={12}\r\n                          color={theme.subText}\r\n                          onClick={toggleSettings}\r\n                          width=\"fit-content\"\r\n                        >\r\n                          <ClickableText color={theme.subText} fontWeight={500}>\r\n                            <Trans>Max Slippage:</Trans>&nbsp;\r\n                            {allowedSlippage / 100}%\r\n                          </ClickableText>\r\n                        </Flex>\r\n                      )}\r\n                    </Flex>\r\n\r\n                    <TradeTypeSelection />\r\n\r\n                    {chainId !== ChainId.ETHW && (\r\n                      <TrendingSoonTokenBanner currencies={currencies} style={{ marginTop: '24px' }} />\r\n                    )}\r\n\r\n                    {isPriceImpactInvalid ? (\r\n                      <PriceImpactHigh>\r\n                        <AlertTriangle color={theme.warning} size={16} style={{ marginRight: '10px' }} />\r\n                        <Trans>Unable to calculate Price Impact</Trans>\r\n                        <InfoHelper text={t`Turn on Advanced Mode to trade`} color={theme.text} />\r\n                      </PriceImpactHigh>\r\n                    ) : (\r\n                      isPriceImpactHigh && (\r\n                        <PriceImpactHigh veryHigh={isPriceImpactVeryHigh}>\r\n                          <AlertTriangle\r\n                            color={isPriceImpactVeryHigh ? theme.red : theme.warning}\r\n                            size={16}\r\n                            style={{ marginRight: '10px' }}\r\n                          />\r\n                          {isPriceImpactVeryHigh ? (\r\n                            <Trans>Price Impact is Very High</Trans>\r\n                          ) : (\r\n                            <Trans>Price Impact is High</Trans>\r\n                          )}\r\n                          <InfoHelper\r\n                            text={\r\n                              isExpertMode\r\n                                ? t`You have turned on Advanced Mode from settings. Trades with high price impact can be executed`\r\n                                : t`Turn on Advanced Mode from settings to execute trades with high price impact`\r\n                            }\r\n                            color={theme.text}\r\n                          />\r\n                        </PriceImpactHigh>\r\n                      )\r\n                    )}\r\n                    {isLargeSwap && (\r\n                      <PriceImpactHigh>\r\n                        <AlertTriangle color={theme.warning} size={24} style={{ marginRight: '10px' }} />\r\n                        <Trans>\r\n                          Your transaction may not be successful. We recommend increasing the slippage for this trade\r\n                        </Trans>\r\n                      </PriceImpactHigh>\r\n                    )}\r\n                    <BottomGrouping>\r\n                      {!account ? (\r\n                        <ButtonLight onClick={toggleWalletModal}>\r\n                          <Trans>Connect Wallet</Trans>\r\n                        </ButtonLight>\r\n                      ) : showWrap ? (\r\n                        <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                          {wrapInputError ??\r\n                            (wrapType === WrapType.WRAP ? (\r\n                              <Trans>Wrap</Trans>\r\n                            ) : wrapType === WrapType.UNWRAP ? (\r\n                              <Trans>Unwrap</Trans>\r\n                            ) : null)}\r\n                        </ButtonPrimary>\r\n                      ) : noRoute && userHasSpecifiedInputOutput ? (\r\n                        <GreyCard style={{ textAlign: 'center', borderRadius: '999px', padding: '12px' }}>\r\n                          <TYPE.main>\r\n                            <Trans>Insufficient liquidity for this trade.</Trans>\r\n                          </TYPE.main>\r\n                        </GreyCard>\r\n                      ) : showApproveFlow ? (\r\n                        <>\r\n                          <RowBetween>\r\n                            <ButtonConfirmed\r\n                              onClick={approveCallback}\r\n                              disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                              width=\"48%\"\r\n                              altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\r\n                              confirmed={approval === ApprovalState.APPROVED}\r\n                            >\r\n                              {approval === ApprovalState.PENDING ? (\r\n                                <AutoRow gap=\"6px\" justify=\"center\">\r\n                                  <Trans>Approving</Trans> <Loader stroke=\"white\" />\r\n                                </AutoRow>\r\n                              ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                                <Trans>Approved</Trans>\r\n                              ) : (\r\n                                <Trans>Approve ${currencyIn?.symbol}</Trans>\r\n                              )}\r\n                            </ButtonConfirmed>\r\n                            <ButtonError\r\n                              onClick={() => {\r\n                                // TODO check this button, it will never run, is it?\r\n                                // console.error('This will never be run')\r\n                                mixpanelSwapInit()\r\n                                if (isExpertMode) {\r\n                                  handleSwap()\r\n                                } else {\r\n                                  setSwapState({\r\n                                    tradeToConfirm: trade,\r\n                                    attemptingTxn: false,\r\n                                    swapErrorMessage: undefined,\r\n                                    showConfirm: true,\r\n                                    txHash: undefined,\r\n                                  })\r\n                                }\r\n                              }}\r\n                              width=\"48%\"\r\n                              id=\"swap-button\"\r\n                              disabled={!!swapInputError || approval !== ApprovalState.APPROVED}\r\n                              backgroundColor={\r\n                                isPriceImpactHigh || isPriceImpactInvalid\r\n                                  ? isPriceImpactVeryHigh\r\n                                    ? theme.red\r\n                                    : theme.warning\r\n                                  : undefined\r\n                              }\r\n                              color={isPriceImpactHigh || isPriceImpactInvalid ? theme.white : undefined}\r\n                            >\r\n                              <Text fontSize={16} fontWeight={500}>\r\n                                {isPriceImpactHigh ? <Trans>Swap Anyway</Trans> : <Trans>Swap</Trans>}\r\n                              </Text>\r\n                            </ButtonError>\r\n                          </RowBetween>\r\n                          <Column style={{ marginTop: '1rem' }}>\r\n                            <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n                          </Column>\r\n                        </>\r\n                      ) : isLoading ? (\r\n                        <GreyCard style={{ textAlign: 'center', borderRadius: '999px', padding: '12px' }}>\r\n                          <Text color={theme.subText} fontSize=\"14px\">\r\n                            <Dots>\r\n                              <Trans>Calculating best route</Trans>\r\n                            </Dots>\r\n                          </Text>\r\n                        </GreyCard>\r\n                      ) : (\r\n                        <ButtonError\r\n                          onClick={() => {\r\n                            mixpanelSwapInit()\r\n                            if (isExpertMode) {\r\n                              handleSwap()\r\n                            } else {\r\n                              setSwapState({\r\n                                tradeToConfirm: trade,\r\n                                attemptingTxn: false,\r\n                                swapErrorMessage: undefined,\r\n                                showConfirm: true,\r\n                                txHash: undefined,\r\n                              })\r\n                            }\r\n                          }}\r\n                          id=\"swap-button\"\r\n                          disabled={\r\n                            !!swapInputError ||\r\n                            !!swapCallbackError ||\r\n                            approval !== ApprovalState.APPROVED ||\r\n                            (!isExpertMode && (isPriceImpactVeryHigh || isPriceImpactInvalid)) ||\r\n                            (isExpertMode && isSolana && !encodeSolana)\r\n                          }\r\n                          style={{\r\n                            border: 'none',\r\n                            ...(!(\r\n                              !!swapInputError ||\r\n                              !!swapCallbackError ||\r\n                              approval !== ApprovalState.APPROVED ||\r\n                              (!isExpertMode && (isPriceImpactVeryHigh || isPriceImpactInvalid)) ||\r\n                              (isExpertMode && isSolana && !encodeSolana)\r\n                            ) &&\r\n                            (isPriceImpactHigh || isPriceImpactInvalid)\r\n                              ? { background: isPriceImpactVeryHigh ? theme.red : theme.warning, color: theme.white }\r\n                              : {}),\r\n                          }}\r\n                        >\r\n                          <Text fontWeight={500}>\r\n                            {swapInputError ? (\r\n                              swapInputError\r\n                            ) : approval !== ApprovalState.APPROVED ? (\r\n                              <Dots>\r\n                                <Trans>Checking allowance</Trans>\r\n                              </Dots>\r\n                            ) : isExpertMode && isSolana && !encodeSolana ? (\r\n                              <Dots>\r\n                                <Trans>Checking accounts</Trans>\r\n                              </Dots>\r\n                            ) : isPriceImpactHigh || isPriceImpactInvalid ? (\r\n                              <Trans>Swap Anyway</Trans>\r\n                            ) : (\r\n                              <Trans>Swap</Trans>\r\n                            )}\r\n                          </Text>\r\n                        </ButtonError>\r\n                      )}\r\n\r\n                      {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n                    </BottomGrouping>\r\n                  </Wrapper>\r\n                </>\r\n              )}\r\n              {activeTab === TAB.INFO && <TokenInfo currencies={currencies} onBack={() => setActiveTab(TAB.SWAP)} />}\r\n              {activeTab === TAB.SETTINGS && (\r\n                <SettingsPanel\r\n                  onBack={() => setActiveTab(TAB.SWAP)}\r\n                  onClickLiquiditySources={() => setActiveTab(TAB.LIQUIDITY_SOURCES)}\r\n                  onClickGasPriceTracker={() => setActiveTab(TAB.GAS_PRICE_TRACKER)}\r\n                />\r\n              )}\r\n              {activeTab === TAB.GAS_PRICE_TRACKER && (\r\n                <GasPriceTrackerPanel onBack={() => setActiveTab(TAB.SETTINGS)} />\r\n              )}\r\n              {activeTab === TAB.LIQUIDITY_SOURCES && (\r\n                <LiquiditySourcesPanel onBack={() => setActiveTab(TAB.SETTINGS)} />\r\n              )}\r\n            </AppBodyWrapped>\r\n            <AdvancedSwapDetailsDropdown trade={trade} feeConfig={feeConfig} />\r\n          </SwapFormWrapper>\r\n\r\n          {(isShowLiveChart || isShowTradeRoutes || shouldRenderTokenInfo) && (\r\n            <InfoComponentsWrapper>\r\n              {isShowLiveChart && (\r\n                <LiveChartWrapper>\r\n                  <Suspense\r\n                    fallback={\r\n                      <Skeleton\r\n                        height=\"100%\"\r\n                        baseColor={theme.background}\r\n                        highlightColor={theme.buttonGray}\r\n                        borderRadius=\"1rem\"\r\n                      />\r\n                    }\r\n                  >\r\n                    <LiveChart onRotateClick={handleRotateClick} currencies={currencies} />\r\n                  </Suspense>\r\n                </LiveChartWrapper>\r\n              )}\r\n              {isShowTradeRoutes && (\r\n                <RoutesWrapper isOpenChart={isShowLiveChart}>\r\n                  <Flex flexDirection=\"column\" width=\"100%\">\r\n                    <Flex alignItems={'center'}>\r\n                      <RoutingIconWrapper />\r\n                      <Text fontSize={20} fontWeight={500} color={theme.subText}>\r\n                        <Trans>Your trade route</Trans>\r\n                      </Text>\r\n                    </Flex>\r\n                    <Suspense\r\n                      fallback={\r\n                        <Skeleton\r\n                          height=\"100px\"\r\n                          baseColor={theme.background}\r\n                          highlightColor={theme.buttonGray}\r\n                          borderRadius=\"1rem\"\r\n                        />\r\n                      }\r\n                    >\r\n                      <Routing trade={trade} currencies={currencies} formattedAmounts={formattedAmounts} />\r\n                    </Suspense>\r\n                  </Flex>\r\n                </RoutesWrapper>\r\n              )}\r\n              {shouldRenderTokenInfo ? <TokenInfoV2 currencyIn={currencyIn} currencyOut={currencyOut} /> : null}\r\n            </InfoComponentsWrapper>\r\n          )}\r\n        </Container>\r\n        <Flex justifyContent=\"center\">\r\n          <SwitchLocaleLinkWrapper>\r\n            <SwitchLocaleLink />\r\n          </SwitchLocaleLinkWrapper>\r\n        </Flex>\r\n      </PageWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount } from '@kyberswap/ks-sdk-core'\r\nimport { t } from '@lingui/macro'\r\nimport JSBI from 'jsbi'\r\nimport { useMemo } from 'react'\r\n\r\nimport { BAD_RECIPIENT_ADDRESSES } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { useTradeExactInV2 } from 'hooks/Trades'\r\nimport useENS from 'hooks/useENS'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { useCurrencyBalances } from 'state/wallet/hooks'\r\nimport { isAddress } from 'utils'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\n\r\nimport { Field } from './actions'\r\nimport { tryParseAmount, useSwapState } from './hooks'\r\nimport { AggregationComparer } from './types'\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfoV2(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\r\n  parsedAmount: CurrencyAmount<Currency> | undefined\r\n  v2Trade: Aggregator | undefined\r\n  tradeComparer: AggregationComparer | undefined\r\n  inputError?: string\r\n  onRefresh: (resetRoute: boolean, minimumLoadingTime: number) => void\r\n  loading: boolean\r\n  isPairNotfound: boolean\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null || recipient === '' ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(\r\n    useMemo(() => [inputCurrency ?? undefined, outputCurrency ?? undefined], [inputCurrency, outputCurrency]),\r\n  )\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n\r\n  const currency = isExactIn ? inputCurrency : outputCurrency\r\n  const parsedAmount = useMemo(() => {\r\n    return tryParseAmount(typedValue, currency ?? undefined)\r\n  }, [typedValue, currency])\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const {\r\n    trade: bestTradeExactIn,\r\n    comparer: baseTradeComparer,\r\n    onUpdateCallback,\r\n    loading,\r\n  } = useTradeExactInV2(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined, to)\r\n\r\n  const tradeComparer = useMemo((): AggregationComparer | undefined => {\r\n    if (\r\n      bestTradeExactIn?.outputAmount?.greaterThan(JSBI.BigInt(0)) &&\r\n      baseTradeComparer?.outputAmount?.greaterThan(JSBI.BigInt(0))\r\n      // && baseTradeComparer?.outputPriceUSD\r\n    ) {\r\n      try {\r\n        const diffAmount = bestTradeExactIn.outputAmount.subtract(baseTradeComparer.outputAmount)\r\n        const diffAmountUSD = bestTradeExactIn.receivedUsd - parseFloat(baseTradeComparer.receivedUsd)\r\n        if (\r\n          diffAmount.greaterThan(JSBI.BigInt(0)) &&\r\n          bestTradeExactIn.receivedUsd > 0 &&\r\n          parseFloat(baseTradeComparer.receivedUsd) > 0 &&\r\n          diffAmountUSD > 0\r\n        ) {\r\n          const savedUsd = diffAmountUSD\r\n          // const savedUsd = parseFloat(diffAmount.toFixed()) * parseFloat(baseTradeComparer.outputPriceUSD.toString())\r\n          if (savedUsd) {\r\n            return Object.assign({}, baseTradeComparer, {\r\n              tradeSaved: {\r\n                usd: savedUsd.toString(),\r\n                percent: (savedUsd / bestTradeExactIn.receivedUsd) * 100,\r\n              },\r\n            })\r\n          }\r\n        }\r\n      } catch (e) {}\r\n    }\r\n    return baseTradeComparer ?? undefined\r\n  }, [bestTradeExactIn, baseTradeComparer])\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : undefined\r\n\r\n  const balanceInput = relevantTokenBalances[0]\r\n  const balanceOutput = relevantTokenBalances[1]\r\n  const currencyBalances = useMemo(() => {\r\n    return {\r\n      [Field.INPUT]: balanceInput,\r\n      [Field.OUTPUT]: balanceOutput,\r\n    }\r\n  }, [balanceInput, balanceOutput])\r\n\r\n  const currencies: { [field in Field]?: Currency } = useMemo(() => {\r\n    return {\r\n      [Field.INPUT]: inputCurrency ?? undefined,\r\n      [Field.OUTPUT]: outputCurrency ?? undefined,\r\n    }\r\n  }, [inputCurrency, outputCurrency])\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t`Connect wallet`\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    if (typedValue) inputError = inputError ?? t`Invalid amount`\r\n    else inputError = inputError ?? t`Enter an amount`\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t`Select a token`\r\n  }\r\n\r\n  const formattedTo = isAddress(chainId, to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? t`Enter a recipient`\r\n  } else {\r\n    if (BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1) {\r\n      inputError = inputError ?? t`Invalid recipient`\r\n    }\r\n  }\r\n\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => (v2Trade && allowedSlippage ? computeSlippageAdjustedAmounts(v2Trade, allowedSlippage) : null),\r\n    [allowedSlippage, v2Trade],\r\n  )\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [currencyBalances[Field.INPUT], slippageAdjustedAmounts?.[Field.INPUT]]\r\n\r\n  if (amountIn && ((balanceIn && balanceIn.lessThan(amountIn)) || !balanceIn)) {\r\n    inputError = t`Insufficient ${amountIn.currency.symbol} balance`\r\n  }\r\n\r\n  // inputCurrency/outputCurrency null is loading, undefined is not found, see useToken for detail\r\n  const isPairNotfound = inputCurrency === undefined && outputCurrency === undefined\r\n\r\n  return useMemo(\r\n    () => ({\r\n      currencies,\r\n      currencyBalances,\r\n      parsedAmount,\r\n      v2Trade: v2Trade ?? undefined,\r\n      tradeComparer,\r\n      inputError,\r\n      onRefresh: onUpdateCallback,\r\n      loading,\r\n      isPairNotfound,\r\n    }),\r\n    [\r\n      currencies,\r\n      currencyBalances,\r\n      inputError,\r\n      loading,\r\n      onUpdateCallback,\r\n      parsedAmount,\r\n      tradeComparer,\r\n      v2Trade,\r\n      isPairNotfound,\r\n    ],\r\n  )\r\n}\r\n","import { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { MultiChainTokenInfo } from 'pages/Bridge/type'\r\nimport { AppDispatch, AppState } from 'state'\r\n\r\nimport {\r\n  BridgeStateParams,\r\n  BridgeStatePoolParams,\r\n  resetBridgeState as resetBridgeStateAction,\r\n  setBridgePoolInfo as setBridgePoolInfoAction,\r\n  setBridgeState,\r\n} from './actions'\r\nimport { BridgeState } from './reducer'\r\n\r\nexport function useBridgeState(): [BridgeState, (value: BridgeStateParams) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const bridge = useSelector((state: AppState) => state.bridge)\r\n  const setState = useCallback((data: BridgeStateParams) => dispatch(setBridgeState(data)), [dispatch])\r\n  return [bridge, setState]\r\n}\r\n\r\nexport function useBridgeStateHandler() {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const resetBridgeState = useCallback(() => dispatch(resetBridgeStateAction()), [dispatch])\r\n  const setBridgePoolInfo = useCallback(\r\n    (data: BridgeStatePoolParams) => dispatch(setBridgePoolInfoAction(data)),\r\n    [dispatch],\r\n  )\r\n\r\n  const setBridgeState = useBridgeState()[1]\r\n  return { resetBridgeState, setBridgeState, setBridgePoolInfo }\r\n}\r\n\r\nexport type OutputBridgeInfo = {\r\n  fee: string | number\r\n  outputAmount: string | number\r\n  time: string\r\n  inputAmount: string\r\n}\r\nfunction calcReceiveValueAndFee(inputBridgeValue: string, tokenOut: MultiChainTokenInfo | undefined): OutputBridgeInfo {\r\n  const inputAmount = Number(inputBridgeValue)\r\n  if (inputAmount && tokenOut) {\r\n    const SwapFeeRatePerMillion = Number(tokenOut.SwapFeeRatePerMillion)\r\n    const MaximumSwapFee = Number(tokenOut.MaximumSwapFee)\r\n    const MinimumSwapFee = Number(tokenOut.MinimumSwapFee)\r\n    const BaseFeePercent = Number(tokenOut.BaseFeePercent)\r\n    const minFee = BaseFeePercent ? (MinimumSwapFee / (100 + BaseFeePercent)) * 100 : MinimumSwapFee\r\n    const baseFee = BaseFeePercent ? (minFee * BaseFeePercent) / 100 : 0\r\n\r\n    let fee = (inputAmount * SwapFeeRatePerMillion) / 100 // SwapFeeRatePerMillion: 0 or 0.1\r\n    if (fee < minFee) {\r\n      fee = minFee\r\n    } else if (fee > MaximumSwapFee) {\r\n      fee = MaximumSwapFee\r\n    }\r\n    const value = inputAmount - fee - baseFee\r\n    if (value > 0) {\r\n      return {\r\n        fee,\r\n        outputAmount: value,\r\n        time: '~3-30 mins',\r\n        inputAmount: inputBridgeValue,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    fee: '',\r\n    outputAmount: '',\r\n    time: '--',\r\n    inputAmount: inputBridgeValue,\r\n  }\r\n}\r\n\r\nexport function useBridgeOutputValue(inputBridgeValue: string) {\r\n  const [{ tokenInfoOut }] = useBridgeState()\r\n  return useMemo(() => {\r\n    return calcReceiveValueAndFee(inputBridgeValue, tokenInfoOut)\r\n  }, [inputBridgeValue, tokenInfoOut])\r\n}\r\n","import { Fraction } from '@kyberswap/ks-sdk-core'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport JSBI from 'jsbi'\r\n\r\nimport { BIPS_BASE, RESERVE_USD_DECIMALS } from 'constants/index'\r\nimport { FeeConfig } from 'hooks/useSwapV2Callback'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { formattedNum } from 'utils/index'\r\n\r\nimport { toFixed } from './numbers'\r\n\r\n/**\r\n * Get Fee Amount in a Trade (unit: USD)\r\n * @param trade\r\n * @param feeConfig\r\n */\r\nexport function getFormattedFeeAmountUsd(trade: Aggregator, feeConfig: FeeConfig | undefined) {\r\n  if (feeConfig) {\r\n    const amountInUsd = new Fraction(\r\n      parseUnits(toFixed(trade.amountInUsd), RESERVE_USD_DECIMALS).toString(),\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(RESERVE_USD_DECIMALS)),\r\n    )\r\n    if (amountInUsd) {\r\n      // feeAmount might < 1.\r\n      const feeAmountFraction = new Fraction(\r\n        parseUnits(feeConfig.feeAmount, RESERVE_USD_DECIMALS).toString(),\r\n        JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(RESERVE_USD_DECIMALS)),\r\n      )\r\n      const feeAmountDecimal = feeAmountFraction.divide(BIPS_BASE)\r\n      const feeAmountUsd = amountInUsd.multiply(feeAmountDecimal).toSignificant(RESERVE_USD_DECIMALS)\r\n      return formattedNum(feeAmountUsd, true)\r\n    }\r\n  }\r\n\r\n  return '--'\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { t } from '@lingui/macro'\r\nimport { captureException } from '@sentry/react'\r\nimport { SignerWalletAdapter } from '@solana/wallet-adapter-base'\r\nimport { Transaction, VersionedTransaction } from '@solana/web3.js'\r\nimport { ethers } from 'ethers'\r\n\r\nimport connection from 'state/connection/connection'\r\nimport { SolanaEncode } from 'state/swap/types'\r\nimport { TransactionHistory } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\n// import connection from 'state/connection/connection'\r\nimport { calculateGasMargin } from 'utils'\r\n\r\nexport async function sendEVMTransaction(\r\n  account: string,\r\n  library: ethers.providers.Web3Provider | undefined,\r\n  contractAddress: string,\r\n  encodedData: string,\r\n  value: BigNumber,\r\n  handler?: (response: TransactionResponse) => void,\r\n): Promise<string | undefined> {\r\n  if (!account || !library) return\r\n\r\n  const estimateGasOption = {\r\n    from: account,\r\n    to: contractAddress,\r\n    data: encodedData,\r\n    value,\r\n  }\r\n\r\n  let gasEstimate: ethers.BigNumber | undefined\r\n  try {\r\n    gasEstimate = await library.getSigner().estimateGas(estimateGasOption)\r\n    if (!gasEstimate) throw new Error('gasEstimate is nullish value')\r\n  } catch (error) {\r\n    const e = new Error('Swap failed', { cause: error })\r\n    e.name = 'SwapError'\r\n\r\n    const tmp = JSON.stringify(error)\r\n    const tag = tmp.includes('minTotalAmountOut')\r\n      ? 'minTotalAmountOut'\r\n      : tmp.includes('ERR_LIMIT_OUT')\r\n      ? 'ERR_LIMIT_OUT'\r\n      : tmp.toLowerCase().includes('1inch')\r\n      ? 'call1InchFailed'\r\n      : 'other'\r\n\r\n    captureException(e, {\r\n      level: 'fatal',\r\n      extra: estimateGasOption,\r\n      tags: {\r\n        type: tag,\r\n      },\r\n    })\r\n\r\n    throw new Error('gasEstimate not found: Unexpected error. Please contact support: none of the calls threw an error')\r\n  }\r\n\r\n  const sendTransactionOption = {\r\n    from: account,\r\n    to: contractAddress,\r\n    data: encodedData,\r\n    gasLimit: calculateGasMargin(gasEstimate),\r\n    ...(value.eq('0') ? {} : { value }),\r\n  }\r\n\r\n  try {\r\n    const response = await library.getSigner().sendTransaction(sendTransactionOption)\r\n    handler?.(response)\r\n    return response.hash\r\n  } catch (error) {\r\n    // if the user rejected the tx, pass this along\r\n    if (error?.code === 4001 || error?.code === 'ACTION_REJECTED') {\r\n      throw new Error('Transaction rejected.')\r\n    } else {\r\n      const e = new Error('Swap failed', { cause: error })\r\n      e.name = 'SwapError'\r\n\r\n      const tmp = JSON.stringify(error)\r\n      const tag = tmp.includes('minTotalAmountOut')\r\n        ? 'minTotalAmountOut'\r\n        : tmp.includes('ERR_LIMIT_OUT')\r\n        ? 'ERR_LIMIT_OUT'\r\n        : tmp.toLowerCase().includes('1inch')\r\n        ? 'call1InchFailed'\r\n        : 'other'\r\n\r\n      captureException(e, {\r\n        level: 'error',\r\n        extra: sendTransactionOption,\r\n        tags: {\r\n          type: tag,\r\n        },\r\n      })\r\n\r\n      // Otherwise, the error was unexpected, and we need to convey that.\r\n      throw new Error(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst getInspectTxSolanaUrl = (tx: Transaction | VersionedTransaction | undefined | null) => {\r\n  if (!tx) return ''\r\n  if ('serializeMessage' in tx) return Buffer.concat([Buffer.from([0]), tx.serializeMessage()]).toString('base64')\r\n  if ('serialize' in tx) return Buffer.from(tx.serialize()).toString('base64')\r\n  return ''\r\n}\r\n\r\nexport async function sendSolanaTransactions(\r\n  encode: SolanaEncode,\r\n  solanaWallet: SignerWalletAdapter,\r\n  addTransactionWithType: (tx: TransactionHistory) => void,\r\n  swapData: TransactionHistory,\r\n): Promise<string[] | undefined> {\r\n  if (!encode) return\r\n  if (!encode.swapTx) return\r\n\r\n  const txs: (Transaction | VersionedTransaction)[] = []\r\n\r\n  if (encode.setupTx) {\r\n    txs.push(encode.setupTx)\r\n  }\r\n\r\n  txs.push(encode.swapTx)\r\n\r\n  const populateTx = (\r\n    txs: (Transaction | VersionedTransaction)[],\r\n  ): {\r\n    signedSetupTx: Transaction | undefined\r\n    signedSwapTx: VersionedTransaction\r\n  } => {\r\n    const result: {\r\n      signedSetupTx: Transaction | undefined\r\n      signedSwapTx: VersionedTransaction | undefined\r\n    } = { signedSetupTx: undefined, signedSwapTx: undefined }\r\n    let count = 0\r\n    if (encode.setupTx) result.signedSetupTx = txs[count++] as Transaction\r\n    result.signedSwapTx = txs[count++] as VersionedTransaction\r\n    return result as {\r\n      signedSetupTx: Transaction | undefined\r\n      signedSwapTx: VersionedTransaction\r\n    }\r\n  }\r\n\r\n  console.group('Sending transactions:')\r\n  encode.setupTx && console.info('setup tx:', getInspectTxSolanaUrl(encode.setupTx))\r\n  console.info('swap tx:', getInspectTxSolanaUrl(encode.swapTx))\r\n  console.info('inspector: https://explorer.solana.com/tx/inspector')\r\n  console.groupEnd()\r\n\r\n  try {\r\n    let signedTxs: (Transaction | VersionedTransaction)[]\r\n    try {\r\n      signedTxs = await (solanaWallet as SignerWalletAdapter).signAllTransactions(txs)\r\n    } catch (e) {\r\n      console.log({ e })\r\n      throw e\r\n    }\r\n    const { signedSetupTx, signedSwapTx } = populateTx(signedTxs)\r\n    const txHashs: string[] = []\r\n    let setupHash: string\r\n    if (signedSetupTx) {\r\n      try {\r\n        setupHash = await connection.sendRawTransaction(signedSetupTx.serialize())\r\n        txHashs.push(setupHash)\r\n        addTransactionWithType({\r\n          type: TRANSACTION_TYPE.SETUP,\r\n          hash: setupHash,\r\n          firstTxHash: txHashs[0],\r\n          summary: 'swap ' + swapData.summary,\r\n          arbitrary: {\r\n            index: 1,\r\n            total: signedTxs.length,\r\n            mainTx: swapData,\r\n          },\r\n        })\r\n        await connection.confirmTransaction(setupHash, 'finalized')\r\n      } catch (error) {\r\n        console.error({ error })\r\n        throw new Error('Set up error' + (error.message ? ': ' + error.message : ''))\r\n      }\r\n    }\r\n\r\n    let swapHash: string\r\n    try {\r\n      swapHash = await connection.sendRawTransaction(Buffer.from(signedSwapTx.serialize()))\r\n      txHashs.push(swapHash)\r\n      addTransactionWithType({ ...swapData, hash: swapHash, firstTxHash: txHashs[0] })\r\n    } catch (error) {\r\n      console.error({ error })\r\n      if (error?.message?.endsWith('0x1771')) {\r\n        throw new Error(t`An error occurred. Try refreshing the price rate or increase max slippage`)\r\n      } else if (/0x[0-9a-f]+$/.test(error.message)) {\r\n        const errorCode = error.message.split(' ').slice(-1)[0]\r\n        throw new Error(t`Error encountered. We haven’t send the transaction yet. Error code ${errorCode}`)\r\n      }\r\n      throw new Error(t`Error encountered. We haven’t send the transaction yet.`)\r\n    }\r\n\r\n    return txHashs\r\n  } catch (e) {\r\n    throw e\r\n  }\r\n}\r\n"],"sourceRoot":""}