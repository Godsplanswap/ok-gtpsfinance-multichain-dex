{"version":3,"sources":["utils/aggregationRouting.ts","components/swapv2/Routing.tsx"],"names":["getTradeComposition","trade","chainId","allTokens","swaps","inputTokenAmount","inputAmount","wrapped","calcSwapPercentage","tokenIn","amount","toLowerCase","currency","address","greaterThan","JSBI","BigInt","percent","Percent","quotient","toFixed","parseInt","tokens","defaultToken","Token","WETH","routes","forEach","sorMultiSwap","length","hop","path","isAddressString","tokenOut","push","slug","pools","id","pool","exchange","swapAmount","swapPercentage","index","token","decimals","symbol","name","slice","map","t","join","p","itemIndex","routesGroup","reduce","a","b","subRoutes","route","temp","sub","ind","swapPool","totalSwapAmount","add","sum","x2","ZERO","existed","newSub","p2","same","undefined","Rounding","ROUND_HALF_UP","total","toString","Object","assign","routesV2Length","keys","routesV2","Array","values","splice","flat","e","console","error","formatRoutesV2","Shadow","styled","div","backgroundColor","StyledContainer","theme","border","StyledPair","StyledPairLine","StyledWrapToken","mediaWidth","upToSmall","StyledToken","subText","reverse","css","StyledRoutes","StyledRoute","StyledRouteLine","StyledHops","StyledHop","background","darkMode","StyledExchange","white","black","StyledExchangeStatic","StyledPercent","primary","StyledDot","i","out","StyledWrap","StyledHopChevronRight","StyledHopChevronWrapper","getSwapPercent","routeNumber","val","Math","min","max","RouteRow","scrollRef","useRef","contentRef","shadowRef","allDexes","useAllDexes","handleShadow","useThrottle","element","current","scrollLeft","classList","remove","floor","scrollWidth","clientWidth","useEffect","window","addEventListener","removeEventListener","ref","innerRef","vertical","onScroll","subRoute","arr","item","Fragment","style","marginRight","href","getEtherscanLink","target","CurrencyLogo","size","isArray","dex","logoURL","find","getDexInfoByPool","src","alt","className","isAddress","Routing","currencies","formattedAmounts","maxHeight","useActiveWeb3React","wrapperRef","nativeInputCurrency","useCurrencyConvertedToNative","Field","INPUT","nativeOutputCurrency","OUTPUT","useAllTokens","tradeComposition","useMemo","renderTokenInfo","currencyAmount","field","isOutput","CurrencyAmount","as","hasRoutes","handleScroll","useCallback","scrollTop","scrollHeight","clientHeight","useSwapState","feeConfig","typedValue","outputAmount","memo"],"mappings":"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","file":"static/js/40.d1690ffc.chunk.js","sourcesContent":["import { ZERO } from '@kyberswap/ks-sdk-classic'\r\nimport { ChainId, Percent, Rounding, Token, WETH } from '@kyberswap/ks-sdk-core'\r\nimport JSBI from 'jsbi'\r\n\r\nimport { isAddressString } from 'utils'\r\n\r\nimport { Aggregator } from './aggregator'\r\n\r\nexport interface SwapPool {\r\n  id: string\r\n  exchange: string\r\n  swapAmount?: JSBI\r\n  swapPercentage?: number\r\n}\r\n\r\ntype PathItem = Token\r\n\r\ninterface SwapRoute {\r\n  slug: string\r\n  pools: SwapPool[]\r\n  path: PathItem[]\r\n  id: string\r\n}\r\n\r\nexport interface SwapRouteV2 {\r\n  swapPercentage?: number\r\n  path: PathItem[]\r\n  subRoutes: SwapPool[][]\r\n  id: string\r\n}\r\n\r\nfunction formatRoutesV2(routes: SwapRoute[]): SwapRouteV2[] {\r\n  if (!routes.length) {\r\n    return []\r\n  }\r\n  try {\r\n    let itemIndex = -1\r\n    const routesGroup = routes.reduce((a, b) => {\r\n      let index: number\r\n      let subRoutes: any[][] = []\r\n      let swapPercentage: number = (b.pools && b.pools[0]?.swapPercentage) || 0\r\n      if (a[b.slug]) {\r\n        const route: any = a[b.slug] || {}\r\n        index = route.index\r\n        const temp = route.subRoutes || []\r\n        swapPercentage += route.swapPercentage || 0\r\n        temp.forEach((sub: any[], ind: number) => {\r\n          const swapPool: any = (b.pools && b.pools[ind]) || ({} as any)\r\n          const totalSwapAmount = JSBI.add(\r\n            sub.reduce((sum, x2) => JSBI.add(sum, x2.swapAmount || ZERO), ZERO),\r\n            swapPool.swapAmount || ZERO,\r\n          )\r\n          // merge hop with same pools\r\n          let existed = false\r\n          const newSub: any[] = sub.map(pool => {\r\n            const p2: any = { ...pool }\r\n            const same = p2.id === swapPool.id\r\n            let swapAmount = p2.swapAmount || ZERO\r\n            if (same) {\r\n              existed = true\r\n              swapAmount = JSBI.add(swapAmount, swapPool.swapAmount || ZERO)\r\n            }\r\n            const percent = new Percent(swapAmount, totalSwapAmount).toFixed(0, undefined, Rounding.ROUND_HALF_UP)\r\n            p2.swapPercentage = parseInt(percent)\r\n            p2.total = totalSwapAmount.toString()\r\n            return p2\r\n          })\r\n          if (!existed) {\r\n            const percent = new Percent(swapPool.swapAmount || ZERO, totalSwapAmount).toFixed(\r\n              0,\r\n              undefined,\r\n              Rounding.ROUND_HALF_UP,\r\n            )\r\n            newSub.push({ ...swapPool, swapPercentage: parseInt(percent) })\r\n          }\r\n          subRoutes[ind] = newSub\r\n        })\r\n      } else {\r\n        itemIndex += 1\r\n        index = itemIndex\r\n        subRoutes = b.pools.map(p => [{ ...p, swapPercentage: 100 }])\r\n      }\r\n      return Object.assign({}, a, {\r\n        [b.slug]: { index, swapPercentage, path: b.path, subRoutes },\r\n      })\r\n    }, {} as any)\r\n\r\n    const routesV2Length = Object.keys(routesGroup).length\r\n    const routesV2: SwapRouteV2[] = new Array(routesV2Length).map(() => ({} as SwapRouteV2))\r\n\r\n    Object.values(routesGroup).forEach((route: any) => {\r\n      if (route.index > routesV2Length) return\r\n      routesV2.splice(route.index, 1, {\r\n        swapPercentage: route.swapPercentage,\r\n        path: route.path,\r\n        subRoutes: route.subRoutes,\r\n        id: route.subRoutes\r\n          .flat()\r\n          .map((route: SwapPool) => route.id)\r\n          .join('-'),\r\n      })\r\n    })\r\n    return routesV2\r\n  } catch (e) {\r\n    console.error('[error_routesV2]', e)\r\n    return []\r\n  }\r\n}\r\n\r\nexport function getTradeComposition(\r\n  trade?: Aggregator,\r\n  chainId?: ChainId,\r\n  allTokens?: { [address: string]: Token },\r\n): SwapRouteV2[] | undefined {\r\n  if (!trade || !trade.swaps || !chainId) {\r\n    return undefined\r\n  }\r\n  const inputTokenAmount = trade.inputAmount?.wrapped\r\n\r\n  const calcSwapPercentage = function (tokenIn: string, amount: string): number | undefined {\r\n    if (!tokenIn || !amount) {\r\n      return undefined\r\n    }\r\n    const exactTokenIn = tokenIn?.toLowerCase() === inputTokenAmount?.currency.address?.toLowerCase()\r\n    if (exactTokenIn && trade.inputAmount.greaterThan(JSBI.BigInt(0))) {\r\n      const percent = new Percent(JSBI.BigInt(amount || 0), trade.inputAmount.quotient).toFixed(0)\r\n      return parseInt(percent)\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  const tokens = trade.tokens || ({} as any)\r\n  const defaultToken = new Token(chainId, WETH[chainId].address, 0, '--', '--')\r\n  const routes: SwapRoute[] = []\r\n\r\n  // Convert all Swaps to ChartSwaps\r\n  trade.swaps.forEach(sorMultiSwap => {\r\n    if (sorMultiSwap.length === 1) {\r\n      const hop = sorMultiSwap[0]\r\n      const path = [\r\n        allTokens?.[isAddressString(chainId, hop.tokenIn)] || tokens[hop.tokenIn] || defaultToken,\r\n        allTokens?.[isAddressString(chainId, hop.tokenOut)] || tokens[hop.tokenOut] || defaultToken,\r\n      ]\r\n      routes.push({\r\n        slug: hop.tokenOut?.toLowerCase(),\r\n        pools: [\r\n          {\r\n            id: hop.pool,\r\n            exchange: hop.exchange,\r\n            swapAmount: JSBI.BigInt(hop.swapAmount),\r\n            swapPercentage: calcSwapPercentage(hop.tokenIn, hop.swapAmount),\r\n          },\r\n        ],\r\n        path,\r\n        id: hop.pool,\r\n      })\r\n    } else if (sorMultiSwap.length > 1) {\r\n      const path: PathItem[] = []\r\n      const pools: SwapPool[] = []\r\n      sorMultiSwap.forEach((hop: any, index: number) => {\r\n        pools.push({\r\n          id: hop.pool,\r\n          exchange: hop.exchange,\r\n          swapAmount: JSBI.BigInt(hop.swapAmount),\r\n          swapPercentage: index === 0 ? calcSwapPercentage(hop.tokenIn, hop.swapAmount) : 100,\r\n        })\r\n        if (index === 0) {\r\n          const token = tokens[hop.tokenIn] || defaultToken\r\n          path.push(\r\n            allTokens?.[isAddressString(chainId, token.address)] ||\r\n              new Token(chainId, token.address, token.decimals, token.symbol, token.name),\r\n          )\r\n        }\r\n        const token = tokens[hop.tokenOut] || defaultToken\r\n        path.push(\r\n          allTokens?.[isAddressString(chainId, token.address)] ||\r\n            new Token(chainId, token.address, token.decimals, token.symbol, token.name),\r\n        )\r\n      })\r\n      routes.push({\r\n        slug: path\r\n          .slice(1)\r\n          .map(t => t.address)\r\n          .join('-')\r\n          .toLowerCase(),\r\n        path,\r\n        pools,\r\n        id: pools.map(p => p.id).join('-'),\r\n      })\r\n    }\r\n  })\r\n\r\n  // Convert to ChartSwaps v2\r\n  return formatRoutesV2(routes)\r\n}\r\n","import { ChainId, Currency, CurrencyAmount } from '@kyberswap/ks-sdk-core'\r\nimport React, { memo, useCallback, useEffect, useMemo, useRef } from 'react'\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport useThrottle from 'hooks/useThrottle'\r\nimport { Dex } from 'state/customizeDexes'\r\nimport { useAllDexes } from 'state/customizeDexes/hooks'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useSwapState } from 'state/swap/hooks'\r\nimport { getEtherscanLink, isAddress } from 'utils'\r\nimport { SwapPool, SwapRouteV2, getTradeComposition } from 'utils/aggregationRouting'\r\nimport { Aggregator } from 'utils/aggregator'\r\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\r\n\r\nconst getDexInfoByPool = (pool: SwapPool, allDexes?: Dex[]) => {\r\n  if (pool.exchange === '1inch') {\r\n    return { name: '1inch', logoURL: 'https://s2.coinmarketcap.com/static/img/coins/64x64/8104.png' }\r\n  }\r\n\r\n  if (pool.exchange === 'paraswap') {\r\n    return { name: 'Paraswap', logoURL: 'https://s2.coinmarketcap.com/static/img/coins/64x64/14534.png' }\r\n  }\r\n\r\n  if (pool.exchange === '0x') {\r\n    return { name: '0x', logoURL: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1896.png' }\r\n  }\r\n\r\n  return allDexes?.find(\r\n    dex =>\r\n      dex.id === pool.exchange ||\r\n      ((pool.exchange === 'kyberswap' || pool.exchange === 'kyberswap-static') && dex.id === 'kyberswapv1'), // Mapping for kyberswap classic dex\r\n  )\r\n}\r\n\r\nconst Shadow = styled.div<{ backgroundColor?: string }>`\r\n  position: relative;\r\n  min-height: 0;\r\n  overflow: hidden;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    z-index: 3;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    height: 50px;\r\n    width: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    transition: all 0.2s ease;\r\n    opacity: 0;\r\n  }\r\n\r\n  &:before {\r\n    background: linear-gradient(to bottom, ${({ backgroundColor }) => backgroundColor}, transparent);\r\n    top: 0;\r\n  }\r\n\r\n  &:after {\r\n    background: linear-gradient(to top, ${({ backgroundColor }) => backgroundColor}, transparent);\r\n    bottom: 0;\r\n  }\r\n\r\n  &.top:before,\r\n  &.bottom:after {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst StyledContainer = styled.div`\r\n  flex: 1;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  margin-left: 0;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: transparent;\r\n    border-radius: 999px;\r\n  }\r\n\r\n  &:hover::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.border};\r\n    border-radius: 999px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track-piece {\r\n    background: transparent;\r\n  }\r\n`\r\n\r\nconst StyledPair = styled.div`\r\n  position: relative;\r\n  padding-top: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledPairLine = styled.div`\r\n  flex: auto;\r\n  min-width: 50px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  height: 1px;\r\n`\r\nconst StyledWrapToken = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  min-width: 100px;\r\n  width: max-content;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  min-height: 38px;\r\n  border-radius: 0.5rem;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    min-width: 120px;\r\n  `}\r\n`\r\nconst StyledToken = styled.a<{ reverse?: boolean }>`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.subText};\r\n  ${({ reverse }) =>\r\n    reverse &&\r\n    css`\r\n      flex-direction: row-reverse;\r\n      justify-content: flex-start;\r\n    `}\r\n  padding-bottom: 7px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n\r\n  & > span {\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n  }\r\n`\r\nconst StyledRoutes = styled.div`\r\n  margin: auto;\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 20px 10px 0;\r\n\r\n  &:before {\r\n    position: absolute;\r\n    display: block;\r\n    content: '';\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`\r\nconst StyledRoute = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  position: relative;\r\n  align-items: center;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    border-left: 1px solid ${({ theme }) => theme.border};\r\n    width: 100%;\r\n    height: calc(50% + 20px);\r\n    position: absolute;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n    box-sizing: border-box;\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:before {\r\n    top: -20px;\r\n  }\r\n\r\n  &:after {\r\n    bottom: -10px;\r\n  }\r\n\r\n  &:last-child:after {\r\n    display: none;\r\n  }\r\n`\r\nconst StyledRouteLine = styled.div`\r\n  position: absolute;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  width: calc(100% - 68px);\r\n  left: 43px;\r\n`\r\nconst StyledHops = styled.div<{ length: string | number }>`\r\n  z-index: 1;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledHop = styled.div`\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  height: fit-content;\r\n  position: relative;\r\n  flex: 0 0 146px;\r\n  margin: auto;\r\n  transition: filter 0.15s ease;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    filter: ${({ theme }) => (theme.darkMode ? 'brightness(130%)' : 'brightness(97%)')};\r\n  }\r\n`\r\nconst StyledExchange = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 4px 0;\r\n  margin-top: 4px;\r\n  font-size: 10px;\r\n  border-radius: 8px;\r\n  color: ${({ theme }) => theme.subText};\r\n  line-height: 20px;\r\n  white-space: nowrap;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => (theme.darkMode ? theme.white : theme.black)};\r\n  }\r\n\r\n  & > .img--sm {\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 100%;\r\n    margin-right: 4px;\r\n  }\r\n\r\n  &:first-child {\r\n    margin-top: 8px;\r\n  }\r\n`\r\nconst StyledExchangeStatic = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 4px 0;\r\n  margin-top: 4px;\r\n  font-size: 10px;\r\n  border-radius: 8px;\r\n  color: ${({ theme }) => theme.subText};\r\n  line-height: 20px;\r\n  white-space: nowrap;\r\n  text-decoration: none;\r\n\r\n  & > .img--sm {\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 100%;\r\n    margin-right: 4px;\r\n  }\r\n\r\n  &:first-child {\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nconst StyledPercent = styled.div<{ backgroundColor?: string }>`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  font-weight: 700;\r\n  position: absolute;\r\n  top: calc(50% - 15px);\r\n  left: 8px;\r\n  transform: translateY(50%);\r\n  z-index: 2;\r\n  color: ${({ theme }) => theme.primary};\r\n  background: ${({ backgroundColor }) => backgroundColor};\r\n`\r\nconst StyledDot = styled.i<{ out?: boolean }>`\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${({ out }) => (out ? 'unset' : '6.5px')};\r\n  right: ${({ out }) => (out ? '6.5px' : 'unset')};\r\n  z-index: 1;\r\n  background-color: ${({ theme }) => theme.primary};\r\n`\r\nconst StyledWrap = styled.div<{ backgroundColor?: string }>`\r\n  width: calc(100% - 68px);\r\n  margin: 10px 0 10px 6px;\r\n\r\n  &:after,\r\n  &:before {\r\n    transition: all 0.1s ease;\r\n    content: '';\r\n    display: block;\r\n    z-index: 2;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    inset: 0 0 auto auto;\r\n    width: 40px;\r\n    height: calc(100% - 20px);\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    opacity: 0;\r\n  }\r\n\r\n  &:after {\r\n    background: linear-gradient(to right, ${({ backgroundColor }) => backgroundColor}, transparent);\r\n    left: 42px;\r\n  }\r\n\r\n  &:before {\r\n    background: linear-gradient(to left, ${({ backgroundColor }) => backgroundColor}, transparent);\r\n    right: 24px;\r\n  }\r\n\r\n  &.left-visible:after,\r\n  &.right-visible:before {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst StyledHopChevronRight = styled.div`\r\n  border-top: 5px solid transparent;\r\n  border-bottom: 5px solid transparent;\r\n  border-left: 5px solid ${({ theme }) => theme.primary};\r\n`\r\n\r\nconst StyledHopChevronWrapper = styled.div`\r\n  min-width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1;\r\n`\r\n\r\nconst getSwapPercent = (percent?: number, routeNumber = 0): string | null => {\r\n  if (routeNumber === 1) {\r\n    return '100%'\r\n  }\r\n  if (!percent && percent !== 0) {\r\n    return null\r\n  }\r\n  const val = routeNumber > 1 ? Math.min(99.99, Math.max(0.01, percent)) : percent\r\n  return `${val.toFixed(0)}%`\r\n}\r\n\r\ninterface RouteRowProps {\r\n  route: SwapRouteV2\r\n  chainId: ChainId\r\n  backgroundColor?: string\r\n}\r\n\r\nconst RouteRow = ({ route, chainId, backgroundColor }: RouteRowProps) => {\r\n  const scrollRef = useRef(null)\r\n  const contentRef: any = useRef(null)\r\n  const shadowRef: any = useRef(null)\r\n\r\n  const allDexes = useAllDexes()\r\n\r\n  const handleShadow = useThrottle(() => {\r\n    const element: any = scrollRef.current\r\n    if (element?.scrollLeft > 0) {\r\n      shadowRef.current?.classList.add('left-visible')\r\n    } else {\r\n      shadowRef.current?.classList.remove('left-visible')\r\n    }\r\n\r\n    if (Math.floor(contentRef.current?.scrollWidth - element?.scrollLeft) > Math.floor(element?.clientWidth)) {\r\n      shadowRef.current?.classList.add('right-visible')\r\n    } else {\r\n      shadowRef.current?.classList.remove('right-visible')\r\n    }\r\n  }, 300)\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleShadow)\r\n    return () => window.removeEventListener('resize', handleShadow)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  useEffect(() => {\r\n    handleShadow()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [route])\r\n\r\n  return (\r\n    <StyledWrap ref={shadowRef} backgroundColor={backgroundColor}>\r\n      <ScrollContainer innerRef={scrollRef} vertical={false} onScroll={handleShadow}>\r\n        <StyledHops length={route?.subRoutes?.length} ref={contentRef}>\r\n          {route.subRoutes.map((subRoute, index, arr) => {\r\n            const token = route.path[index + 1]\r\n            const id = subRoute\r\n              .flat()\r\n              .map(item => item.id)\r\n              .join('-')\r\n\r\n            return (\r\n              <React.Fragment key={id}>\r\n                <StyledHop>\r\n                  <StyledToken\r\n                    style={{ marginRight: 0 }}\r\n                    href={getEtherscanLink(chainId, token?.address, 'token')}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <CurrencyLogo currency={token} size=\"16px\" />\r\n                    <span>{token?.symbol}</span>\r\n                  </StyledToken>\r\n                  {Array.isArray(subRoute)\r\n                    ? subRoute.map(pool => {\r\n                        const dex = getDexInfoByPool(pool, allDexes)\r\n                        const link = (i => {\r\n                          return isAddress(chainId, pool.id) ? (\r\n                            <StyledExchange\r\n                              key={`${i}-${pool.id}`}\r\n                              href={getEtherscanLink(chainId, pool.id, 'address')}\r\n                              target=\"_blank\"\r\n                            >\r\n                              {i}\r\n                            </StyledExchange>\r\n                          ) : (\r\n                            <StyledExchangeStatic key={`${i}-${pool.id}`}>{i}</StyledExchangeStatic>\r\n                          )\r\n                        })(\r\n                          <>\r\n                            {dex?.logoURL ? (\r\n                              <img src={dex?.logoURL} alt=\"\" className=\"img--sm\" />\r\n                            ) : (\r\n                              <i className=\"img--sm\" />\r\n                            )}\r\n                            {`${dex?.name || '--'}: ${pool.swapPercentage}%`}\r\n                          </>,\r\n                        )\r\n                        return link\r\n                      })\r\n                    : null}\r\n                </StyledHop>\r\n                {index !== arr.length - 1 && (\r\n                  <StyledHopChevronWrapper>\r\n                    <StyledHopChevronRight />\r\n                  </StyledHopChevronWrapper>\r\n                )}\r\n              </React.Fragment>\r\n            )\r\n          })}\r\n        </StyledHops>\r\n      </ScrollContainer>\r\n    </StyledWrap>\r\n  )\r\n}\r\n\r\ninterface RoutingProps {\r\n  trade?: Aggregator\r\n  currencies: { [field in Field]?: Currency }\r\n  formattedAmounts: { [x: string]: string }\r\n  maxHeight?: string\r\n}\r\n\r\nconst Routing = ({ trade, currencies, formattedAmounts, maxHeight }: RoutingProps) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const shadowRef = useRef<HTMLDivElement>(null)\r\n  const wrapperRef = useRef<HTMLDivElement>(null)\r\n  const contentRef = useRef<HTMLDivElement>(null)\r\n\r\n  const nativeInputCurrency = useCurrencyConvertedToNative(currencies[Field.INPUT] || undefined)\r\n  const nativeOutputCurrency = useCurrencyConvertedToNative(currencies[Field.OUTPUT] || undefined)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  const tradeComposition = useMemo((): SwapRouteV2[] | undefined => {\r\n    try {\r\n      return getTradeComposition(trade, chainId, allTokens)\r\n    } catch (e) {\r\n      return undefined\r\n    }\r\n  }, [trade, chainId, allTokens])\r\n\r\n  const renderTokenInfo = (currencyAmount: CurrencyAmount<Currency> | string | undefined, field: Field) => {\r\n    const isOutput = field === Field.OUTPUT\r\n    const currency =\r\n      currencyAmount instanceof CurrencyAmount\r\n        ? currencyAmount?.currency\r\n        : isOutput\r\n        ? nativeOutputCurrency\r\n        : nativeInputCurrency\r\n\r\n    if (chainId && currency) {\r\n      return (\r\n        <StyledToken as=\"div\" reverse={isOutput} style={{ border: 'none' }}>\r\n          <CurrencyLogo currency={currency} size=\"20px\" />\r\n          <span>{`${currency && formattedAmounts[field] ? formattedAmounts[field] : '0.0'} ${currency.symbol}`}</span>\r\n        </StyledToken>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const hasRoutes = trade && chainId && tradeComposition && tradeComposition.length > 0\r\n\r\n  const handleScroll = useCallback(() => {\r\n    const element = wrapperRef.current\r\n    if ((element?.scrollTop ?? 0) > 0) {\r\n      shadowRef?.current?.classList.add('top')\r\n    } else {\r\n      shadowRef?.current?.classList.remove('top')\r\n    }\r\n    if ((contentRef.current?.scrollHeight ?? 0) - (element?.scrollTop ?? 0) > (element?.clientHeight ?? 0)) {\r\n      shadowRef.current?.classList.add('bottom')\r\n    } else {\r\n      shadowRef.current?.classList.remove('bottom')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleScroll)\r\n    return () => window.removeEventListener('resize', handleScroll)\r\n  }, [handleScroll])\r\n\r\n  useEffect(() => {\r\n    handleScroll()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [trade, maxHeight])\r\n\r\n  const { feeConfig, typedValue } = useSwapState()\r\n\r\n  return (\r\n    <Shadow ref={shadowRef}>\r\n      <StyledContainer ref={wrapperRef} onScroll={handleScroll} style={{ maxHeight: maxHeight || '100%' }}>\r\n        <div ref={contentRef}>\r\n          <StyledPair>\r\n            <StyledWrapToken>\r\n              {renderTokenInfo(!!feeConfig ? typedValue : trade?.inputAmount, Field.INPUT)}\r\n            </StyledWrapToken>\r\n            {!hasRoutes && <StyledPairLine />}\r\n            <StyledWrapToken>{renderTokenInfo(trade?.outputAmount, Field.OUTPUT)}</StyledWrapToken>\r\n          </StyledPair>\r\n\r\n          {trade && chainId && tradeComposition && tradeComposition.length > 0 ? (\r\n            <div>\r\n              <StyledRoutes>\r\n                <StyledDot />\r\n                <StyledDot out />\r\n                {tradeComposition.map(route => (\r\n                  <StyledRoute key={route.id}>\r\n                    <StyledPercent>{getSwapPercent(route.swapPercentage, tradeComposition.length)}</StyledPercent>\r\n                    <StyledRouteLine />\r\n                    <RouteRow route={route} chainId={chainId} />\r\n                    <StyledHopChevronWrapper style={{ marginRight: '2px' }}>\r\n                      <StyledHopChevronRight />\r\n                    </StyledHopChevronWrapper>\r\n                  </StyledRoute>\r\n                ))}\r\n              </StyledRoutes>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </StyledContainer>\r\n    </Shadow>\r\n  )\r\n}\r\n\r\nexport default memo(Routing)\r\n"],"sourceRoot":""}