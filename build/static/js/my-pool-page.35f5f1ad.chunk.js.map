{"version":3,"sources":["components/ClassicElasticTab.tsx","components/Icons/Withdraw.tsx","components/ProAmm/ProAmmFee.tsx","components/SwitchLocaleLink/index.tsx","data/TotalSupply.ts","hooks/useProAmmPositionFees.ts","hooks/useProAmmPositions.ts","hooks/useSyncNetworkParamWithStore.ts","pages/ProAmmPool/PositionListItem.tsx","hooks/useIsTickAtLimit.ts","pages/ProAmmPool/index.tsx","pages/Pool/index.tsx","pages/ProAmmPool/ContentLoader.tsx"],"names":["ClassicElasticTab","useParsedQueryString","tab","tabQS","VERSION","ELASTIC","qs","isInEnum","mixpanelHandler","useMixpanel","chainId","useActiveWeb3React","notSupportedMsg","ELASTIC_NOT_SUPPORTED","theme","useTheme","history","useHistory","isFarmpage","location","pathname","text","alignItems","onClick","newQs","type","MIXPANEL_TYPE","ELASTIC_POOLS_ELASTIC_POOLS_CLICKED","ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED","replace","search","stringify","fontWeight","fontSize","color","disableText","primary","subText","width","marginRight","role","style","cursor","size","marginX","CLASSIC","Withdraw","height","xmlns","viewBox","d","fill","ProAmmFee","tokenId","position","layout","hasUserDepositedInFarm","feeValue0","feeValue1","totalFeeRewardUSD","account","library","useWeb3React","token0Shown","unwrappedToken","pool","token0","token1Shown","token1","addTransactionWithType","useTransactionAdder","positionManager","useProAmmNFTPositionManagerContract","deadline","useTransactionDeadline","useUserSlippageTolerance","allowedSlippage","collect","useCallback","ELASTIC_COLLECT_FEES_INITIATED","token_1","symbol","token_2","NonfungiblePositionManager","collectCallParameters","toString","expectedCurrencyOwed0","subtract","multiply","basisPointsToPercent","expectedCurrencyOwed1","recipient","havingFee","calldata","value","txn","to","address","data","getSigner","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","hash","TRANSACTION_TYPE","COLLECT_FEE","summary","toSignificant","currency","arbitrary","token_1_amount","token_2_amount","catch","error","console","hasNoFeeToCollect","greaterThan","marginTop","padding","gap","marginLeft","formattedNumLong","currencyAmount","placement","sx","pointerEvents","disabled","useCurrentColor","Container","styled","TYPE","small","mediaWidth","upToMedium","SwitchLocaleLink","activeLocale","useActiveLocale","browserLocale","useMemo","navigatorLocale","useLocation","DEFAULT_LOCALE","targetLocale","target","lng","LOCALE_LABEL","useTotalSupply","token","contract","useTokenContract","totalSupply","useSingleCallResult","result","TokenAmount","fromRawAmount","undefined","useProAmmPositionFees","asWETH","tokenIdHexString","toHexString","useProAmmTotalFeeOwedByPosition","current","last24h","length","CurrencyAmount","useProAmmPositionsFromTokenIds","tokenIds","isEVM","networkInfo","inputs","map","results","useSingleContractMultipleData","loading","some","positions","call","i","poolId","getCreate2Address","elastic","coreFactory","keccak256","defaultAbiCoder","encode","info","fee","initCodeHash","feeGrowthInsideLast","pos","nonce","liquidity","operator","tickLower","tickUpper","rTokenOwed","useProAmmPositionsFromTokenId","useProAmmPositions","balanceLoading","balanceResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","BigNumber","from","positionsLoading","useSyncNetworkParamWithStore","params","useParams","changeNetwork","useChangeNetwork","walletEVM","walletSolana","isOnInit","useRef","match","useRouteMatch","triedEager","useEagerConnect","useEffect","network","paramChainId","Object","values","NETWORKS_INFO","find","n","route","path","isSolana","isConnected","TAB","StyledPositionCard","LightCard","background","TabContainer","div","tabBackgound","Tab","ButtonEmpty","isActive","tabActive","TabText","StakedInfo","border","StakedRow","ButtonGroup","PositionListItem","stakedLayout","positionDetails","refe","hasActiveFarm","token0Address","token1Address","feeAmount","stakedLiquidity","farms","useElasticFarms","farmAddress","pid","rewardTokens","forEach","farm","pools","endTime","Date","now","poolAddress","toLowerCase","id","farmContract","useProMMFarmContract","blockLast24h","usePoolBlocks","useState","reward24h","setReward24h","getReward","Promise","all","getUserInfo","res","rewardPending","blockTag","Number","currentReward","last24hReward","item","index","sub","useToken","toLocaleLowerCase","currency0","currency1","prices","useTokenPrices","wrapped","usePool","Position","stakedPosition","usd","parseFloat","amount0","toExact","amount1","stakedUsd","currentFeeValue","last24hFeeValue","positionAPR","toFixed","farmAPR","reduce","usdValue","temp","gt","tickAtLimit","Bound","LOWER","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","UPPER","MAX_TICK","useIsTickAtLimit","priceLower","token0PriceLower","priceUpper","token0PriceUpper","quote","base","getPriceOrderingFromPositionForUI","removed","eq","MY_LIQUIDITY","activeTab","setActiveTab","reasonToDisableRemoveLiquidity","ProAmmPoolInfo","isFarmActive","PRICE_RANGE","formatDollarAmount","apr","ProAmmPooledTokens","valueUSD","liquidityValue0","quotient","liquidityValue1","ProAmmPriceRange","ticksAtLimit","flexDirection","Button","marginBottom","textDecoration","textReverse","as","StyledInternalLink","Link","ELASTIC_REMOVE_LIQUIDITY_INITIATED","fee_tier","borderRadius","currencyId","ELASTIC_INCREASE_LIQUIDITY_INITIATED","Divider","Row","textAlign","href","PROMM_ANALYTICS_URL","ContentLoader","React","memo","TabRow","span","upToLarge","ProAmmPool","tokenAddressSymbolMap","userFarmInfo","farmingPools","flat","farmPositions","depositedPositions","computePoolAddress","factoryAddress","tokenA","tokenB","initCodeHashManualOverride","joinedLiquidity","joinedPositions","joinedPos","nftId","acc","cur","rewardPendings","p","openPositions","closedPositions","searchValueInQs","debouncedSearchText","useDebounce","trim","showClosed","setShowClosed","filteredFarmPositions","includes","filteredPositions","array","findIndex","pos2","showStaked","setShowStaked","upToSmall","useMedia","activeFarmAddress","PageWrapper","InstructionText","Wallet","justifyContent","flex","active","isMobile","backgroundColor","rgba","Tutorial","TutorialType","ELASTIC_MY_POOLS","FilterRow","Toggle","toggle","prev","Search","minWidth","searchValue","onSearch","placeholder","PositionCardGrid","display","lineHeight","Card","body","text3","props","AutoColumn","TitleRow","Flex","shimmer","keyframes","PreloadCard","PoolCombination","Pool","useWindowSize","under768","liquidityPositionTokenPairs","useLiquidityPositionTokenPairs","useUserLiquidityPositions","loadingUserLiquidityPositions","userLiquidityPositions","useFarmsData","farmLoading","searchText","setSearchText","userFarms","JSBI","BigInt","userData","stakedBalance","OUTSIDE_FAIRLAUNCH_ADDRESSES","fairLaunchAddress","tokenPairsWithLiquidityTokens","useToV2LiquidityTokens","liquidityTokens","tpwlt","tokens","useTokenBalancesWithLoadingIndicator","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","lpTokens","lp","liquidityToken","v2Pairs","usePairsByAddress","currencies","v2IsLoading","V2Pair","allV2PairsWithLiquidity","v2Pair","Boolean","v2PairsWithoutStakedAmount","transformedUserLiquidityPositions","liquidityPositions","justify","DMM_ANALYTICS_URL","MYPOOLS_POOLS_VIEWED","MYPOOLS_STAKED_VIEWED","CLASSIC_MY_POOLS","newSearchText","APP_PATHS","FIND_POOL","LocalLoader","StakedPool","pair","myLiquidity","useTotalApr","usePairByAddress","shine","Loading","tableHeader","Title"],"mappings":"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","file":"static/js/my-pool-page.35f5f1ad.chunk.js","sourcesContent":["import { Trans } from '@lingui/macro'\r\nimport { stringify } from 'querystring'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { ELASTIC_NOT_SUPPORTED, VERSION } from 'constants/v2'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { isInEnum } from 'utils/string'\r\n\r\nimport { PoolClassicIcon, PoolElasticIcon } from './Icons'\r\nimport { MouseoverTooltip } from './Tooltip'\r\n\r\nfunction ClassicElasticTab() {\r\n  const { tab: tabQS = VERSION.ELASTIC, ...qs } = useParsedQueryString<{ tab: string }>()\r\n  const tab = isInEnum(tabQS, VERSION) ? tabQS : VERSION.ELASTIC\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n  const notSupportedMsg = ELASTIC_NOT_SUPPORTED[chainId]\r\n\r\n  const theme = useTheme()\r\n  const history = useHistory()\r\n\r\n  const isFarmpage = history.location.pathname === '/farms'\r\n\r\n  return (\r\n    <Flex>\r\n      <MouseoverTooltip text={notSupportedMsg || ''}>\r\n        <Flex\r\n          alignItems={'center'}\r\n          onClick={() => {\r\n            if (!!notSupportedMsg) return\r\n            const newQs = { ...qs, tab: VERSION.ELASTIC }\r\n            let type: MIXPANEL_TYPE | '' = ''\r\n            switch (history.location.pathname) {\r\n              case '/pools':\r\n                type = MIXPANEL_TYPE.ELASTIC_POOLS_ELASTIC_POOLS_CLICKED\r\n                break\r\n              case '/myPools':\r\n                type = MIXPANEL_TYPE.ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED\r\n                break\r\n\r\n              default:\r\n                break\r\n            }\r\n            if (type) mixpanelHandler(type)\r\n            history.replace({ search: stringify(newQs) })\r\n          }}\r\n        >\r\n          <Text\r\n            fontWeight={500}\r\n            fontSize={[18, 20, 24]}\r\n            color={tab === VERSION.ELASTIC ? (!!notSupportedMsg ? theme.disableText : theme.primary) : theme.subText}\r\n            width={'auto'}\r\n            marginRight={'5px'}\r\n            role=\"button\"\r\n            style={{\r\n              cursor: !!notSupportedMsg ? 'not-allowed' : 'pointer',\r\n            }}\r\n          >\r\n            {isFarmpage ? <Trans>Elastic Farms</Trans> : <Trans>Elastic Pools</Trans>}\r\n          </Text>\r\n          <PoolElasticIcon size={20} color={tab === VERSION.ELASTIC ? theme.primary : theme.subText} />\r\n        </Flex>\r\n      </MouseoverTooltip>\r\n      <Text fontWeight={500} fontSize={[18, 20, 24]} color={theme.subText} marginX={'12px'}>\r\n        |\r\n      </Text>\r\n\r\n      <Flex\r\n        alignItems={'center'}\r\n        onClick={() => {\r\n          const newQs = { ...qs, tab: VERSION.CLASSIC }\r\n          history.replace({ search: stringify(newQs) })\r\n        }}\r\n      >\r\n        <Text\r\n          fontWeight={500}\r\n          fontSize={[18, 20, 24]}\r\n          color={tab === VERSION.CLASSIC ? theme.primary : theme.subText}\r\n          width={'auto'}\r\n          marginRight={'5px'}\r\n          style={{ cursor: 'pointer' }}\r\n          role=\"button\"\r\n        >\r\n          {isFarmpage ? <Trans>Classic Farms</Trans> : <Trans>Classic Pools</Trans>}\r\n        </Text>\r\n        <PoolClassicIcon size={20} color={tab === VERSION.ELASTIC ? theme.subText : theme.primary} />\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ClassicElasticTab\r\n","const Withdraw = ({ width, height }: { width?: number; height?: number }) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || 16} height={height || 16} viewBox=\"0 0 16 16\">\r\n      <path\r\n        d=\"M3.33337 3.33317C3.33337 3.69984 3.63337 3.99984 4.00004 3.99984H12C12.3667 3.99984 12.6667 3.69984 12.6667 3.33317C12.6667 2.9665 12.3667 2.6665 12 2.6665H4.00004C3.63337 2.6665 3.33337 2.9665 3.33337 3.33317ZM4.94004 9.33317H6.00004V12.6665C6.00004 13.0332 6.30004 13.3332 6.66671 13.3332H9.33337C9.70004 13.3332 10 13.0332 10 12.6665V9.33317H11.06C11.6534 9.33317 11.9534 8.61317 11.5334 8.19317L8.47337 5.13317C8.21337 4.87317 7.79337 4.87317 7.53337 5.13317L4.47337 8.19317C4.05337 8.61317 4.34671 9.33317 4.94004 9.33317Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Withdraw\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, CurrencyAmount } from '@kyberswap/ks-sdk-core'\r\nimport { NonfungiblePositionManager, Position } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { useCallback } from 'react'\r\nimport { Info } from 'react-feather'\r\nimport { Flex, Text } from 'rebass'\r\n\r\nimport { ButtonLight } from 'components/Button'\r\nimport { OutlineCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport Divider from 'components/Divider'\r\nimport FormattedCurrencyAmount from 'components/FormattedCurrencyAmount'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { useActiveWeb3React, useWeb3React } from 'hooks'\r\nimport { useProAmmNFTPositionManagerContract } from 'hooks/useContract'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { TRANSACTION_TYPE } from 'state/transactions/type'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { basisPointsToPercent, calculateGasMargin, formattedNumLong } from 'utils'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nexport default function ProAmmFee({\r\n  tokenId,\r\n  position,\r\n  layout = 0,\r\n  text = '',\r\n  hasUserDepositedInFarm,\r\n  feeValue0,\r\n  feeValue1,\r\n  totalFeeRewardUSD,\r\n}: {\r\n  totalFeeRewardUSD: number\r\n  tokenId: BigNumber\r\n  position: Position\r\n  layout?: number\r\n  text?: string\r\n  hasUserDepositedInFarm?: boolean\r\n  feeValue0: CurrencyAmount<Currency> | undefined\r\n  feeValue1: CurrencyAmount<Currency> | undefined\r\n}) {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const { library } = useWeb3React()\r\n  const theme = useTheme()\r\n  const token0Shown = unwrappedToken(position.pool.token0)\r\n  const token1Shown = unwrappedToken(position.pool.token1)\r\n  const addTransactionWithType = useTransactionAdder()\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const collect = useCallback(() => {\r\n    if (\r\n      !chainId ||\r\n      !feeValue0 ||\r\n      !feeValue1 ||\r\n      !positionManager ||\r\n      !account ||\r\n      !tokenId ||\r\n      !library ||\r\n      !deadline ||\r\n      !layout\r\n    )\r\n      return\r\n    // setCollecting(true)\r\n    mixpanelHandler(MIXPANEL_TYPE.ELASTIC_COLLECT_FEES_INITIATED, {\r\n      token_1: token0Shown?.symbol,\r\n      token_2: token1Shown?.symbol,\r\n    })\r\n\r\n    const { calldata, value } = NonfungiblePositionManager.collectCallParameters({\r\n      tokenId: tokenId.toString(),\r\n      expectedCurrencyOwed0: feeValue0.subtract(feeValue0.multiply(basisPointsToPercent(allowedSlippage))),\r\n      expectedCurrencyOwed1: feeValue1.subtract(feeValue1.multiply(basisPointsToPercent(allowedSlippage))),\r\n      recipient: account,\r\n      deadline: deadline.toString(),\r\n      havingFee: true,\r\n    })\r\n\r\n    const txn = {\r\n      to: positionManager.address,\r\n      data: calldata,\r\n      value,\r\n    }\r\n\r\n    library\r\n      .getSigner()\r\n      .estimateGas(txn)\r\n      .then((estimate: BigNumber) => {\r\n        const newTxn = {\r\n          ...txn,\r\n          gasLimit: calculateGasMargin(estimate),\r\n        }\r\n        return library\r\n          .getSigner()\r\n          .sendTransaction(newTxn)\r\n          .then((response: TransactionResponse) => {\r\n            addTransactionWithType({\r\n              hash: response.hash,\r\n              type: TRANSACTION_TYPE.COLLECT_FEE,\r\n              summary:\r\n                feeValue0.toSignificant(6) +\r\n                ' ' +\r\n                feeValue0.currency.symbol +\r\n                ' and ' +\r\n                feeValue1.toSignificant(6) +\r\n                ' ' +\r\n                feeValue1.currency.symbol,\r\n              arbitrary: {\r\n                token_1: token0Shown?.symbol,\r\n                token_2: token1Shown?.symbol,\r\n                token_1_amount: feeValue0.toSignificant(6),\r\n                token_2_amount: feeValue1.toSignificant(6),\r\n              },\r\n            })\r\n          })\r\n      })\r\n      .catch((error: any) => {\r\n        console.error(error)\r\n      })\r\n  }, [\r\n    chainId,\r\n    feeValue0,\r\n    feeValue1,\r\n    positionManager,\r\n    account,\r\n    tokenId,\r\n    addTransactionWithType,\r\n    library,\r\n    deadline,\r\n    layout,\r\n    token0Shown,\r\n    token1Shown,\r\n    mixpanelHandler,\r\n    allowedSlippage,\r\n  ])\r\n  const hasNoFeeToCollect = !(feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0))\r\n\r\n  if (layout === 0) {\r\n    return (\r\n      <OutlineCard marginTop=\"1rem\" padding=\"1rem\">\r\n        <AutoColumn gap=\"md\">\r\n          <Text fontSize=\"16px\" fontWeight=\"500\">\r\n            Your Fee Earnings\r\n          </Text>\r\n          {text && (\r\n            <Text color={theme.subText} fontSize=\"12px\">\r\n              {text}\r\n            </Text>\r\n          )}\r\n\r\n          <Divider />\r\n          <RowBetween>\r\n            <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n              <Trans>Total Fees Earned</Trans>\r\n            </Text>\r\n            <RowFixed>\r\n              <Text fontSize={14} fontWeight={500} marginLeft={'6px'}>\r\n                {formattedNumLong(totalFeeRewardUSD, true)}\r\n              </Text>\r\n            </RowFixed>\r\n          </RowBetween>\r\n\r\n          <RowBetween>\r\n            <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n              <Trans>{token0Shown.symbol} Fees Earned</Trans>\r\n            </Text>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"16px\" style={{ marginLeft: '8px' }} currency={token0Shown} />\r\n              <Text fontSize={14} fontWeight={500} marginLeft={'6px'}>\r\n                {feeValue0 && <FormattedCurrencyAmount currencyAmount={feeValue0} />} {token0Shown.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n          </RowBetween>\r\n\r\n          <RowBetween>\r\n            <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n              <Trans>{token1Shown.symbol} Fees Earned</Trans>\r\n            </Text>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"16px\" style={{ marginLeft: '8px' }} currency={token1Shown} />\r\n              <Text fontSize={14} fontWeight={500} marginLeft={'6px'}>\r\n                {feeValue1 && <FormattedCurrencyAmount currencyAmount={feeValue1} />} {token1Shown.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </OutlineCard>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <OutlineCard marginTop=\"1rem\" padding=\"1rem\">\r\n      <AutoColumn gap=\"md\">\r\n        <RowBetween>\r\n          <Flex>\r\n            <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n              <Trans>Total Fees Earned</Trans>\r\n            </Text>\r\n          </Flex>\r\n          <RowFixed>\r\n            <Text fontSize={12} fontWeight={500}>\r\n              {formattedNumLong(totalFeeRewardUSD, true)}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <Flex>\r\n            <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n              <Trans>{token0Shown.symbol} Fees Earned</Trans>\r\n            </Text>\r\n            <QuestionHelper text={t`Your fees are being automatically compounded so you earn more`} />\r\n          </Flex>\r\n          <RowFixed>\r\n            <CurrencyLogo size=\"16px\" style={{ marginLeft: '8px' }} currency={token0Shown} />\r\n            <Text fontSize={12} fontWeight={500} marginLeft={'6px'}>\r\n              {feeValue0 && <FormattedCurrencyAmount currencyAmount={feeValue0} />} {token0Shown.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <Flex>\r\n            <Text fontSize={12} fontWeight={500} color={theme.subText}>\r\n              <Trans>{token1Shown.symbol} Fees Earned</Trans>\r\n            </Text>\r\n            <QuestionHelper text={t`Your fees are being automatically compounded so you earn more`} />\r\n          </Flex>\r\n          <RowFixed>\r\n            <CurrencyLogo size=\"16px\" style={{ marginLeft: '8px' }} currency={token1Shown} />\r\n            <Text fontSize={12} fontWeight={500} marginLeft={'6px'}>\r\n              {feeValue1 && <FormattedCurrencyAmount currencyAmount={feeValue1} />} {token1Shown.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {hasUserDepositedInFarm ? (\r\n          <MouseoverTooltip\r\n            placement=\"top\"\r\n            text={t`You need to withdraw your deposited liquidity position from the Farm first`}\r\n          >\r\n            <Flex\r\n              // this flex looks like redundant\r\n              // but without this, the cursor will be default\r\n              // as we put pointerEvents=none on the button\r\n              sx={{\r\n                cursor: 'not-allowed',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              <ButtonLight\r\n                style={{\r\n                  padding: '10px',\r\n                  fontSize: '14px',\r\n                  width: '100%',\r\n                  pointerEvents: 'none',\r\n                }}\r\n                disabled\r\n              >\r\n                <Flex alignItems=\"center\" sx={{ gap: '8px' }}>\r\n                  <Info size={16} />\r\n                  <Trans>Collect Fees</Trans>\r\n                </Flex>\r\n              </ButtonLight>\r\n            </Flex>\r\n          </MouseoverTooltip>\r\n        ) : (\r\n          <ButtonLight disabled={hasNoFeeToCollect} onClick={collect} style={{ padding: '10px', fontSize: '14px' }}>\r\n            <Flex alignItems=\"center\" sx={{ gap: '8px' }}>\r\n              <QuestionHelper\r\n                placement=\"top\"\r\n                size={16}\r\n                text={\r\n                  hasNoFeeToCollect\r\n                    ? t`You don't have any fees to collect`\r\n                    : t`By collecting, you will receive 100% of your fee earnings`\r\n                }\r\n                useCurrentColor\r\n              />\r\n              <Trans>Collect Fees</Trans>\r\n            </Flex>\r\n          </ButtonLight>\r\n        )}\r\n      </AutoColumn>\r\n    </OutlineCard>\r\n  )\r\n}\r\n","import { stringify } from 'querystring'\r\nimport React, { useMemo } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport styled from 'styled-components'\r\n\r\nimport { DEFAULT_LOCALE, LOCALE_LABEL, SupportedLocale } from 'constants/locales'\r\nimport { navigatorLocale, useActiveLocale } from 'hooks/useActiveLocale'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { StyledInternalLink, TYPE } from 'theme'\r\n\r\nconst Container = styled(TYPE.small)`\r\n  opacity: 0.6;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  margin-top: 1rem !important;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport function SwitchLocaleLink() {\r\n  const activeLocale = useActiveLocale()\r\n  const browserLocale = useMemo(() => navigatorLocale(), [])\r\n  const location = useLocation()\r\n  const qs = useParsedQueryString()\r\n\r\n  if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\r\n    let targetLocale: SupportedLocale\r\n    if (activeLocale === browserLocale) {\r\n      targetLocale = DEFAULT_LOCALE\r\n    } else {\r\n      targetLocale = browserLocale\r\n    }\r\n\r\n    const target = {\r\n      ...location,\r\n      search: stringify({ ...qs, lng: targetLocale }),\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        KyberSwap available in: {<StyledInternalLink to={target}>{LOCALE_LABEL[targetLocale]}</StyledInternalLink>}\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@kyberswap/ks-sdk-core'\r\n\r\nimport { useTokenContract } from 'hooks/useContract'\r\nimport { useSingleCallResult } from 'state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? TokenAmount.fromRawAmount(token, totalSupply.toString()) : undefined\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { CurrencyAmount } from '@kyberswap/ks-sdk-core'\r\nimport { Position } from '@kyberswap/ks-sdk-elastic'\r\n\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nimport { useProAmmTotalFeeOwedByPosition } from './useProAmmPreviousTicks'\r\n\r\nexport function useProAmmPositionFees(tokenId?: BigNumber, position?: Position, asWETH = false) {\r\n  const tokenIdHexString = tokenId?.toHexString()\r\n  const { current, last24h } = useProAmmTotalFeeOwedByPosition(position?.pool, tokenIdHexString)\r\n  if (position && current.length === 2) {\r\n    return {\r\n      current: [\r\n        CurrencyAmount.fromRawAmount(\r\n          !asWETH ? unwrappedToken(position?.pool.token0) : position?.pool.token0,\r\n          current[0],\r\n        ),\r\n        CurrencyAmount.fromRawAmount(\r\n          !asWETH ? unwrappedToken(position?.pool.token1) : position?.pool.token1,\r\n          current[1],\r\n        ),\r\n      ],\r\n\r\n      last24h: [\r\n        CurrencyAmount.fromRawAmount(\r\n          !asWETH ? unwrappedToken(position?.pool.token0) : position?.pool.token0,\r\n          last24h[0],\r\n        ),\r\n        CurrencyAmount.fromRawAmount(\r\n          !asWETH ? unwrappedToken(position?.pool.token1) : position?.pool.token1,\r\n          last24h[1],\r\n        ),\r\n      ],\r\n    }\r\n  } else return { current: [undefined, undefined], last24h: [undefined, undefined] }\r\n}\r\n","import { defaultAbiCoder } from '@ethersproject/abi'\r\nimport { getCreate2Address } from '@ethersproject/address'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { keccak256 } from '@ethersproject/solidity'\r\nimport { useMemo } from 'react'\r\n\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { Result, useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks'\r\nimport { PositionDetails } from 'types/position'\r\n\r\nimport { useProAmmNFTPositionManagerContract } from './useContract'\r\n\r\n//           { \"internalType\": \"uint96\", \"name\": \"nonce\", \"type\": \"uint96\" },\r\n//           { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" },\r\n//           { \"internalType\": \"uint80\", \"name\": \"poolId\", \"type\": \"uint80\" },\r\n//           { \"internalType\": \"int24\", \"name\": \"tickLower\", \"type\": \"int24\" },\r\n//           { \"internalType\": \"int24\", \"name\": \"tickUpper\", \"type\": \"int24\" },\r\n//           { \"internalType\": \"uint128\", \"name\": \"liquidity\", \"type\": \"uint128\" },\r\n//           { \"internalType\": \"uint256\", \"name\": \"rTokenOwed\", \"type\": \"uint256\" },\r\n//           { \"internalType\": \"uint256\", \"name\": \"feeGrowthInsideLast\", \"type\": \"uint256\" }\r\ninterface UseProAmmPositionsResults {\r\n  loading: boolean\r\n  positions: PositionDetails[] | undefined\r\n}\r\n\r\nexport function useProAmmPositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseProAmmPositionsResults {\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const { isEVM, networkInfo } = useActiveWeb3React()\r\n\r\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map(tokenId => [tokenId]) : []), [tokenIds])\r\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\r\n\r\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\r\n  const error = useMemo(() => results.some(({ error }) => error), [results])\r\n\r\n  const positions = useMemo(() => {\r\n    if (!loading && !error && tokenIds && isEVM) {\r\n      return results.map((call, i) => {\r\n        const tokenId = tokenIds[i]\r\n        const result = call.result as Result\r\n\r\n        return {\r\n          tokenId: tokenId,\r\n          poolId: getCreate2Address(\r\n            (networkInfo as EVMNetworkInfo).elastic.coreFactory,\r\n            keccak256(\r\n              ['bytes'],\r\n              [\r\n                defaultAbiCoder.encode(\r\n                  ['address', 'address', 'uint24'],\r\n                  [result.info.token0, result.info.token1, result.info.fee],\r\n                ),\r\n              ],\r\n            ),\r\n            (networkInfo as EVMNetworkInfo).elastic.initCodeHash,\r\n          ),\r\n          feeGrowthInsideLast: result.pos.feeGrowthInsideLast,\r\n          nonce: result.pos.nonce,\r\n          liquidity: result.pos.liquidity,\r\n          operator: result.pos.operator,\r\n          tickLower: result.pos.tickLower,\r\n          tickUpper: result.pos.tickUpper,\r\n          rTokenOwed: result.pos.rTokenOwed,\r\n          fee: result.info.fee,\r\n          token0: result.info.token0,\r\n          token1: result.info.token1,\r\n        }\r\n      })\r\n    }\r\n    return undefined\r\n  }, [loading, error, results, tokenIds, networkInfo, isEVM])\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      loading,\r\n      positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\r\n    }\r\n  }, [loading, positions, inputs])\r\n}\r\n\r\ninterface UseProAmmPositionResults {\r\n  loading: boolean\r\n  position: PositionDetails | undefined\r\n}\r\n\r\nexport function useProAmmPositionsFromTokenId(tokenId: BigNumber | undefined): UseProAmmPositionResults {\r\n  const position = useProAmmPositionsFromTokenIds(tokenId ? [tokenId] : undefined)\r\n  return {\r\n    loading: position.loading,\r\n    position: position.positions?.[0],\r\n  }\r\n}\r\n\r\nexport const useTokenIdsOwnedByAddress = (address: string): { loading: boolean; tokenIds: BigNumber[] } => {\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\r\n    address ?? undefined,\r\n  ])\r\n\r\n  // we don't expect any account balance to ever exceed the bounds of max safe int\r\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\r\n\r\n  const tokenIdsArgs = useMemo(() => {\r\n    if (accountBalance && address) {\r\n      const tokenRequests = []\r\n      for (let i = 0; i < accountBalance; i++) {\r\n        tokenRequests.push([address, i])\r\n      }\r\n      return tokenRequests\r\n    }\r\n    return []\r\n  }, [address, accountBalance])\r\n\r\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\r\n\r\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\r\n  const tokenIds = useMemo(() => {\r\n    if (address) {\r\n      return tokenIdResults\r\n        .map(({ result }) => result)\r\n        .filter((result): result is Result => !!result)\r\n        .map(result => BigNumber.from(result[0]))\r\n    }\r\n    return []\r\n  }, [address, tokenIdResults])\r\n\r\n  return {\r\n    loading: balanceLoading || someTokenIdsLoading,\r\n    tokenIds,\r\n  }\r\n}\r\n\r\nexport function useProAmmPositions(account: string | null | undefined): UseProAmmPositionsResults {\r\n  const positionManager = useProAmmNFTPositionManagerContract()\r\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\r\n    account ?? undefined,\r\n  ])\r\n\r\n  // we don't expect any account balance to ever exceed the bounds of max safe int\r\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\r\n\r\n  const tokenIdsArgs = useMemo(() => {\r\n    if (accountBalance && account) {\r\n      const tokenRequests = []\r\n      for (let i = 0; i < accountBalance; i++) {\r\n        tokenRequests.push([account, i])\r\n      }\r\n      return tokenRequests\r\n    }\r\n    return []\r\n  }, [account, accountBalance])\r\n\r\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\r\n\r\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\r\n  const tokenIds = useMemo(() => {\r\n    if (account) {\r\n      return tokenIdResults\r\n        .map(({ result }) => result)\r\n        .filter((result): result is Result => !!result)\r\n        .map(result => BigNumber.from(result[0]))\r\n    }\r\n    return []\r\n  }, [account, tokenIdResults])\r\n\r\n  const { positions, loading: positionsLoading } = useProAmmPositionsFromTokenIds(tokenIds)\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      loading: someTokenIdsLoading || balanceLoading || positionsLoading,\r\n      positions,\r\n    }\r\n  }, [someTokenIdsLoading, balanceLoading, positionsLoading, positions])\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom'\r\n\r\nimport { NETWORKS_INFO, isEVM, isSolana } from 'constants/networks'\r\nimport { useActiveWeb3React, useEagerConnect } from 'hooks'\r\n\r\nimport { useChangeNetwork } from './useChangeNetwork'\r\n\r\nexport function useSyncNetworkParamWithStore() {\r\n  const params = useParams<{ network?: string }>()\r\n  const changeNetwork = useChangeNetwork()\r\n  const { networkInfo, walletEVM, walletSolana } = useActiveWeb3React()\r\n  const isOnInit = useRef(true)\r\n  const history = useHistory()\r\n  const match = useRouteMatch()\r\n  const triedEager = useEagerConnect()\r\n\r\n  useEffect(() => {\r\n    if (!params?.network) {\r\n      isOnInit.current = false\r\n      return\r\n    }\r\n    if (isOnInit.current) {\r\n      const paramChainId = Object.values(NETWORKS_INFO).find(n => n.route === params?.network)?.chainId\r\n      /**\r\n       * Try to change to network on route param on init. Exp: /swap/ethereum => try to connect to ethereum on init\r\n       * @param isOnInit.current: make sure only run 1 time after init\r\n       * @param triedEager: only run after tried to connect injected wallet\r\n       */\r\n      ;(async () => {\r\n        if (paramChainId && isEVM(paramChainId)) {\r\n          await changeNetwork(paramChainId, undefined, () => {\r\n            history.replace({ pathname: match.path.replace(':network', networkInfo.route) })\r\n          })\r\n        } else if (paramChainId && isSolana(paramChainId)) {\r\n          await changeNetwork(paramChainId)\r\n        }\r\n      })()\r\n    }\r\n    isOnInit.current = false\r\n  }, [\r\n    changeNetwork,\r\n    history,\r\n    params?.network,\r\n    match.path,\r\n    networkInfo.route,\r\n    walletEVM.isConnected,\r\n    walletSolana.isConnected,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Sync network route param with current active network, only after eager tried\r\n     */\r\n    if (networkInfo.route !== params?.network && !isOnInit.current && triedEager) {\r\n      history.replace({ pathname: match.path.replace(':network', networkInfo.route) })\r\n    }\r\n  }, [networkInfo.route, history, triedEager, match.path, params?.network])\r\n}\r\n","import { Currency, CurrencyAmount, Price, Token } from '@kyberswap/ks-sdk-core'\r\nimport { Position } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { stringify } from 'querystring'\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { ButtonEmpty, ButtonOutlined, ButtonPrimary } from 'components/Button'\r\nimport { LightCard } from 'components/Card'\r\nimport Divider from 'components/Divider'\r\nimport ProAmmFee from 'components/ProAmm/ProAmmFee'\r\nimport ProAmmPoolInfo from 'components/ProAmm/ProAmmPoolInfo'\r\nimport ProAmmPooledTokens from 'components/ProAmm/ProAmmPooledTokens'\r\nimport ProAmmPriceRange from 'components/ProAmm/ProAmmPriceRange'\r\nimport { RowBetween } from 'components/Row'\r\nimport { MouseoverTooltip } from 'components/Tooltip'\r\nimport { PROMM_ANALYTICS_URL } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { useProMMFarmContract } from 'hooks/useContract'\r\nimport useIsTickAtLimit from 'hooks/useIsTickAtLimit'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport { usePool } from 'hooks/usePools'\r\nimport { useProAmmPositionFees } from 'hooks/useProAmmPositionFees'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useElasticFarms } from 'state/farms/elastic/hooks'\r\nimport { UserPositionFarm } from 'state/farms/elastic/types'\r\nimport { usePoolBlocks } from 'state/prommPools/hooks'\r\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\r\nimport { ExternalLink, StyledInternalLink } from 'theme'\r\nimport { PositionDetails } from 'types/position'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nimport ContentLoader from './ContentLoader'\r\n\r\nconst StyledPositionCard = styled(LightCard)`\r\n  border: none;\r\n  background: ${({ theme }) => theme.background};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    padding: 16px;\r\n  `}\r\n`\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  border-radius: 999px;\r\n  background-color: ${({ theme }) => theme.tabBackgound};\r\n  padding: 2px;\r\n`\r\n\r\nconst Tab = styled(ButtonEmpty)<{ isActive?: boolean; isLeft?: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  background-color: ${({ theme, isActive }) => (isActive ? theme.tabActive : theme.tabBackgound)};\r\n  padding: 4px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  border-radius: 20px;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst TabText = styled.div<{ isActive: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2px;\r\n  color: ${({ theme, isActive }) => (isActive ? theme.text : theme.subText)};\r\n`\r\n\r\nconst StakedInfo = styled.div`\r\n  border-radius: 4px;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  padding: 12px;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst StakedRow = styled.div`\r\n  line-height: 24px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 12px;\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 20px;\r\n\r\n  > * {\r\n    /* to make sure all immediate buttons take equal width */\r\n    flex: 1 1 50%;\r\n  }\r\n`\r\n\r\nenum TAB {\r\n  MY_LIQUIDITY = 'my-liquidity',\r\n  PRICE_RANGE = 'price-range',\r\n}\r\n\r\ninterface PositionListItemProps {\r\n  positionDetails: PositionDetails | UserPositionFarm\r\n  hasUserDepositedInFarm?: boolean\r\n  stakedLayout?: boolean\r\n  refe?: React.MutableRefObject<any>\r\n  hasActiveFarm: boolean\r\n}\r\n\r\nfunction getPriceOrderingFromPositionForUI(position?: Position): {\r\n  priceLower?: Price<Token, Token>\r\n  priceUpper?: Price<Token, Token>\r\n  quote?: Token\r\n  base?: Token\r\n} {\r\n  if (!position) {\r\n    return {}\r\n  }\r\n  const token0 = position.amount0.currency\r\n  const token1 = position.amount1.currency\r\n  // otherwise, just return the default\r\n  return {\r\n    priceLower: position.token0PriceLower,\r\n    priceUpper: position.token0PriceUpper,\r\n    quote: token1,\r\n    base: token0,\r\n  }\r\n}\r\n\r\nfunction PositionListItem({\r\n  stakedLayout,\r\n  hasUserDepositedInFarm,\r\n  positionDetails,\r\n  refe,\r\n  hasActiveFarm,\r\n}: PositionListItemProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const {\r\n    token0: token0Address,\r\n    token1: token1Address,\r\n    fee: feeAmount,\r\n    liquidity,\r\n    tickLower,\r\n    tickUpper,\r\n    stakedLiquidity,\r\n  } = positionDetails\r\n\r\n  const { farms } = useElasticFarms()\r\n\r\n  let farmAddress = ''\r\n  let pid = ''\r\n  let rewardTokens: Currency[] = []\r\n\r\n  farms?.forEach(farm => {\r\n    farm.pools.forEach(pool => {\r\n      if (pool.endTime > Date.now() / 1000 && pool.poolAddress.toLowerCase() === positionDetails.poolId.toLowerCase()) {\r\n        farmAddress = farm.id\r\n        pid = pool.pid\r\n        rewardTokens = pool.rewardTokens\r\n      }\r\n    })\r\n  })\r\n\r\n  const farmContract = useProMMFarmContract(farmAddress)\r\n\r\n  const { blockLast24h } = usePoolBlocks()\r\n\r\n  const tokenId = positionDetails.tokenId.toString()\r\n\r\n  const [reward24h, setReward24h] = useState<BigNumber[] | null>(null)\r\n  useEffect(() => {\r\n    const getReward = async () => {\r\n      if (blockLast24h && farmContract) {\r\n        const [currentReward, last24hReward] = await Promise.all([\r\n          farmContract\r\n            .getUserInfo(tokenId, pid)\r\n            .then((res: any) => {\r\n              return res.rewardPending\r\n            })\r\n            .catch(() => {\r\n              return []\r\n            }),\r\n          farmContract\r\n            .getUserInfo(tokenId, pid, {\r\n              blockTag: Number(blockLast24h),\r\n            })\r\n            .then((res: any) => {\r\n              return res.rewardPending\r\n            })\r\n            .catch(() => {\r\n              return []\r\n            }),\r\n        ])\r\n\r\n        const rewardPending = currentReward?.map((item: BigNumber, index: number) => {\r\n          return item.sub(BigNumber.from(last24hReward?.[index] || '0'))\r\n        })\r\n\r\n        setReward24h(rewardPending)\r\n      }\r\n    }\r\n\r\n    getReward()\r\n  }, [blockLast24h, farmContract, tokenId, pid])\r\n\r\n  const token0 = useToken(token0Address)\r\n  const token1 = useToken(token1Address)\r\n  if (refe && token0 && !refe.current[token0Address.toLocaleLowerCase()] && token0.symbol) {\r\n    refe.current[token0Address.toLocaleLowerCase()] = token0.symbol.toLowerCase()\r\n  }\r\n  if (refe && token1 && !refe.current[token1Address.toLocaleLowerCase()] && token1.symbol) {\r\n    refe.current[token1Address.toLocaleLowerCase()] = token1.symbol.toLowerCase()\r\n  }\r\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\r\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\r\n\r\n  const prices = useTokenPrices([\r\n    currency0?.wrapped.address || '',\r\n    currency1?.wrapped.address || '',\r\n    ...rewardTokens.map(item => item.wrapped.address),\r\n  ])\r\n\r\n  // construct Position from details returned\r\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, feeAmount)\r\n\r\n  const position = useMemo(() => {\r\n    if (pool) {\r\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\r\n    }\r\n    return undefined\r\n  }, [liquidity, pool, tickLower, tickUpper])\r\n\r\n  const { current, last24h } = useProAmmPositionFees(positionDetails.tokenId, position, false)\r\n\r\n  const stakedPosition =\r\n    pool && hasUserDepositedInFarm\r\n      ? new Position({\r\n          pool,\r\n          liquidity: (positionDetails as UserPositionFarm).stakedLiquidity.toString(),\r\n          tickLower,\r\n          tickUpper,\r\n        })\r\n      : undefined\r\n\r\n  const usd =\r\n    parseFloat(position?.amount0.toExact() || '0') * prices[token0?.wrapped.address || ''] +\r\n    parseFloat(position?.amount1.toExact() || '0') * prices[token1?.wrapped.address || '']\r\n\r\n  const stakedUsd =\r\n    parseFloat(stakedPosition?.amount0.toExact() || '0') * prices[token0?.wrapped.address || ''] +\r\n    parseFloat(stakedPosition?.amount1.toExact() || '0') * prices[token1?.wrapped.address || '']\r\n\r\n  const currentFeeValue =\r\n    Number(current[0]?.toExact() || '0') * prices[token0?.wrapped.address || ''] +\r\n    Number(current[1]?.toExact() || '0') * prices[token1?.wrapped.address || '']\r\n  const last24hFeeValue =\r\n    Number(last24h[0]?.toExact() || '0') * prices[token0?.wrapped.address || ''] +\r\n    Number(last24h[1]?.toExact() || '0') * prices[token1?.wrapped.address || '']\r\n\r\n  const positionAPR =\r\n    currentFeeValue && last24hFeeValue && usd && currentFeeValue > last24hFeeValue\r\n      ? (((currentFeeValue - last24hFeeValue) * 365 * 100) / usd).toFixed(2)\r\n      : '--'\r\n\r\n  const farmRewardValue = rewardTokens.reduce((usdValue, currency, index) => {\r\n    const temp = reward24h?.[index]\r\n    return (\r\n      usdValue +\r\n      +CurrencyAmount.fromRawAmount(currency, temp?.gt('0') ? temp?.toString() : '0').toExact() *\r\n        prices[currency.wrapped.address]\r\n    )\r\n  }, 0)\r\n\r\n  const farmAPR = (farmRewardValue * 365 * 100) / usd\r\n\r\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper)\r\n\r\n  // prices\r\n  const { priceLower, priceUpper } = getPriceOrderingFromPositionForUI(position)\r\n\r\n  const removed = liquidity?.eq(0)\r\n  const theme = useTheme()\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const [activeTab, setActiveTab] = useState(TAB.MY_LIQUIDITY)\r\n  const now = Date.now() / 1000\r\n\r\n  const reasonToDisableRemoveLiquidity = (() => {\r\n    if (removed) {\r\n      return t`You have zero liquidity to remove`\r\n    }\r\n\r\n    if (stakedLiquidity) {\r\n      return t`You need to withdraw your deposited liquidity position from the farms first`\r\n    }\r\n\r\n    return ''\r\n  })()\r\n\r\n  return position && priceLower && priceUpper ? (\r\n    <StyledPositionCard>\r\n      <>\r\n        <ProAmmPoolInfo position={position} tokenId={positionDetails.tokenId.toString()} isFarmActive={hasActiveFarm} />\r\n        <TabContainer style={{ marginTop: '1rem' }}>\r\n          <Tab isActive={activeTab === TAB.MY_LIQUIDITY} padding=\"0\" onClick={() => setActiveTab(TAB.MY_LIQUIDITY)}>\r\n            <TabText isActive={activeTab === TAB.MY_LIQUIDITY} style={{ fontSize: '12px' }}>\r\n              <Trans>My Liquidity</Trans>\r\n            </TabText>\r\n          </Tab>\r\n          <Tab isActive={activeTab === TAB.PRICE_RANGE} padding=\"0\" onClick={() => setActiveTab(TAB.PRICE_RANGE)}>\r\n            <TabText isActive={activeTab === TAB.PRICE_RANGE} style={{ fontSize: '12px' }}>\r\n              <Trans>Price Range</Trans>\r\n            </TabText>\r\n          </Tab>\r\n        </TabContainer>\r\n        {activeTab === TAB.MY_LIQUIDITY && (\r\n          <>\r\n            {!stakedLayout ? (\r\n              <ProAmmPooledTokens\r\n                positionAPR={positionAPR}\r\n                farmAPR={farmAPR}\r\n                valueUSD={usd}\r\n                stakedUsd={stakedUsd}\r\n                liquidityValue0={CurrencyAmount.fromRawAmount(\r\n                  unwrappedToken(position.pool.token0),\r\n                  position.amount0.quotient,\r\n                )}\r\n                liquidityValue1={CurrencyAmount.fromRawAmount(\r\n                  unwrappedToken(position.pool.token1),\r\n                  position.amount1.quotient,\r\n                )}\r\n                layout={1}\r\n              />\r\n            ) : (\r\n              <StakedInfo>\r\n                <StakedRow>\r\n                  <Text color={theme.subText}>\r\n                    <Trans>My Staked Balance</Trans>\r\n                  </Text>\r\n                  <Text>{formatDollarAmount(stakedUsd)}</Text>\r\n                </StakedRow>\r\n\r\n                <StakedRow>\r\n                  <Text color={theme.subText}>\r\n                    <Trans>My Staked {position.amount0.currency.symbol}</Trans>\r\n                  </Text>\r\n                  <Text>{stakedPosition?.amount0.toSignificant(6)}</Text>\r\n                </StakedRow>\r\n\r\n                <StakedRow>\r\n                  <Text color={theme.subText}>\r\n                    <Trans>My Staked {position.amount1.currency.symbol}</Trans>\r\n                  </Text>\r\n                  <Text>{stakedPosition?.amount1.toSignificant(6)}</Text>\r\n                </StakedRow>\r\n\r\n                <StakedRow>\r\n                  <Text color={theme.subText}>\r\n                    <Trans>My Farm APR</Trans>\r\n                  </Text>\r\n                  <Text color={theme.apr}>{farmAPR ? farmAPR.toFixed(2) + '%' : '--'}</Text>\r\n                </StakedRow>\r\n              </StakedInfo>\r\n            )}\r\n            {!stakedLayout && (\r\n              <ProAmmFee\r\n                totalFeeRewardUSD={currentFeeValue}\r\n                feeValue0={current[0]}\r\n                feeValue1={current[1]}\r\n                position={position}\r\n                tokenId={positionDetails.tokenId}\r\n                layout={1}\r\n                hasUserDepositedInFarm={hasUserDepositedInFarm}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {activeTab === TAB.PRICE_RANGE && (\r\n          <ProAmmPriceRange position={position} ticksAtLimit={tickAtLimit} layout={1} />\r\n        )}\r\n        <div style={{ marginTop: '20px' }} />\r\n        <Flex flexDirection={'column'} marginTop=\"auto\">\r\n          {stakedLayout ? (\r\n            <ButtonPrimary\r\n              style={{ marginBottom: '20px', textDecoration: 'none', color: theme.textReverse, fontSize: '14px' }}\r\n              padding=\"8px\"\r\n              as={StyledInternalLink}\r\n              to={`/farms?${stringify({\r\n                tab: 'elastic',\r\n                type: positionDetails.endTime ? (positionDetails.endTime > now ? 'active' : 'ended') : 'active',\r\n                search: positionDetails.poolId,\r\n              })}`}\r\n            >\r\n              <Trans>Go to Farm</Trans>\r\n            </ButtonPrimary>\r\n          ) : (\r\n            <ButtonGroup>\r\n              {reasonToDisableRemoveLiquidity ? (\r\n                <MouseoverTooltip text={reasonToDisableRemoveLiquidity} placement=\"top\">\r\n                  <Flex\r\n                    // this flex looks like redundant\r\n                    // but without this, the cursor will be default\r\n                    // as we put pointerEvents=none on the button\r\n                    sx={{\r\n                      cursor: 'not-allowed',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <ButtonOutlined\r\n                      style={{\r\n                        padding: '8px',\r\n                        width: '100%',\r\n                        pointerEvents: 'none',\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <Text width=\"max-content\" fontSize=\"14px\">\r\n                        <Trans>Remove Liquidity</Trans>\r\n                      </Text>\r\n                    </ButtonOutlined>\r\n                  </Flex>\r\n                </MouseoverTooltip>\r\n              ) : (\r\n                <ButtonOutlined\r\n                  padding=\"8px\"\r\n                  as={Link}\r\n                  to={`/elastic/remove/${positionDetails.tokenId}`}\r\n                  onClick={() => {\r\n                    mixpanelHandler(MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_INITIATED, {\r\n                      token_1: token0?.symbol || '',\r\n                      token_2: token1?.symbol || '',\r\n                      fee_tier: (pool?.fee as number) / 10000,\r\n                    })\r\n                  }}\r\n                >\r\n                  <Text width=\"max-content\" fontSize=\"14px\">\r\n                    <Trans>Remove Liquidity</Trans>\r\n                  </Text>\r\n                </ButtonOutlined>\r\n              )}\r\n\r\n              {removed ? (\r\n                <ButtonPrimary disabled padding=\"8px\">\r\n                  <Text width=\"max-content\" fontSize=\"14px\">\r\n                    <Trans>Increase Liquidity</Trans>\r\n                  </Text>\r\n                </ButtonPrimary>\r\n              ) : (\r\n                <ButtonPrimary\r\n                  padding=\"8px\"\r\n                  style={{\r\n                    borderRadius: '18px',\r\n                    fontSize: '14px',\r\n                  }}\r\n                  as={Link}\r\n                  to={`/elastic/increase/${currencyId(currency0, chainId)}/${currencyId(\r\n                    currency1,\r\n                    chainId,\r\n                  )}/${feeAmount}/${positionDetails.tokenId}`}\r\n                  onClick={() => {\r\n                    mixpanelHandler(MIXPANEL_TYPE.ELASTIC_INCREASE_LIQUIDITY_INITIATED, {\r\n                      token_1: token0?.symbol || '',\r\n                      token_2: token1?.symbol || '',\r\n                      fee_tier: (pool?.fee as number) / 10000,\r\n                    })\r\n                  }}\r\n                >\r\n                  <Text width=\"max-content\" fontSize=\"14px\">\r\n                    <Trans>Increase Liquidity</Trans>\r\n                  </Text>\r\n                </ButtonPrimary>\r\n              )}\r\n            </ButtonGroup>\r\n          )}\r\n          <Divider sx={{ marginBottom: '20px' }} />\r\n          <RowBetween>\r\n            <ButtonEmpty width=\"max-content\" style={{ fontSize: '14px' }} padding=\"0\">\r\n              <ExternalLink\r\n                style={{ width: '100%', textAlign: 'center' }}\r\n                href={`${PROMM_ANALYTICS_URL[chainId]}/pool/${positionDetails.poolId.toLowerCase()}`}\r\n              >\r\n                <Trans>Pool Analytics ↗</Trans>\r\n              </ExternalLink>\r\n            </ButtonEmpty>\r\n\r\n            {hasUserDepositedInFarm && (\r\n              <ButtonEmpty width=\"max-content\" style={{ fontSize: '14px' }} padding=\"0\">\r\n                <StyledInternalLink style={{ width: '100%', textAlign: 'center' }} to=\"/farms\">\r\n                  <Trans>Go to Farms ↗</Trans>\r\n                </StyledInternalLink>\r\n              </ButtonEmpty>\r\n            )}\r\n          </RowBetween>\r\n        </Flex>\r\n      </>\r\n    </StyledPositionCard>\r\n  ) : (\r\n    <ContentLoader />\r\n  )\r\n}\r\n\r\nexport default React.memo(PositionListItem)\r\n","import { FeeAmount, TICK_SPACINGS, TickMath, nearestUsableTick } from '@kyberswap/ks-sdk-elastic'\r\nimport { useMemo } from 'react'\r\n\r\nimport { Bound } from 'state/mint/proamm/actions'\r\n\r\nexport default function useIsTickAtLimit(\r\n  feeAmount: FeeAmount | undefined,\r\n  tickLower: number | undefined,\r\n  tickUpper: number | undefined,\r\n) {\r\n  return useMemo(\r\n    () => ({\r\n      [Bound.LOWER]:\r\n        feeAmount && tickLower\r\n          ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\r\n          : undefined,\r\n      [Bound.UPPER]:\r\n        feeAmount && tickUpper\r\n          ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\r\n          : undefined,\r\n    }),\r\n    [feeAmount, tickLower, tickUpper],\r\n  )\r\n}\r\n","import { computePoolAddress } from '@kyberswap/ks-sdk-elastic'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { rgba } from 'polished'\r\nimport { useMemo, useRef, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { Info } from 'react-feather'\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport Wallet from 'components/Icons/Wallet'\r\nimport Search from 'components/Search'\r\nimport SubscribeNotificationButton from 'components/SubscribeButton'\r\nimport Toggle from 'components/Toggle'\r\nimport Tutorial, { TutorialType } from 'components/Tutorial'\r\nimport { PROMM_ANALYTICS_URL } from 'constants/index'\r\nimport { EVMNetworkInfo } from 'constants/networks/type'\r\nimport { VERSION } from 'constants/v2'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport { NOTIFICATION_TOPICS } from 'hooks/useNotification'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { useProAmmPositions } from 'hooks/useProAmmPositions'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { FilterRow, InstructionText, PageWrapper, PositionCardGrid, Tab } from 'pages/Pool'\r\nimport { FarmUpdater, useElasticFarms } from 'state/farms/elastic/hooks'\r\nimport { ExternalLink, StyledInternalLink, TYPE } from 'theme'\r\nimport { PositionDetails } from 'types/position'\r\n\r\nimport ContentLoader from './ContentLoader'\r\nimport PositionListItem from './PositionListItem'\r\n\r\nconst Hightlight = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n`\r\nconst StyledText = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  color: ${({ theme }) => theme.subText};\r\n`\r\n\r\nconst TabRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 12px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToLarge`\r\n    gap: 1rem;\r\n    width: 100%;\r\n    flex-direction: column;\r\n  `}\r\n`\r\n\r\ninterface AddressSymbolMapInterface {\r\n  [key: string]: string\r\n}\r\n\r\nconst renderNotificationButton = (iconOnly: boolean) => {\r\n  return null // temp off feature, will release soon\r\n  return (\r\n    <SubscribeNotificationButton\r\n      iconOnly={iconOnly}\r\n      topicId={NOTIFICATION_TOPICS.POSITION_POOL}\r\n      unsubscribeModalContent={\r\n        <StyledText>\r\n          Unsubscribe to stop receiving notifications on <Hightlight>all</Hightlight> your liquidity positions\r\n        </StyledText>\r\n      }\r\n      unsubscribeTooltip={\r\n        <StyledText>\r\n          Unsubscribe to stop receiving notifications on <Hightlight>all</Hightlight> your liquidity positions\r\n        </StyledText>\r\n      }\r\n      subscribeModalContent={\r\n        <>\r\n          <StyledText>\r\n            <Trans>\r\n              You can subscribe to email notifications for your liquidity positions. Whenever your position goes{' '}\r\n              <Hightlight>out-of-range</Hightlight>, comes back <Hightlight>in-range</Hightlight>, or is{' '}\r\n              <Hightlight>closed</Hightlight> you will receive a notification.\r\n            </Trans>\r\n          </StyledText>\r\n          <br />\r\n          <StyledText>\r\n            <Trans>\r\n              You can enable or disable notifications for individual positions by clicking on the toggle on top of the\r\n              liquidity positions card\r\n            </Trans>\r\n          </StyledText>\r\n        </>\r\n      }\r\n      subscribeTooltip={\r\n        <div>\r\n          <Trans>\r\n            Subscribe to receive email notifications on <Hightlight>all</Hightlight> your liquidity positions. When your\r\n            liquidity position goes <Hightlight>out-of-range</Hightlight>, back <Hightlight>in-range</Hightlight> or is{' '}\r\n            <Hightlight>closed</Hightlight> you will receive a notification\r\n          </Trans>\r\n        </div>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ProAmmPool() {\r\n  const { account, chainId, isEVM, networkInfo } = useActiveWeb3React()\r\n  const tokenAddressSymbolMap = useRef<AddressSymbolMapInterface>({})\r\n  const { positions, loading: positionsLoading } = useProAmmPositions(account)\r\n\r\n  const { farms, loading, userFarmInfo } = useElasticFarms()\r\n\r\n  const farmingPools = useMemo(() => farms?.map(farm => farm.pools).flat() || [], [farms])\r\n\r\n  const farmPositions = useMemo(() => {\r\n    if (!isEVM) return []\r\n    return Object.values(userFarmInfo || {})\r\n      .map(info => {\r\n        return info.depositedPositions\r\n          .map(pos => {\r\n            const poolAddress = computePoolAddress({\r\n              factoryAddress: (networkInfo as EVMNetworkInfo).elastic.coreFactory,\r\n              tokenA: pos.pool.token0,\r\n              tokenB: pos.pool.token1,\r\n              fee: pos.pool.fee,\r\n              initCodeHashManualOverride: (networkInfo as EVMNetworkInfo).elastic.initCodeHash,\r\n            })\r\n            const pool = farmingPools.filter(pool => pool.poolAddress.toLowerCase() === poolAddress.toLowerCase())\r\n\r\n            const joinedLiquidity =\r\n              // I'm sure we can always find pool\r\n              // eslint-disable-next-line\r\n              Object.values(info.joinedPositions)\r\n                .flat()\r\n                .filter(joinedPos => joinedPos.nftId.toString() === pos.nftId.toString())\r\n                .reduce(\r\n                  (acc, cur) =>\r\n                    acc.gt(BigNumber.from(cur.liquidity.toString())) ? acc : BigNumber.from(cur.liquidity.toString()),\r\n                  BigNumber.from(0),\r\n                ) || BigNumber.from(0)\r\n\r\n            return {\r\n              nonce: BigNumber.from('1'),\r\n              tokenId: pos.nftId,\r\n              operator: '0x0000000000000000000000000000000000000000',\r\n              poolId: poolAddress,\r\n              tickLower: pos.tickLower,\r\n              tickUpper: pos.tickUpper,\r\n              liquidity: BigNumber.from(pos.liquidity.toString()),\r\n              // not used\r\n              feeGrowthInsideLast: BigNumber.from(0),\r\n              stakedLiquidity: joinedLiquidity,\r\n              // not used\r\n              rTokenOwed: BigNumber.from(0),\r\n              token0: pos.pool.token0.address,\r\n              token1: pos.pool.token1.address,\r\n              fee: pos.pool.fee,\r\n              endTime: pool?.[0]?.endTime,\r\n              rewardPendings: [],\r\n            }\r\n          })\r\n          .flat()\r\n      })\r\n      .flat()\r\n  }, [farmingPools, userFarmInfo, isEVM, networkInfo])\r\n\r\n  const [openPositions, closedPositions] = useMemo(\r\n    () =>\r\n      positions?.reduce<[PositionDetails[], PositionDetails[]]>(\r\n        (acc, p) => {\r\n          acc[p.liquidity?.eq(0) ? 1 : 0].push(p)\r\n          return acc\r\n        },\r\n        [[], []],\r\n      ) ?? [[], []],\r\n    [positions],\r\n  )\r\n\r\n  const theme = useTheme()\r\n\r\n  const { search: searchValueInQs = '', tab = VERSION.ELASTIC } = useParsedQueryString<{\r\n    search: string\r\n    tab: string\r\n  }>()\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const onSearch = (search: string) => {\r\n    history.replace(location.pathname + '?search=' + search + '&tab=' + tab)\r\n  }\r\n\r\n  const debouncedSearchText = useDebounce(searchValueInQs.trim().toLowerCase(), 300)\r\n\r\n  const [showClosed, setShowClosed] = useState(false)\r\n\r\n  const filteredFarmPositions = useMemo(\r\n    () =>\r\n      farmPositions.filter(pos => {\r\n        return (\r\n          debouncedSearchText.trim().length === 0 ||\r\n          (!!tokenAddressSymbolMap.current[pos.token0.toLowerCase()] &&\r\n            tokenAddressSymbolMap.current[pos.token0.toLowerCase()].includes(debouncedSearchText)) ||\r\n          (!!tokenAddressSymbolMap.current[pos.token1.toLowerCase()] &&\r\n            tokenAddressSymbolMap.current[pos.token1.toLowerCase()].includes(debouncedSearchText)) ||\r\n          pos.poolId.toLowerCase() === debouncedSearchText\r\n        )\r\n      }),\r\n    [debouncedSearchText, farmPositions],\r\n  )\r\n\r\n  const filteredPositions = useMemo(\r\n    () =>\r\n      (!showClosed\r\n        ? [...openPositions, ...filteredFarmPositions]\r\n        : [...openPositions, ...filteredFarmPositions, ...closedPositions]\r\n      )\r\n        .filter(position => {\r\n          return (\r\n            debouncedSearchText.trim().length === 0 ||\r\n            (!!tokenAddressSymbolMap.current[position.token0.toLowerCase()] &&\r\n              tokenAddressSymbolMap.current[position.token0.toLowerCase()].includes(debouncedSearchText)) ||\r\n            (!!tokenAddressSymbolMap.current[position.token1.toLowerCase()] &&\r\n              tokenAddressSymbolMap.current[position.token1.toLowerCase()].includes(debouncedSearchText)) ||\r\n            position.poolId.toLowerCase() === debouncedSearchText\r\n          )\r\n        })\r\n        .filter((pos, index, array) => array.findIndex(pos2 => pos2.tokenId.eq(pos.tokenId)) === index),\r\n    [showClosed, openPositions, closedPositions, debouncedSearchText, filteredFarmPositions],\r\n  )\r\n\r\n  const [showStaked, setShowStaked] = useState(false)\r\n\r\n  const upToSmall = useMedia('(max-width: 768px)')\r\n\r\n  const activeFarmAddress = useMemo(() => {\r\n    const now = Date.now() / 1000\r\n    return (\r\n      farms\r\n        ?.map(farm => farm.pools)\r\n        .flat()\r\n        ?.filter(farm => farm.endTime >= now)\r\n        .map(farm => farm.poolAddress.toLowerCase()) || []\r\n    )\r\n  }, [farms])\r\n\r\n  if (!isEVM) return <Redirect to=\"/\" />\r\n  return (\r\n    <>\r\n      <PageWrapper style={{ padding: 0, marginTop: '24px' }}>\r\n        <AutoColumn gap=\"lg\" style={{ width: '100%' }}>\r\n          <InstructionText>\r\n            <Trans>Here you can view all your liquidity and staked balances in the Elastic Pools</Trans>\r\n            {!upToSmall && (\r\n              <ExternalLink href={`${PROMM_ANALYTICS_URL[chainId]}/account/${account}`}>\r\n                <Flex alignItems=\"center\">\r\n                  <Wallet size={16} />\r\n                  <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n                    <Trans>Analyze Wallet</Trans> ↗\r\n                  </Text>\r\n                </Flex>\r\n              </ExternalLink>\r\n            )}\r\n          </InstructionText>\r\n          <TabRow>\r\n            <Flex justifyContent=\"space-between\" flex={1} alignItems=\"center\" width=\"100%\">\r\n              <Flex sx={{ gap: '1rem' }} alignItems=\"center\">\r\n                <Tab\r\n                  active={!showStaked}\r\n                  role=\"button\"\r\n                  onClick={() => {\r\n                    setShowStaked(false)\r\n                  }}\r\n                >\r\n                  <Trans>My Positions</Trans>\r\n                </Tab>\r\n\r\n                <Tab\r\n                  active={showStaked}\r\n                  onClick={() => {\r\n                    setShowStaked(true)\r\n                  }}\r\n                  role=\"button\"\r\n                >\r\n                  {isMobile ? <Trans>Farming Positions</Trans> : <Trans>My Farming Positions</Trans>}\r\n                </Tab>\r\n              </Flex>\r\n\r\n              {upToSmall && (\r\n                <Flex sx={{ gap: '8px' }}>\r\n                  <ExternalLink href={`${PROMM_ANALYTICS_URL[chainId]}/account/${account}`}>\r\n                    <Flex\r\n                      sx={{ borderRadius: '50%' }}\r\n                      width=\"36px\"\r\n                      backgroundColor={rgba(theme.subText, 0.2)}\r\n                      height=\"36px\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                    >\r\n                      <Wallet size={16} color={theme.subText} />\r\n                    </Flex>\r\n                  </ExternalLink>\r\n                  <Tutorial type={TutorialType.ELASTIC_MY_POOLS} />\r\n                  {renderNotificationButton(true)}\r\n                </Flex>\r\n              )}\r\n            </Flex>\r\n            <FilterRow>\r\n              <Flex alignItems=\"center\" style={{ gap: '8px' }}>\r\n                <Text fontSize=\"14px\" color={theme.subText}>\r\n                  <Trans>Show closed positions</Trans>\r\n                </Text>\r\n                <Toggle isActive={showClosed} toggle={() => setShowClosed(prev => !prev)} />\r\n              </Flex>\r\n              <Search\r\n                minWidth=\"254px\"\r\n                searchValue={searchValueInQs}\r\n                onSearch={onSearch}\r\n                placeholder={t`Search by token or pool address`}\r\n              />\r\n              {!upToSmall && (\r\n                <>\r\n                  <Tutorial type={TutorialType.ELASTIC_MY_POOLS} />\r\n                  {renderNotificationButton(false)}\r\n                </>\r\n              )}\r\n            </FilterRow>\r\n          </TabRow>\r\n\r\n          {!account ? (\r\n            <Card padding=\"40px\">\r\n              <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                <Trans>Connect to a wallet to view your liquidity.</Trans>\r\n              </TYPE.body>\r\n            </Card>\r\n          ) : (positionsLoading && !positions) || (loading && !farms && !userFarmInfo) ? (\r\n            <PositionCardGrid>\r\n              <ContentLoader />\r\n              <ContentLoader />\r\n              <ContentLoader />\r\n            </PositionCardGrid>\r\n          ) : filteredPositions.length > 0 || filteredFarmPositions.length > 0 ? (\r\n            <>\r\n              {/* Use display attribute here instead of condition rendering to prevent re-render full list when toggle showStaked => increase performance */}\r\n              <PositionCardGrid style={{ display: showStaked ? 'none' : 'grid' }}>\r\n                {filteredPositions.map(p => (\r\n                  <PositionListItem\r\n                    refe={tokenAddressSymbolMap}\r\n                    positionDetails={p}\r\n                    key={p.tokenId.toString()}\r\n                    hasUserDepositedInFarm={!!p.stakedLiquidity}\r\n                    hasActiveFarm={activeFarmAddress.includes(p.poolId.toLowerCase())}\r\n                  />\r\n                ))}\r\n              </PositionCardGrid>\r\n              <PositionCardGrid style={{ display: !showStaked ? 'none' : 'grid' }}>\r\n                {filteredFarmPositions.map(p => {\r\n                  return (\r\n                    <PositionListItem\r\n                      key={p.tokenId.toString()}\r\n                      stakedLayout\r\n                      hasUserDepositedInFarm\r\n                      refe={tokenAddressSymbolMap}\r\n                      positionDetails={p}\r\n                      hasActiveFarm={activeFarmAddress.includes(p.poolId.toLowerCase())}\r\n                    />\r\n                  )\r\n                })}\r\n              </PositionCardGrid>\r\n            </>\r\n          ) : (\r\n            <Flex flexDirection=\"column\" alignItems=\"center\" marginTop=\"60px\">\r\n              <Info size={48} color={theme.subText} />\r\n              <Text fontSize={16} lineHeight={1.5} color={theme.subText} textAlign=\"center\" marginTop=\"1rem\">\r\n                <Trans>\r\n                  No liquidity found. Check out our{' '}\r\n                  <StyledInternalLink to=\"/pools?tab=elastic\">Pools.</StyledInternalLink>\r\n                </Trans>\r\n              </Text>\r\n            </Flex>\r\n          )}\r\n        </AutoColumn>\r\n      </PageWrapper>\r\n      <FarmUpdater />\r\n    </>\r\n  )\r\n}\r\n","import { JSBI, Pair } from '@kyberswap/ks-sdk-classic'\r\nimport { Token, TokenAmount } from '@kyberswap/ks-sdk-core'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { rgba } from 'polished'\r\nimport { useMemo, useState } from 'react'\r\nimport { Info } from 'react-feather'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { Flex, Text } from 'rebass'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport Card from 'components/Card'\r\nimport ClassicElasticTab from 'components/ClassicElasticTab'\r\nimport { AutoColumn } from 'components/Column'\r\nimport Wallet from 'components/Icons/Wallet'\r\nimport Withdraw from 'components/Icons/Withdraw'\r\nimport LocalLoader from 'components/LocalLoader'\r\nimport FullPositionCard from 'components/PositionCard'\r\nimport { AutoRow } from 'components/Row'\r\nimport Search from 'components/Search'\r\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\r\nimport Tutorial, { TutorialType } from 'components/Tutorial'\r\nimport { APP_PATHS, DMM_ANALYTICS_URL, OUTSIDE_FAIRLAUNCH_ADDRESSES } from 'constants/index'\r\nimport { VERSION } from 'constants/v2'\r\nimport { usePairByAddress, usePairsByAddress } from 'data/Reserves'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { useSyncNetworkParamWithStore } from 'hooks/useSyncNetworkParamWithStore'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useWindowSize } from 'hooks/useWindowSize'\r\nimport ProAmmPool from 'pages/ProAmmPool'\r\nimport { useFarmsData, useTotalApr } from 'state/farms/hooks'\r\nimport { Farm } from 'state/farms/types'\r\nimport { UserLiquidityPosition, useUserLiquidityPositions } from 'state/pools/hooks'\r\nimport { useLiquidityPositionTokenPairs, useToV2LiquidityTokens } from 'state/user/hooks'\r\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\r\nimport { ExternalLink, StyledInternalLink, TYPE } from 'theme'\r\n\r\nexport const Tab = styled.div<{ active: boolean }>`\r\n  padding: 4px 0;\r\n  color: ${({ active, theme }) => (active ? theme.primary : theme.subText)};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  :hover {\r\n    color: ${props => props.theme.primary};\r\n  }\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    font-size: 15px;\r\n  `};\r\n`\r\n\r\nexport const PageWrapper = styled(AutoColumn)`\r\n  padding: 32px 0 100px;\r\n  width: 100%;\r\n  max-width: 1224px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToLarge`\r\n    padding: 24px 12px 100px;\r\n    max-width: 832px;\r\n  `}\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    max-width: 392px;\r\n  `};\r\n`\r\n\r\nexport const InstructionText = styled.div`\r\n  width: 100%;\r\n  padding: 16px 0;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.subText};\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport const TitleRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 12px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    gap: 1rem;\r\n    width: 100%;\r\n    flex-direction: column;\r\n  `};\r\n`\r\n\r\nexport const PositionCardGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: minmax(392px, auto) minmax(392px, auto) minmax(392px, auto);\r\n  gap: 24px;\r\n  max-width: 1224px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToLarge`\r\n    grid-template-columns: 1fr 1fr;\r\n    max-width: 832px;\r\n  `}\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    grid-template-columns: 1fr;\r\n    max-width: 392px;\r\n  `};\r\n`\r\n\r\nexport const FilterRow = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 12px;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToLarge`\r\n      width: 100%;\r\n      justify-content: flex-end;\r\n  `}\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    align-items: flex-start;\r\n    flex-direction: column-reverse;\r\n    gap: 0;\r\n\r\n    > div {\r\n      margin-top: 12px;\r\n      width: 100%\r\n      justify-content: space-between\r\n      &:nth-child(1){\r\n        margin-top: 20px\r\n      }\r\n    }\r\n  `}\r\n`\r\n\r\nconst shimmer = keyframes`\r\n    100% {\r\n      transform: translateX(100%);\r\n    }\r\n`\r\n\r\nexport const PreloadCard = styled.div<{ width?: string; height?: string }>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  height: ${({ height }) => height ?? '436px'};\r\n  background: ${({ theme }) => theme.background};\r\n  border-radius: 8px;\r\n  position: relative;\r\n  display: inline-block;\r\n  overflow: hidden;\r\n\r\n  &::after {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform: translateX(-100%);\r\n    background-image: linear-gradient(90deg, rgba(#fff, 0) 0, rgba(#fff, 0.2) 20%, rgba(#fff, 0.5) 60%, rgba(#fff, 0));\r\n    animation: ${shimmer} 2s infinite;\r\n\r\n    content: '';\r\n  }\r\n`\r\nexport default function PoolCombination() {\r\n  const { tab = VERSION.ELASTIC } = useParsedQueryString<{\r\n    tab: string\r\n  }>()\r\n\r\n  return (\r\n    <>\r\n      <PageWrapper>\r\n        <AutoColumn>\r\n          <ClassicElasticTab />\r\n        </AutoColumn>\r\n        {tab === VERSION.ELASTIC ? <ProAmmPool /> : <Pool />}\r\n      </PageWrapper>\r\n      <SwitchLocaleLink />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Pool() {\r\n  const theme = useTheme()\r\n  const { account, chainId, isEVM } = useActiveWeb3React()\r\n  const { width } = useWindowSize()\r\n\r\n  const under768 = width && width <= 768\r\n\r\n  const liquidityPositionTokenPairs = useLiquidityPositionTokenPairs()\r\n  const { loading: loadingUserLiquidityPositions, data: userLiquidityPositions } = useUserLiquidityPositions()\r\n\r\n  const { data: farms, loading: farmLoading } = useFarmsData()\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n  const debouncedSearchText = useDebounce(searchText.trim().toLowerCase(), 300)\r\n\r\n  useSyncNetworkParamWithStore()\r\n\r\n  const userFarms = useMemo(\r\n    () =>\r\n      Object.values(farms)\r\n        .flat()\r\n        .filter(\r\n          farm =>\r\n            JSBI.greaterThan(JSBI.BigInt(farm.userData?.stakedBalance || 0), JSBI.BigInt(0)) &&\r\n            !OUTSIDE_FAIRLAUNCH_ADDRESSES[farm.fairLaunchAddress],\r\n        ),\r\n    [farms],\r\n  )\r\n\r\n  const tokenPairsWithLiquidityTokens = useToV2LiquidityTokens(liquidityPositionTokenPairs)\r\n\r\n  const liquidityTokens = useMemo(\r\n    () => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityTokens),\r\n    [tokenPairsWithLiquidityTokens],\r\n  )\r\n\r\n  const tokens = useMemo(() => liquidityTokens.flat(), [liquidityTokens])\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(tokens)\r\n\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      liquidityTokens.reduce<{ liquidityToken: Token; tokens: [Token, Token] }[]>((acc, lpTokens, index) => {\r\n        lpTokens\r\n          .filter((lp: Token) => v2PairsBalances[lp.address]?.greaterThan('0'))\r\n          .forEach((lp: Token) => {\r\n            acc.push({ liquidityToken: lp, tokens: tokenPairsWithLiquidityTokens[index].tokens })\r\n          })\r\n        return acc\r\n      }, []),\r\n    [tokenPairsWithLiquidityTokens, liquidityTokens, v2PairsBalances],\r\n  )\r\n\r\n  const v2Pairs = usePairsByAddress(\r\n    liquidityTokensWithBalances.map(({ liquidityToken, tokens }) => ({\r\n      address: liquidityToken.address,\r\n      currencies: tokens,\r\n    })),\r\n  )\r\n\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances ||\r\n    v2Pairs?.length < liquidityTokensWithBalances.length ||\r\n    v2Pairs?.some(V2Pair => !V2Pair[1])\r\n\r\n  const allV2PairsWithLiquidity = useMemo(\r\n    () => v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair)),\r\n    [v2Pairs],\r\n  )\r\n\r\n  // // remove any pairs that also are included in pairs with stake in mining pool\r\n  const v2PairsWithoutStakedAmount = useMemo(\r\n    () =>\r\n      allV2PairsWithLiquidity\r\n        .filter(v2Pair => {\r\n          return debouncedSearchText\r\n            ? v2Pair.token0.symbol?.toLowerCase().includes(debouncedSearchText) ||\r\n                v2Pair.token1.symbol?.toLowerCase().includes(debouncedSearchText) ||\r\n                v2Pair.address.toLowerCase() === debouncedSearchText\r\n            : true\r\n        })\r\n        .filter(v2Pair => !userFarms.map(farm => farm.id.toLowerCase()).includes(v2Pair.address.toLowerCase())),\r\n    [allV2PairsWithLiquidity, debouncedSearchText, userFarms],\r\n  )\r\n\r\n  const transformedUserLiquidityPositions: {\r\n    [key: string]: UserLiquidityPosition\r\n  } = {}\r\n\r\n  userLiquidityPositions?.liquidityPositions.forEach((position: UserLiquidityPosition) => {\r\n    transformedUserLiquidityPositions[position.pool.id] = position\r\n  })\r\n\r\n  const [showStaked, setShowStaked] = useState(false)\r\n\r\n  const loading = v2IsLoading || loadingUserLiquidityPositions || farmLoading\r\n\r\n  const { mixpanelHandler } = useMixpanel()\r\n\r\n  const upToSmall = useMedia('(max-width: 768px)')\r\n\r\n  if (!isEVM) return <Redirect to=\"/\" />\r\n  return (\r\n    <>\r\n      <PageWrapper style={{ padding: 0, marginTop: '24px' }}>\r\n        <AutoColumn gap=\"lg\" justify=\"center\">\r\n          <AutoColumn gap=\"lg\" style={{ width: '100%' }}>\r\n            <AutoRow>\r\n              <InstructionText>\r\n                <Trans>Here you can view all your liquidity and staked balances in the Classic Pools</Trans>\r\n                {!upToSmall && (\r\n                  <ExternalLink href={`${DMM_ANALYTICS_URL[chainId]}/account/${account}`}>\r\n                    <Flex alignItems=\"center\">\r\n                      <Wallet size={16} />\r\n                      <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n                        <Trans>Analyze Wallet</Trans> ↗\r\n                      </Text>\r\n                    </Flex>\r\n                  </ExternalLink>\r\n                )}\r\n              </InstructionText>\r\n            </AutoRow>\r\n            <TitleRow>\r\n              <Flex justifyContent=\"space-between\" flex={1} alignItems=\"center\" width=\"100%\">\r\n                <Flex sx={{ gap: '1.5rem' }} alignItems=\"center\">\r\n                  <Tab\r\n                    active={!showStaked}\r\n                    onClick={() => {\r\n                      if (showStaked) {\r\n                        mixpanelHandler(MIXPANEL_TYPE.MYPOOLS_POOLS_VIEWED)\r\n                      }\r\n                      setShowStaked(false)\r\n                    }}\r\n                    role=\"button\"\r\n                  >\r\n                    <Trans>My Pools</Trans>\r\n                  </Tab>\r\n                  <Tab\r\n                    active={showStaked}\r\n                    onClick={() => {\r\n                      if (!showStaked) {\r\n                        mixpanelHandler(MIXPANEL_TYPE.MYPOOLS_STAKED_VIEWED)\r\n                      }\r\n                      setShowStaked(true)\r\n                    }}\r\n                    role=\"button\"\r\n                  >\r\n                    <Trans>My Staked Pools</Trans>\r\n                  </Tab>\r\n                </Flex>\r\n\r\n                {upToSmall && (\r\n                  <Flex sx={{ gap: '12px' }}>\r\n                    <ExternalLink href={`${DMM_ANALYTICS_URL[chainId]}/account/${account}`}>\r\n                      <Flex\r\n                        sx={{ borderRadius: '50%' }}\r\n                        width=\"36px\"\r\n                        backgroundColor={rgba(theme.subText, 0.2)}\r\n                        height=\"36px\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                      >\r\n                        <Wallet size={16} color={theme.subText} />\r\n                      </Flex>\r\n                    </ExternalLink>\r\n\r\n                    <Tutorial type={TutorialType.CLASSIC_MY_POOLS} />\r\n                  </Flex>\r\n                )}\r\n              </Flex>\r\n\r\n              <Flex\r\n                alignItems=\"center\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-end\"\r\n                sx={{ gap: '12px' }}\r\n                width={under768 ? '100%' : undefined}\r\n              >\r\n                <Search\r\n                  style={{ width: 'unset', flex: under768 ? 1 : undefined }}\r\n                  minWidth={under768 ? '224px' : '254px'}\r\n                  searchValue={searchText}\r\n                  onSearch={(newSearchText: string) => setSearchText(newSearchText)}\r\n                  placeholder={t`Search by token name or pool address`}\r\n                />\r\n\r\n                <ButtonPrimary\r\n                  as={StyledInternalLink}\r\n                  to={APP_PATHS.FIND_POOL}\r\n                  style={{\r\n                    color: theme.textReverse,\r\n                    padding: '10px 12px',\r\n                    fontSize: '14px',\r\n                    width: 'max-content',\r\n                    height: '36px',\r\n                    textDecoration: 'none',\r\n                  }}\r\n                >\r\n                  <Withdraw />\r\n                  <Text marginLeft=\"4px\">\r\n                    <Trans>Import Pool</Trans>\r\n                  </Text>\r\n                </ButtonPrimary>\r\n\r\n                {!upToSmall && <Tutorial type={TutorialType.CLASSIC_MY_POOLS} />}\r\n              </Flex>\r\n            </TitleRow>\r\n\r\n            {!account ? (\r\n              <Card padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  <Trans>Connect to a wallet to view your liquidity.</Trans>\r\n                </TYPE.body>\r\n              </Card>\r\n            ) : !showStaked ? (\r\n              loading && !v2PairsWithoutStakedAmount.length && !userFarms.length ? (\r\n                <PositionCardGrid>\r\n                  <PreloadCard></PreloadCard>\r\n                  <PreloadCard></PreloadCard>\r\n                  <PreloadCard></PreloadCard>\r\n                </PositionCardGrid>\r\n              ) : v2PairsWithoutStakedAmount?.length > 0 || !!userFarms.length ? (\r\n                <>\r\n                  <PositionCardGrid>\r\n                    {v2PairsWithoutStakedAmount.map(v2Pair => {\r\n                      const farm = Object.values(farms)\r\n                        .flat()\r\n                        .find(farm => farm.id.toLowerCase() === v2Pair.address.toLowerCase())\r\n\r\n                      return (\r\n                        <FullPositionCard\r\n                          key={v2Pair.liquidityToken.address}\r\n                          pair={v2Pair}\r\n                          myLiquidity={transformedUserLiquidityPositions[v2Pair.address.toLowerCase()]}\r\n                          farm={farm}\r\n                          tab=\"ALL\"\r\n                        />\r\n                      )\r\n                    })}\r\n\r\n                    {userFarms\r\n                      .filter(\r\n                        farm =>\r\n                          farm.token0.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n                          farm.token1.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n                          farm.id.toLowerCase() === debouncedSearchText,\r\n                      )\r\n                      .map(farm => (\r\n                        <StakedPool\r\n                          farm={farm}\r\n                          key={farm.id}\r\n                          userLiquidityPositions={userLiquidityPositions?.liquidityPositions}\r\n                          tab={'ALL'}\r\n                        />\r\n                      ))}\r\n                  </PositionCardGrid>\r\n                  <Text fontSize={16} color={theme.subText} textAlign=\"center\" marginTop=\"1rem\">\r\n                    {t`Don't see a pool you joined?`}{' '}\r\n                    <StyledInternalLink id=\"import-pool-link\" to={APP_PATHS.FIND_POOL}>\r\n                      <Trans>Import it.</Trans>\r\n                    </StyledInternalLink>\r\n                  </Text>\r\n                </>\r\n              ) : (\r\n                <Flex flexDirection=\"column\" alignItems=\"center\" marginTop=\"60px\">\r\n                  <Info size={48} color={theme.subText} />\r\n                  <Text fontSize={16} lineHeight={1.5} color={theme.subText} textAlign=\"center\" marginTop=\"1rem\">\r\n                    <Trans>\r\n                      No liquidity found. Check out our{' '}\r\n                      <StyledInternalLink to=\"/pools?tab=classic\">Pools.</StyledInternalLink>\r\n                    </Trans>\r\n                    <br />\r\n                    {t`Don't see a pool you joined?`}{' '}\r\n                    <StyledInternalLink id=\"import-pool-link\" to={APP_PATHS.FIND_POOL}>\r\n                      <Trans>Import it.</Trans>\r\n                    </StyledInternalLink>\r\n                  </Text>\r\n                </Flex>\r\n              )\r\n            ) : loading && !userFarms.length ? (\r\n              <LocalLoader />\r\n            ) : !!userFarms.length ? (\r\n              <>\r\n                <PositionCardGrid>\r\n                  {userFarms\r\n                    .filter(\r\n                      farm =>\r\n                        farm.token0.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n                        farm.token1.symbol.toLowerCase().includes(debouncedSearchText) ||\r\n                        farm.id.toLowerCase() === debouncedSearchText,\r\n                    )\r\n                    .map(farm => (\r\n                      <StakedPool\r\n                        farm={farm}\r\n                        key={farm.id}\r\n                        userLiquidityPositions={userLiquidityPositions?.liquidityPositions}\r\n                        tab=\"STAKED\"\r\n                      />\r\n                    ))}\r\n                </PositionCardGrid>\r\n                <Text fontSize={16} color={theme.subText} textAlign=\"center\" marginTop=\"1rem\">\r\n                  {t`Don't see a pool you joined?`}{' '}\r\n                  <StyledInternalLink id=\"import-pool-link\" to={APP_PATHS.FIND_POOL}>\r\n                    <Trans>Import it.</Trans>\r\n                  </StyledInternalLink>\r\n                </Text>\r\n              </>\r\n            ) : (\r\n              <Flex flexDirection=\"column\" alignItems=\"center\" marginTop=\"60px\">\r\n                <Info size={48} color={theme.subText} />\r\n                <Text fontSize={16} lineHeight={1.5} color={theme.subText} textAlign=\"center\" marginTop=\"1rem\">\r\n                  <Trans>\r\n                    No staked liquidity found. Check out our <StyledInternalLink to=\"/farms\">Farms.</StyledInternalLink>\r\n                  </Trans>\r\n                </Text>\r\n              </Flex>\r\n            )}\r\n          </AutoColumn>\r\n        </AutoColumn>\r\n      </PageWrapper>\r\n      <SwitchLocaleLink />\r\n    </>\r\n  )\r\n}\r\n\r\nconst StakedPool = ({\r\n  farm,\r\n  userLiquidityPositions,\r\n  tab,\r\n}: {\r\n  farm: Farm\r\n  tab: 'ALL' | 'STAKED'\r\n  userLiquidityPositions?: UserLiquidityPosition[]\r\n}) => {\r\n  const token0 = useToken(farm.token0?.id) || undefined\r\n  const token1 = useToken(farm.token1?.id) || undefined\r\n  const { farmAPR } = useTotalApr(farm)\r\n\r\n  const pair = usePairByAddress(token0?.wrapped, token1?.wrapped, farm.id)[1]\r\n\r\n  if (!pair) return <PreloadCard />\r\n\r\n  return (\r\n    <FullPositionCard\r\n      pair={pair}\r\n      stakedBalance={TokenAmount.fromRawAmount(pair.liquidityToken, farm.userData?.stakedBalance || '0')}\r\n      myLiquidity={userLiquidityPositions?.find(position => position.pool.id === pair.address)}\r\n      farm={farm}\r\n      farmAPR={farmAPR}\r\n      tab={tab}\r\n    />\r\n  )\r\n}\r\n","import { Flex } from 'rebass'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nimport Divider from 'components/Divider'\r\n\r\nconst shine = keyframes`\r\n  to {\r\n    background-position-x: -200%;\r\n  }\r\n`\r\n\r\nconst StyledPositionCard = styled.div`\r\n  border: none;\r\n  background: ${({ theme }) => theme.background};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  padding: 28px 20px 16px;\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const Loading = styled.div`\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme }) => theme.tableHeader} 8%,\r\n    ${({ theme }) => theme.tableHeader} 18%,\r\n    ${({ theme }) => theme.tableHeader} 33%\r\n  );\r\n  border-radius: 20px;\r\n  background-size: 200% 100%;\r\n  animation: 1.5s ${shine} linear infinite;\r\n`\r\n\r\nconst Title = styled(Loading)`\r\n  height: 41px;\r\n`\r\n\r\nconst Tab = styled(Loading)`\r\n  height: 28px;\r\n  border-radius: 999px;\r\n`\r\n\r\nfunction ContentLoader() {\r\n  return (\r\n    <StyledPositionCard>\r\n      <Title />\r\n      <Tab />\r\n      <Loading style={{ height: '104px' }} />\r\n      <Loading style={{ height: '128px' }} />\r\n\r\n      <Flex>\r\n        <Loading style={{ height: '36px', flex: 1, borderRadius: '999px' }} />\r\n        <Loading style={{ height: '36px', flex: 1, marginLeft: '1rem', borderRadius: '999px' }} />\r\n      </Flex>\r\n\r\n      <Divider />\r\n\r\n      <Loading style={{ height: '15px', width: '80px', borderRadius: '999px' }} />\r\n    </StyledPositionCard>\r\n  )\r\n}\r\n\r\nexport default ContentLoader\r\n"],"sourceRoot":""}